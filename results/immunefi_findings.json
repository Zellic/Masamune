[{"title": "Moonbeam, Astar, And Acala Library Truncation Bugfix Review \u2014 $1m Payout", "html_url": "https://medium.com/immunefi/moonbeam-astar-and-acala-library-truncation-bugfix-review-1m-payout-41a862877a5b", "body": "The bug, which was found within Frontier  the Substrate pallet that provides core Ethereum compatibility features within the Polkadot ecosystemimpacted Moonbeam, Astar Network, and Acala. The estimated potential damage from the vulnerability amounted to approximately $200m across the three projects, which was swiftly prevented", "labels": ["Minting new valid but depegged wrapped tokens."]}, {"title": "88MPH Theft Of Unclaimed MPH Rewards Bugfix Review", "html_url": "https://medium.com/immunefi/88mph-theft-of-unclaimed-mph-rewards-bugfix-review-1dec98b9956b", "body": "Allowed users to steal most of the 88MPH tokens generated from yield contract by depositing an asset and withdrawing the vested 88mph tokens immediately.", "labels": ["Theft of funds."]}, {"title": "Mt Pelerin Double Transaction Bugfix Review", "html_url": "https://medium.com/immunefi/mt-pelerin-double-transaction-bugfix-review-503838db3d70", "body": "The bug could have allowed users to drain contract funds.", "labels": ["Theft of funds."]}, {"title": "Aurora Improper Input Sanitization Bugfix Review", "html_url": "https://medium.com/immunefi/aurora-improper-input-sanitization-bugfix-review-a9376dac046f", "body": "Improper impot sanitazion that allowed a bad actor to steal funds using a worthless NEP-141.", "labels": ["Improper Input Sanitization"]}, {"title": "Aurora Withdrawal Logic Error Bugfix Review", "html_url": "https://medium.com/immunefi/aurora-withdrawal-logic-error-bugfix-review-c5b4e30a9160", "body": "Unknown, check manually", "labels": ["Logic", " Bridge"]}, {"title": "Moonbeam Missing Call Check", "html_url": "https://medium.com/immunefi/moonbeam-missing-call-check-bugfix-review-6279d609bdc5 ", "body": "Missing call check vulnerability that allows direct theft of native assets.", "labels": ["Missing call check", " theft of funds."]}, {"title": "Balancer DoS", "html_url": "https://medium.com/immunefi/balancer-dos-bugfix-review-8a8ba5d971bf ", "body": "Unknown, check manually", "labels": ["DoS"]}, {"title": "Two Novel Crypto Wallet Exploits, Explained", "html_url": "https://medium.com/immunefi/two-novel-crypto-wallet-exploits-explained-98e74e50d13f ", "body": "Unknown, check manually", "labels": ["hardware"]}, {"title": "Synthetix Logic Error Bugfix Review", "html_url": "https://medium.com/immunefi/synthetix-logic-error-bugfix-review-40da0ead5f4f ", "body": "Logic vulnerability in the fee reclamation and rebate features in Synthetix.", "labels": ["logic"]}, {"title": "Port Finance Logic Error Bugfix Review", "html_url": "https://medium.com/immunefi/port-finance-logic-error-bugfix-review-29767aced446 ", "body": "A malicious user could have withdrawn all their obligation collaterals without paying off their full debt.", "labels": ["logic"]}, {"title": "Sense Finance Access Control Issue Bugfix Review", "html_url": "https://medium.com/immunefi/sense-finance-access-control-issue-bugfix-review-32e0c806b1a0 ", "body": "Missing access control issue in the onSwap() function of the Sense Balancer pool that could have allowed a malicious actor to update the oracle data of the Space AMM contract", "labels": ["access control"]}, {"title": "Aurora Inflation Spend Bugfix Review: $6m Payout", "html_url": "https://medium.com/immunefi/aurora-infinite-spend-bugfix-review-6m-payout-e635d24273d ", "body": "The vulnerability consisted of an infinite spend bug that, if exploited by a malicious user, could have led to a direct loss of 70k ETH and $200m in other assets.", "labels": ["infinite spend"]}, {"title": "Wormhole Uninitialized Proxy Bugfix Review", "html_url": "https://medium.com/immunefi/wormhole-uninitialized-proxy-bugfix-review-90250c41a43a ", "body": "Upgradeable proxy implementation self-destruct bug that helped prevent a potential lockup of user funds", "labels": ["upgradeable proxy"]}, {"title": "Redacted Cartel Custom Approval Logic Bugfix Review", "html_url": "https://medium.com/immunefi/redacted-cartel-custom-approval-logic-bugfix-review-9b2d039ca2c5", "body": "The vulnerability would have allowed a malicious attacker to assign a users allowance to themselves, enabling the attacker to steal that users funds.", "labels": ["Logic and allowance."]}, {"title": "Optimism Infinite Money Duplication", "html_url": "https://medium.com/immunefi/optimism-infinite-money-duplication-bugfix-review-daa6597146a0", "body": "The bug would have allowed an attacker to replicate money continuously on any chain using a vulnerability found in OVM 2.0 (Optimism Virtual Machine)", "labels": ["Logic", " OVM(EVM equivalent)"]}, {"title": "Polygon Consensus Bypass", "html_url": "https://medium.com/immunefi/polygon-consensus-bypass-bugfix-review-7076ce5047fe", "body": "Consensus bypass vulnerability that would have allowed an attacker to decrease the total staking power, allowing a consensus ( threshold) bypass that could potentially have allowed an attacker to drain all the funds from the deposit manager, engage in unlimited withdrawals, DoS, and more.", "labels": ["PoS Consensus bypass"]}, {"title": "APWine Incorrect Check of Delegations", "html_url": "https://medium.com/immunefi/apwine-incorrect-check-of-delegations-bugfix-review-7e401a49c04f", "body": "In the PT tokens, one condition wasnt checked during the burn of those tokens which could lead to the theft of the yield from the protocol after the two periods.", "labels": ["Logic error"]}, {"title": "Notional Double Counting Free Collateral", "html_url": "https://medium.com/immunefi/notional-double-counting-free-collateral-bugfix-review-28b634903934", "body": "Free collateral miscalculation and overpricing by a factor of two could allow a bad actor to drain almost all liquidity.", "labels": ["Logic error - Miscalculation"]}, {"title": "Cronos Theft of Transactions Fees", "html_url": "https://medium.com/immunefi/cronos-theft-of-transactions-fees-bugfix-postmortem-b33f941b9570", "body": "The vulnerability that could allow stealing the fees of the current block in Cronos Blockchain", "labels": ["theft of yield"]}, {"title": "Bitswift Unlimited Mint", "html_url": "https://medium.com/immunefi/bitswift-unlimited-mint-bugfix-postmortem-147a1e57dca9", "body": "A front-end critical vulnerability that could allow minting an infinite amount of tokens.", "labels": ["Insecure front-end", " mint."]}, {"title": "Polygon Lack of Balance Check", "html_url": "https://medium.com/immunefi/polygon-lack-of-balance-check-bugfix-postmortem-2-2m-bounty-64ec66c24c7d", "body": "The vulnerability consisted of a lack of balance/allowance check in the `transfer()` function of Polygons MRC20 contract and would have allowed an attacker to steal all MATIC from the contract.", "labels": ["Lack of balance check."]}, {"title": "Enzyme Finance Price Oracle Manipulation", "html_url": "https://medium.com/immunefi/enzyme-finance-price-oracle-manipulation-bug-fix-postmortem-4e1f3d4201b5", "body": "Vulnerability Type: flash loan/oracle price manipulation.", "labels": ["Unknown", " check manually"]}, {"title": "Harvest Finance Uninitialized Proxies", "html_url": "https://medium.com/immunefi/harvest-finance-uninitialized-proxies-bug-fix-postmortem-ea5c0f7af96b", "body": "The Dedaub team filed a submission via Immunefi for uninitialized implementation contracts for Uniswap V3 vault proxies. The contracts in scope held a total of $6.4M in Uniswap V3 positions at the time of the submission.", "labels": ["Uninitialized Proxies", " Access control."]}, {"title": "Polygon Double-Spend", "html_url": "https://medium.com/immunefi/polygon-double-spend-bug-fix-postmortem-2m-bounty-5a1db09db7f1", "body": "The vulnerability allowed an attacker to exit their burn transaction from the bridge multiple times, up to 223 times. There were around ~$850M at risk. Having just $100k to launch the attack with would result in $22.3M in loss!", "labels": ["Bridge manipulation."]}, {"title": "RocketPool and Lido Front-running", "html_url": "https://medium.com/immunefi/rocketpool-lido-frontrunning-bug-fix-postmortem-e701f26d7971", "body": "The vulnerability allowed a malicious node operator included in Lido or RocketPool to steal user deposits frontrunning the deposit.", "labels": ["Frontrunning"]}, {"title": "Belt finance logic error", "html_url": "https://medium.com/immunefi/belt-finance-logic-error-bug-fix-postmortem-39308a158291", "body": "A logic error caused one of the contracts to think it had less money than it did, resulting in excess shares being issued for new deposits.", "labels": ["Logic Error"]}, {"title": "OpenZeppelin Bugfix Review", "html_url": "https://medium.com/immunefi/openzeppelin-bug-fix-postmortem-66d8c89ed166", "body": "Critical reentrancy vulnerability in OpenZeppelins TimelockController, where the executor was able to hijack the controller and set the delay to 0, remove the existing proposers, set themselves as the proposer and take over the Timelock and the contracts associated with it.", "labels": ["Re-entrancy", " Access control"]}, {"title": "Tidal Finance Logic Error", "html_url": "https://medium.com/immunefi/tidal-finance-logic-error-bug-fix-postmortem-3607d8b7ed1f", "body": "The logic error permitted a malicious user to claim more rewards from staking than they were entitled to.", "labels": ["Logic Error - Excess rewards"]}, {"title": "xDai Stake Arbitrary Call Method", "html_url": "https://medium.com/immunefi/xdai-stake-arbitrary-call-method-bug-postmortem-f80a90ac56e3", "body": "The bug allowed a potentially malicious hacker to gain access to funds in a contract.", "labels": ["Arbitrary call method"]}, {"title": "Teller uninitialized proxy", "html_url": "https://medium.com/immunefi/teller-bug-fix-postmorten-and-bug-bounty-launch-b3f67a65c5ac", "body": "The beacon proxy was not initialized and could have been initialized by anyone, including a hypothetical malicious attacker.", "labels": ["Uninitialized proxy"]}, {"title": "Alchemix access control", "html_url": "https://medium.com/immunefi/alchemix-access-control-bug-fix-debrief-a13d39b9f2e0", "body": "Any user could have called setWhitelist() to give an attacker the ability to call the harvest function.", "labels": ["Access control"]}, {"title": "MCDex Insufficient Validation", "html_url": "https://medium.com/immunefi/mcdex-insufficient-validation-bug-fix-postmortem-182fc6cab899", "body": "A critical vulnerability in MCDEXs broker contract that would have allowed a malicious user to drain that contract of ETH", "labels": ["Unknown", " check manually"]}, {"title": "PancakeSwap Logic Error", "html_url": "https://medium.com/immunefi/pancakeswap-logic-error-bug-fix-postmortem-f2d02adb6983", "body": "Due to insufficient validation, a malicious user could have claimed the same winning lottery ticket at least 255 times in a single transaction.", "labels": ["Logic Error - insufficient validation"]}, {"title": "Cream Finance", "html_url": "https://medium.com/immunefi/cream-finance-insufficient-validation-bug-fix-postmortem-1ec7248e8865", "body": "A malicious user drains Creams liquidity mining rewards contract using the front-end and different wallets.", "labels": ["Front-end - Insufficient Validation"]}, {"title": "Pods Finance", "html_url": "https://medium.com/immunefi/pods-finance-bug-fix-postmortem-61a576897ebd", "body": "This logic error allows for theft of yield or abuse of the rewards system. A bad actor was able to claim rewards owed to other users and drain the entire contract.", "labels": ["Logic Error - Improper Validation"]}, {"title": "Mushrooms Finance Logic Error", "html_url": "https://medium.com/immunefi/mushrooms-finance-logic-error-bug-fix-postmortem-780122821621", "body": "A logic error leading to a flash loan attack vector.", "labels": ["Logic Error", " Flash loan"]}, {"title": "SharedStake Insider Exploit", "html_url": "https://medium.com/immunefi/sharedstake-insider-exploit-postmortem-17fa93d5c90e", "body": "This vulnerability allowed the beneficiary of the time-locked funds to transfer out those funds before those funds were scheduled to be released.", "labels": ["Arbitrary call"]}, {"title": "Zapper Arbitrary Call Data", "html_url": "https://medium.com/immunefi/zapper-arbitrary-call-data-bug-fix-postmortem-d75a4a076ae9", "body": "Using the arbitrary call an attacker could call transferFrom and since there was no validation of the data provided, the contract will be forced to transfer all the LP tokens from any victim to the attacker.", "labels": ["Arbitrary call"]}, {"title": "88mph Function Initialization", "html_url": "https://medium.com/immunefi/88mph-function-initialization-bug-fix-postmortem-c3a2282894d3", "body": "The `init()` function was missing an onlyOwner modifier and also there was no initializer to prevent a re-initialization. So `init()` function was unprotected and was callable multiple times.", "labels": ["Logic Error", " Access Control"]}, {"title": "PancakeSwap Content Injection", "html_url": "https://medium.com/immunefi/pancakeswap-content-injection-bug-fix-postmortem-e9058cfc7451", "body": "Web content injection vulnerability that would have allowed a malicious user to inject any arbitrary text on PancakeSwaps website.", "labels": ["Content injection"]}, {"title": "Bitswift Race Condition", "html_url": "https://medium.com/immunefi/bitswift-race-condition-bug-fix-postmortem-588184b8b43e", "body": "The race condition vulnerability would have allowed a malicious user to repeatedly claim the same voucher, which entitles a user to some amount of crypto tokens.", "labels": ["Unknown", " check manually"]}, {"title": "Charger Particles Griefing", "html_url": "https://medium.com/immunefi/charged-particles-griefing-bug-fix-postmortem-d2791e49a66b", "body": "The vulnerability was a griefing/denial of service attack against the protocol that would have allowed a malicious user to create a system where bribes had to be paid for a user to buy or sell an NFT.", "labels": ["Griefing", " Denial of Service (DoS)"]}, {"title": "Mushrooms finance Theft of Yield", "html_url": "https://medium.com/immunefi/mushrooms-finance-theft-of-yield-bug-fix-postmortem-16bd6961388f", "body": "Theft of Yield using an MEV attack with flash bots.", "labels": ["MEV", " Theft of yield"]}, {"title": "Fei Protocol Flashloan Vulnerability", "html_url": "https://medium.com/immunefi/fei-protocol-flashloan-vulnerability-postmortem-7c5dc001affb", "body": "Flash loan-driven market manipulation vulnerability permits a threat actor to drain 60.000 ETH from the contract.", "labels": ["Flashloan/oracle price manipulation."]}, {"title": "Sovryn loan vulnerability", "html_url": "https://medium.com/immunefi/sovryn-loan-vulnerability-postmortem-ffaf4d1d688f", "body": "The critical vulnerability consisted of a failure to validate that the receiver of the proceeds of a collateralized loan was the same entity as the borrower, meaning a malicious user could request a loan based on unused collateral from another user.", "labels": ["Logic - No validation."]}, {"title": "Fei Protocol Vulnerability", "html_url": "https://medium.com/immunefi/fei-protocol-vulnerability-postmortem-483f9a7e6ad1", "body": "Assuming a situation where the FEI price is below the peg, a malicious user could purchase FEI, pushing the price not just back to the 1:1 peg, but above the peg, receiving some amount of FEI as a buy reward in the process. The user could then drip the FEI back into the Uniswap pool via a transfer (not a swap), which bypasses the burn penalty, and finally, convert the FEI to wETH with a swap. As a result, the attacker receives a wETH from the pool without having (net) sold any FEI.", "labels": ["Logic Error"]}, {"title": "PancakeSwap lottery vulnerability", "html_url": "https://medium.com/immunefi/pancakeswap-lottery-vulnerability-postmortem-and-bug-4febdb1d2400", "body": "A user could see the lottery draw transaction, compute the winning lottery number, buy the right ticket during the draw, and front-run with a high gas fee to win the lottery. PancakeSwap fixed the vulnerability by updating its contract to include protections against buying using the multibuy method during the drawing phase.", "labels": ["Front-running."]}, {"title": "ArmorFi postmortem", "html_url": "https://medium.com/immunefi/armorfi-bug-bounty-postmortem-cf46eb650b38", "body": "A single Dollar worth of coverage could have enabled a malicious attacker to withdraw far more assets than available. Because the exploit allows them to get 10^18 as much as they purchased.", "labels": ["Logic Error"]}]