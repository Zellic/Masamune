[{"title": "`ChiefTrader.sol` Wrong implementation of `swapExactInput()` and `swapExactOutput()`", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/108", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "`ChiefTrader.sol` Wrong implementation of `swapExactInput()` and `swapExactOutput()`"}, {"title": "These functions can be made modifier", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/106", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-mellow-findings", "body": "These functions can be made modifier"}, {"title": "Guard for initialization function of VaultGovernance", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/105", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Guard for initialization function of VaultGovernance"}, {"title": "Use literal `2` instead of read from storage for `_vaultTokens.length` can save gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/104", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Use literal `2` instead of read from storage for `_vaultTokens.length` can save gas"}, {"title": "Declaring unnecessary immutable variables as constant can save gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/103", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Declaring unnecessary immutable variables as constant can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Unnecessary checked arithmetic in for loops", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/101", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Unnecessary checked arithmetic in for loops"}, {"title": "Outdated compiler version", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/100", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-mellow-findings", "body": "Outdated compiler version"}, {"title": "`UniV3Vault.sol#collectEarnings()` can be front run", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/98", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "`UniV3Vault.sol#collectEarnings()` can be front run"}, {"title": "Cache storage variables in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/96", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Cache storage variables in the stack can save gas"}, {"title": "Remove unnecessary function can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Remove unnecessary function can make the code simpler and save some gas"}, {"title": "Remove unnecessary variables can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/93", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Remove unnecessary variables can make the code simpler and save some gas"}, {"title": "Use immutable variables can save gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/92", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Use immutable variables can save gas"}, {"title": "Wrong implementation of `performanceFee` can cause users to lose 50% to 100% of their funds", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/91", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Wrong implementation of `performanceFee` can cause users to lose 50% to 100% of their funds"}, {"title": "`LpIssuer.sol#_chargeFees()` Check `if (performanceFee > 0)` can be done earlier to save gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/90", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "`LpIssuer.sol#_chargeFees()` Check `if (performanceFee > 0)` can be done earlier to save gas"}, {"title": "Cache external call results can save gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/89", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Cache external call results can save gas"}, {"title": "Unsafe token transfer", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/88", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Unsafe token transfer"}, {"title": "Setting `uint256` variables to `0` is redundant", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/86", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Setting `uint256` variables to `0` is redundant"}, {"title": "`YearnVault` did not cache tvl as comment described", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/84", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "`YearnVault` did not cache tvl as comment described"}, {"title": "Withdraw from `AaveVault` will receive less than actual share", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/82", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Withdraw from `AaveVault` will receive less than actual share"}, {"title": "Use of _msgSender()", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Use of _msgSender()"}, {"title": "Use `calldata` instead of `memory` for function parameters", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/78", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Use `calldata` instead of `memory` for function parameters"}, {"title": "Initialization with empty `_symbol`", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/76", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-mellow-findings", "body": "Initialization with empty `_symbol`"}, {"title": "Loops can be implemented more efficiently", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Loops can be implemented more efficiently"}, {"title": "There is no need to assign default values to variables", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/71", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "There is no need to assign default values to variables"}, {"title": "Don't cache variables used only once", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Don't cache variables used only once"}, {"title": "`maxTokensPerVault` is not used", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "`maxTokensPerVault` is not used"}, {"title": "Optimize `baseSupply` calculation in `_chargeFee`", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Optimize `baseSupply` calculation in `_chargeFee`"}, {"title": "`+= 1` costs extra gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/63", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "`+= 1` costs extra gas"}, {"title": "Gas Optimization: Use != 0 instead of > 0", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Gas Optimization: Use != 0 instead of > 0"}, {"title": "Gas Optimization: Pack `Params` struct in `IProtocolGovernance`", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/59", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Gas Optimization: Pack `Params` struct in `IProtocolGovernance`"}, {"title": "A more efficient for loop index proceeding", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/54", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "A more efficient for loop index proceeding"}, {"title": "Gas: Unnecessary zero writes", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/53", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-12-mellow-findings", "body": "Gas: Unnecessary zero writes"}, {"title": "Gas: Cache `_pendingTokenWhitelistAdd[i]`", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/52", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-mellow-findings", "body": "Gas: Cache `_pendingTokenWhitelistAdd[i]`"}, {"title": "Gas: `GatewayVault._pull` can skip redirected", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/51", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-mellow-findings", "body": "Gas: `GatewayVault._pull` can skip redirected"}, {"title": "UniswapV3's path issue for `swapExactOutput`", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/50", "labels": ["bug", "2 (Med Risk)"], "target": "2021-12-mellow-findings", "body": "UniswapV3's path issue for `swapExactOutput`"}, {"title": "Admin can break `_numberOfValidTokens`", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/49", "labels": ["bug", "2 (Med Risk)"], "target": "2021-12-mellow-findings", "body": "Admin can break `_numberOfValidTokens`"}, {"title": "Wrong logic in `tokenWhitelist()`?", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/48", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-mellow-findings", "body": "Wrong logic in `tokenWhitelist()`?"}, {"title": "Users can avoid paying vault fees", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/47", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-12-mellow-findings", "body": "Users can avoid paying vault fees"}, {"title": "User deposits don't have min. return checks", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/46", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "User deposits don't have min. return checks"}, {"title": "`GatewayVault` events not used", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "`GatewayVault` events not used"}, {"title": "Bad redirects can make it impossible to deposit & withdraw", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/44", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Bad redirects can make it impossible to deposit & withdraw"}, {"title": "AaveVault does not update TVL on deposit/withdraw", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/41", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "AaveVault does not update TVL on deposit/withdraw"}, {"title": "withdraw() Validate lpTokenAmount At Beginning of Function Can Save Gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/38", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-mellow-findings", "body": "withdraw() Validate lpTokenAmount At Beginning of Function Can Save Gas"}, {"title": "Remove ADMIN_DELEGATE_ROLE to Save Gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Remove ADMIN_DELEGATE_ROLE to Save Gas"}, {"title": "ExceptionsLibrary.sol Shorten Revert Strings to Save Gas", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-12-mellow-findings", "body": "ExceptionsLibrary.sol Shorten Revert Strings to Save Gas"}, {"title": "Potential DOS with Division By Zero on `LpIssuer`", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/27", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-mellow-findings", "body": "Potential DOS with Division By Zero on `LpIssuer`"}, {"title": "Don't check contains before remove II", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Don't check contains before remove II"}, {"title": "Wrong logic in UniV3Trader", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/22", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-mellow-findings", "body": "Wrong logic in UniV3Trader"}, {"title": "Store Interface instead of address", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Store Interface instead of address"}, {"title": "Learn from the past", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/20", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Learn from the past"}, {"title": "Missing zero-address checks on contract construction", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/19", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-12-mellow-findings", "body": "Missing zero-address checks on contract construction"}, {"title": "Solidity compiler versions mismatch", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/17", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-mellow-findings", "body": "Solidity compiler versions mismatch"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Open TODOs"}, {"title": "safeApprove of openZeppelin is deprecated", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/15", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "safeApprove of openZeppelin is deprecated"}, {"title": "Require with empty message", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-12-mellow-findings", "body": "Require with empty message"}, {"title": "Unnecessary array boundaries check when loading an array element twice", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/10", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-mellow-findings", "body": "Unnecessary array boundaries check when loading an array element twice"}, {"title": "Public functions to external", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/8", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-mellow-findings", "body": "Public functions to external"}, {"title": "Internal functions to private", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/7", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-mellow-findings", "body": "Internal functions to private"}, {"title": "Storage double reading. Could save SLOAD", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-mellow-findings", "body": "Storage double reading. Could save SLOAD"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-12-mellow-findings/issues/1", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-mellow-findings", "body": "Unused imports"}, {"title": "several functions can be marked external", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/119", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "fix later"], "target": "2021-11-yaxis-findings", "body": "several functions can be marked external"}, {"title": "Incorrect comment or code in runPhasedDistribution (Transmuter.sol)", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/117", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Incorrect comment or code in runPhasedDistribution (Transmuter.sol)"}, {"title": "TRANSMUTATION_PERIOD Issues", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/116", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "TRANSMUTATION_PERIOD Issues"}, {"title": "Unused Named Returns", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/115", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Unused Named Returns"}, {"title": "Assigned operations to constant variables", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/111", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Assigned operations to constant variables"}, {"title": "Constant expressions", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/110", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Constant expressions"}, {"title": "setSentinel actually adds sentinel", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor disputed"], "target": "2021-11-yaxis-findings", "body": "setSentinel actually adds sentinel"}, {"title": "_setupRole not in constructor", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/107", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-11-yaxis-findings", "body": "_setupRole not in constructor"}, {"title": "Context and msg.sender", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/105", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Context and msg.sender"}, {"title": "anyone can deposit to adapters directly", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/103", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "wont fix"], "target": "2021-11-yaxis-findings", "body": "anyone can deposit to adapters directly"}, {"title": "Optimize `Alchemist.sol#_withdrawFundsTo`", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Optimize `Alchemist.sol#_withdrawFundsTo`"}, {"title": "`AlchemistVault.sol` can be optimised", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/100", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "`AlchemistVault.sol` can be optimised"}, {"title": "Gas optimization: Reduce storage write", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/97", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Gas optimization: Reduce storage write"}, {"title": "Removing the unnecessary function", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/96", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Removing the unnecessary function"}, {"title": "`CDP.sol#getUpdatedTotalDebt` can be optimized", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/92", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "`CDP.sol#getUpdatedTotalDebt` can be optimized"}, {"title": "`CDP.sol#update.sol` can be optimized", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "`CDP.sol#update.sol` can be optimized"}, {"title": "Require statements without messages", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/88", "labels": ["bug", "0 (Non-critical)", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Require statements without messages"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/87", "labels": ["bug", "invalid", "0 (Non-critical)"], "target": "2021-11-yaxis-findings", "body": "Open TODOs"}, {"title": "State variables can be `immutable`s", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/83", "labels": ["bug", "invalid", "G (Gas Optimization)"], "target": "2021-11-yaxis-findings", "body": "State variables can be `immutable`s"}, {"title": "Incorrect Comment", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/77", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor disputed"], "target": "2021-11-yaxis-findings", "body": "Incorrect Comment"}, {"title": "No Event Emitted on Minting", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/76", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "No Event Emitted on Minting"}, {"title": "Lack of Input Validation", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/75", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Lack of Input Validation"}, {"title": "Gas Optimization: Inline instead of modifier", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Gas Optimization: Inline instead of modifier"}, {"title": "No incentive to call `transmute()` instead of `forceTransmute(self)`", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "wont fix"], "target": "2021-11-yaxis-findings", "body": "No incentive to call `transmute()` instead of `forceTransmute(self)`"}, {"title": "`Transmuter.unstake` updates user without first updating distributing yield", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/66", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "`Transmuter.unstake` updates user without first updating distributing yield"}, {"title": "`Alchemist.migrate` can push duplicate adapters to `_vaults`", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "wont fix"], "target": "2021-11-yaxis-findings", "body": "`Alchemist.migrate` can push duplicate adapters to `_vaults`"}, {"title": "Pending governance is not cleared", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/63", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Pending governance is not cleared"}, {"title": "Gas optimization: Caching variables", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "fix later"], "target": "2021-11-yaxis-findings", "body": "Gas optimization: Caching variables"}, {"title": "Constructor Lack of Zero Address Check for Tokens", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Constructor Lack of Zero Address Check for Tokens"}, {"title": "No Transfer Ownership Pattern in AlToken.sol", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "No Transfer Ownership Pattern in AlToken.sol"}, {"title": "Inline internal functions that are being used only once can save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/54", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor acknowledged"], "target": "2021-11-yaxis-findings", "body": "Inline internal functions that are being used only once can save gas"}, {"title": "`Alchemist.sol#mint()` Two storage writes can be combined into one", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/53", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "`Alchemist.sol#mint()` Two storage writes can be combined into one"}, {"title": "Save `vault.getToken()` as an immutable variable in `YaxisVaultAdapter.sol` contract can save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/52", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Save `vault.getToken()` as an immutable variable in `YaxisVaultAdapter.sol` contract can save gas"}, {"title": "Change unnecessary storage variables to constants can save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor acknowledged"], "target": "2021-11-yaxis-findings", "body": "Change unnecessary storage variables to constants can save gas"}, {"title": "Use short reason strings can save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "fix later"], "target": "2021-11-yaxis-findings", "body": "Use short reason strings can save gas"}, {"title": "Tokens with fee on transfer are not supported", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/49", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Tokens with fee on transfer are not supported"}, {"title": "Should `safeApprove(0)` first", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/48", "labels": ["bug", "0 (Non-critical)", "resolved"], "target": "2021-11-yaxis-findings", "body": "Should `safeApprove(0)` first"}, {"title": "Use of deprecated `safeApprove`", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Use of deprecated `safeApprove`"}, {"title": "`YaxisVaultAdapter.sol#withdraw()` will most certainly fail", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/46", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "`YaxisVaultAdapter.sol#withdraw()` will most certainly fail"}, {"title": "`YaxisVaultAdapter.sol` Use inline expression can save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/45", "labels": ["bug", "G (Gas Optimization)", "resolved"], "target": "2021-11-yaxis-findings", "body": "`YaxisVaultAdapter.sol` Use inline expression can save gas"}, {"title": "Cache and read storage variables from the stack can save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/44", "labels": ["bug", "G (Gas Optimization)", "resolved"], "target": "2021-11-yaxis-findings", "body": "Cache and read storage variables from the stack can save gas"}, {"title": "Only using `SafeMath` when necessary can save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Only using `SafeMath` when necessary can save gas"}, {"title": "Use immutable variable can save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Use immutable variable can save gas"}, {"title": "Unnecessary libraries", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor disputed"], "target": "2021-11-yaxis-findings", "body": "Unnecessary libraries"}, {"title": "Incorrect function docs", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Incorrect function docs"}, {"title": "Missing events for owner only functions that change critical parameters", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/34", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "fix later"], "target": "2021-11-yaxis-findings", "body": "Missing events for owner only functions that change critical parameters"}, {"title": "`Alchemist.sol` does not use safeApprove", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/33", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "`Alchemist.sol` does not use safeApprove"}, {"title": "CDP.sol update overwrites user's credit on every positive increment", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/31", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor disputed"], "target": "2021-11-yaxis-findings", "body": "CDP.sol update overwrites user's credit on every positive increment"}, {"title": "Redundant Import", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/28", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor acknowledged"], "target": "2021-11-yaxis-findings", "body": "Redundant Import"}, {"title": "Upgrade pragma to at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "fix later"], "target": "2021-11-yaxis-findings", "body": "Upgrade pragma to at least 0.8.4"}, {"title": "No event for `Alchemist.sol#setPegMinimum`", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/24", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "No event for `Alchemist.sol#setPegMinimum`"}, {"title": "At `Alchemist.sol#acceptGovernance`, cache `pendingGovernance` earlier to save gas", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/23", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "At `Alchemist.sol#acceptGovernance`, cache `pendingGovernance` earlier to save gas"}, {"title": "For uint `> 0` can be replaced with ` != 0` for gas optimisation", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "fix later"], "target": "2021-11-yaxis-findings", "body": "For uint `> 0` can be replaced with ` != 0` for gas optimisation"}, {"title": "Lack of Proper Tests?", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/20", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "fix later"], "target": "2021-11-yaxis-findings", "body": "Lack of Proper Tests?"}, {"title": "Remove FixedPointMath ", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Remove FixedPointMath "}, {"title": "Cache length of array when looping", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/17", "labels": ["bug", "invalid", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-yaxis-findings", "body": "Cache length of array when looping"}, {"title": "admin Variable is High Risk", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/15", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "admin Variable is High Risk"}, {"title": "Prevent Minting During Emergency Exit", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/12", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Prevent Minting During Emergency Exit"}, {"title": "Convert Emergency Exit Check to Modifier.", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Convert Emergency Exit Check to Modifier."}, {"title": "Effects and Interactions Before Check", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/10", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "fix later"], "target": "2021-11-yaxis-findings", "body": "Effects and Interactions Before Check"}, {"title": "Multiple Assignments to Storage Variable", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/9", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed", "wont fix"], "target": "2021-11-yaxis-findings", "body": "Multiple Assignments to Storage Variable"}, {"title": "Incorrect Event Emitted in Alchemist.sol", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/7", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Incorrect Event Emitted in Alchemist.sol"}, {"title": "Incorrect Info in Comment in Alchemist.sol (138)", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/6", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Incorrect Info in Comment in Alchemist.sol (138)"}, {"title": "Incorrect Info in Comment in Alchemist.sol", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/5", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Incorrect Info in Comment in Alchemist.sol"}, {"title": "Lack of 'emit' keyword in AlToken.sol", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/4", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Lack of 'emit' keyword in AlToken.sol"}, {"title": "Gas optimization in AlToken.sol", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Gas optimization in AlToken.sol"}, {"title": "Gas optimization when a paused user calls mint() in AlToken.sol", "html_url": "https://github.com/code-423n4/2021-11-yaxis-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-11-yaxis-findings", "body": "Gas optimization when a paused user calls mint() in AlToken.sol"}, {"title": "Gas Optimization on the Public Function", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/79", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Gas Optimization on the Public Function"}, {"title": "Gas optimization: Unnecessary ops", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/78", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Gas optimization: Unnecessary ops"}, {"title": "Gas optimization: Unreachable code in Zap.sol", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/77", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Gas optimization: Unreachable code in Zap.sol"}, {"title": "Gas optimization: Use else if for mutually exclusive conditions", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/76", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Gas optimization: Use else if for mutually exclusive conditions"}, {"title": "`calcMint` always return poolId=0 and idx=0", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/72", "labels": ["bug", "2 (Med Risk)"], "target": "2021-11-badgerzaps-findings", "body": "`calcMint` always return poolId=0 and idx=0"}, {"title": "No slippage control on `deposit` of IbbtcVaultZap.sol", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/71", "labels": ["bug", "2 (Med Risk)"], "target": "2021-11-badgerzaps-findings", "body": "No slippage control on `deposit` of IbbtcVaultZap.sol"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/67", "labels": ["bug", "0 (Non-critical)"], "target": "2021-11-badgerzaps-findings", "body": "Open TODOs"}, {"title": "public function that could be set external instead", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/61", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "public function that could be set external instead"}, {"title": "Zap.sol init for loop - uint default value is 0", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/60", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Zap.sol init for loop - uint default value is 0"}, {"title": "named return issue - Zap.sol calcMint", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/59", "labels": ["bug", "disagree with severity", "sponsor disputed", "0 (Non-critical)"], "target": "2021-11-badgerzaps-findings", "body": "named return issue - Zap.sol calcMint"}, {"title": " Unnecessary `SLOAD`s / `MLOAD`s / `CALLDATALOAD`s in for-each loops", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/58", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": " Unnecessary `SLOAD`s / `MLOAD`s / `CALLDATALOAD`s in for-each loops"}, {"title": "Critical changes should use two-step procedure", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/56", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-11-badgerzaps-findings", "body": "Critical changes should use two-step procedure"}, {"title": "Missing events for critical operations", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/55", "labels": ["bug", "disagree with severity", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-11-badgerzaps-findings", "body": "Missing events for critical operations"}, {"title": "Missing `_token.approve()` to `curvePool` in `setZapConfig`", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/53", "labels": ["bug", "sponsor confirmed", "2 (Med Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Missing `_token.approve()` to `curvePool` in `setZapConfig`"}, {"title": "`blockLock` of `RENCRV_SETT` makes transactions likely to fail as only 1 transaction is allowed in 1 block", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/52", "labels": ["bug", "disagree with severity", "1 (Low Risk)"], "target": "2021-11-badgerzaps-findings", "body": "`blockLock` of `RENCRV_SETT` makes transactions likely to fail as only 1 transaction is allowed in 1 block"}, {"title": "`setGuardian()` Wrong implementation", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/51", "labels": ["bug", "3 (High Risk)"], "target": "2021-11-badgerzaps-findings", "body": "`setGuardian()` Wrong implementation"}, {"title": "Excessive `require` makes the transaction fail unexpectedly", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/50", "labels": ["bug", "sponsor confirmed", "2 (Med Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Excessive `require` makes the transaction fail unexpectedly"}, {"title": "`Zap.sol#mint()` Check `blockLock` earlier can save gas", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/49", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "`Zap.sol#mint()` Check `blockLock` earlier can save gas"}, {"title": "Improper implementation of slippage check", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/47", "labels": ["bug", "2 (Med Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Improper implementation of slippage check"}, {"title": "Avoid unnecessary arithmetic operations can save gas", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/45", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Avoid unnecessary arithmetic operations can save gas"}, {"title": "Arithmetic operations without using SafeMath may over/underflow", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/44", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Arithmetic operations without using SafeMath may over/underflow"}, {"title": "Redundant type casting", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/42", "labels": ["bug", "0 (Non-critical)"], "target": "2021-11-badgerzaps-findings", "body": "Redundant type casting"}, {"title": "Avoid unnecessary code execution can save gas", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/41", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Avoid unnecessary code execution can save gas"}, {"title": "Unused local variables", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/39", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Unused local variables"}, {"title": "`Zap.sol#redeem()` Lack of input validation", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/37", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-badgerzaps-findings", "body": "`Zap.sol#redeem()` Lack of input validation"}, {"title": "Avoid unnecessary read of array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/36", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Avoid unnecessary read of array length in for loops can save gas"}, {"title": "`Zap.sol#mint()` Validation of `poolId` can be done earlier to save gas", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/35", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "`Zap.sol#mint()` Validation of `poolId` can be done earlier to save gas"}, {"title": "Adding `recipient` parameter to mint functions can help avoid unnecessary token transfers and save gas", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/34", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Adding `recipient` parameter to mint functions can help avoid unnecessary token transfers and save gas"}, {"title": "Avoiding Initialization of Loop Index If It Is 0", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/29", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "Avoiding Initialization of Loop Index If It Is 0"}, {"title": "SLOAD pools.length for Every Loop is Waste of Gas ", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/28", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "SLOAD pools.length for Every Loop is Waste of Gas "}, {"title": "use modifier keyword to write modifier not function In SettToRenIbbtcZap.sol line no - 105 and 109", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/27", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-11-badgerzaps-findings", "body": "use modifier keyword to write modifier not function In SettToRenIbbtcZap.sol line no - 105 and 109"}, {"title": "Modifier should be used instead of functions to write modifier in ibBTC VaultZap.sol", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/26", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-11-badgerzaps-findings", "body": "Modifier should be used instead of functions to write modifier in ibBTC VaultZap.sol"}, {"title": "ibbtcCurveLP can be simplified", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/21", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-11-badgerzaps-findings", "body": "ibbtcCurveLP can be simplified"}, {"title": "For `uint` use ` != 0` instead of ` > 0`", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/18", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-badgerzaps-findings", "body": "For `uint` use ` != 0` instead of ` > 0`"}, {"title": "Wrong comment on `SettToRenIbbtcZap.sol` and `IbbtcVaultZap.sol`", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/16", "labels": ["bug", "disagree with severity", "1 (Low Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Wrong comment on `SettToRenIbbtcZap.sol` and `IbbtcVaultZap.sol`"}, {"title": "Missing overflow protection", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/13", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Missing overflow protection"}, {"title": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/8", "labels": ["bug", "sponsor acknowledged", "1 (Low Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom"}, {"title": "Zap.sol declares unused variable `_ren` in `calcRedeemInRen` among other functions", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/4", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-11-badgerzaps-findings", "body": "Zap.sol declares unused variable `_ren` in `calcRedeemInRen` among other functions"}, {"title": "Zap contract's redeem() function doesn't check which token the user wants to receive", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/2", "labels": ["bug", "2 (Med Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Zap contract's redeem() function doesn't check which token the user wants to receive"}, {"title": "Zap contract's mint() allows minting ibbtc tokens for free", "html_url": "https://github.com/code-423n4/2021-11-badgerzaps-findings/issues/1", "labels": ["bug", "disagree with severity", "sponsor disputed", "1 (Low Risk)"], "target": "2021-11-badgerzaps-findings", "body": "Zap contract's mint() allows minting ibbtc tokens for free"}, {"title": "`withdrawTo` Does Not Sync Before Checking A Position's Margin Requirements", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/74", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "`withdrawTo` Does Not Sync Before Checking A Position's Margin Requirements"}, {"title": "On updating the Incentive fee greater than UFixedLib18.ONE, new Programs can not be created", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/72", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "On updating the Incentive fee greater than UFixedLib18.ONE, new Programs can not be created"}, {"title": "Initialization functions can be front-run", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "resolved"], "target": "2021-12-perennial-findings", "body": "Initialization functions can be front-run"}, {"title": "`Collateral.sol#maintananceInvariant` can be combined with `collateralnvarant` to save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/70", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-perennial-findings", "body": "`Collateral.sol#maintananceInvariant` can be combined with `collateralnvarant` to save gas"}, {"title": "At settleAccountInternal, check whether the position can be changeable to pre more efficiently", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "At settleAccountInternal, check whether the position can be changeable to pre more efficiently"}, {"title": "At `Product.sol#closeAll`, cache `_position[account]`", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/65", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "At `Product.sol#closeAll`, cache `_position[account]`"}, {"title": "No checks if given product is created by the factory", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/63", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "resolved"], "target": "2021-12-perennial-findings", "body": "No checks if given product is created by the factory"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/57", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-perennial-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Fixed18 conversions don't work for all values", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Fixed18 conversions don't work for all values"}, {"title": "`NotControllerOwnerError` error not used", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/52", "labels": ["bug", "disagree with severity", "G (Gas Optimization)", "resolved"], "target": "2021-12-perennial-findings", "body": "`NotControllerOwnerError` error not used"}, {"title": "Missing fee parameter validation", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Missing fee parameter validation"}, {"title": "claimFee loop does not check for zero transfer amount (Incentivizer.sol) ", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "claimFee loop does not check for zero transfer amount (Incentivizer.sol) "}, {"title": " Removing redundant code can save gas (Collateral, Factory, Incentivizer, ChainlinkOracle)", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/41", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-perennial-findings", "body": " Removing redundant code can save gas (Collateral, Factory, Incentivizer, ChainlinkOracle)"}, {"title": "Cache storage variables in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/40", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Cache storage variables in the stack can save gas"}, {"title": "Remove unnecessary variables can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-perennial-findings", "body": "Remove unnecessary variables can make the code simpler and save some gas"}, {"title": "Inline unnecessary function can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-perennial-findings", "body": "Inline unnecessary function can make the code simpler and save some gas"}, {"title": "Best Practice: public functions not used by current contract should be external", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Best Practice: public functions not used by current contract should be external"}, {"title": "`Incentivizer.sol` Tokens with fee on transfer are not supported", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/36", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "resolved"], "target": "2021-12-perennial-findings", "body": "`Incentivizer.sol` Tokens with fee on transfer are not supported"}, {"title": "`Factory.sol#updateController()` Lack of input validation", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "`Factory.sol#updateController()` Lack of input validation"}, {"title": "Unnecessary checked arithmetic in for loops", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-perennial-findings", "body": "Unnecessary checked arithmetic in for loops"}, {"title": "Cache storage read and call results in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Cache storage read and call results in the stack can save gas"}, {"title": "Reuse operation results can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Reuse operation results can save gas"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-perennial-findings", "body": "Cache array length in for loops can save gas"}, {"title": "Avoid unnecessary `SafeCast.toInt256()` can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/30", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Avoid unnecessary `SafeCast.toInt256()` can save gas"}, {"title": "Use immutable variables can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Use immutable variables can save gas"}, {"title": "Adding a new method `provider.currentPrice()` can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Adding a new method `provider.currentPrice()` can save gas"}, {"title": "Avoid unnecessary external calls can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Avoid unnecessary external calls can save gas"}, {"title": "Chainlink's `latestRoundData` might return stale or incorrect results", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/24", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Chainlink's `latestRoundData` might return stale or incorrect results"}, {"title": "`Token18.sol#balanceOf()` When `isEther()`, `fromTokenAmount()` is unnecessary", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/23", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "`Token18.sol#balanceOf()` When `isEther()`, `fromTokenAmount()` is unnecessary"}, {"title": "`Token18.sol#push()` When `isEther()`, `toTokenAmount()` is unnecessary", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "`Token18.sol#push()` When `isEther()`, `toTokenAmount()` is unnecessary"}, {"title": "`10 ** 18` can be changed to `1e18` and save some gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "`10 ** 18` can be changed to `1e18` and save some gas"}, {"title": "Avoid unnecessary arithmetic operations can save gas", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/20", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Avoid unnecessary arithmetic operations can save gas"}, {"title": "Wrong shortfall calculation", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/18", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Wrong shortfall calculation"}, {"title": "Multiple initialization of Collateral contract", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/13", "labels": ["bug", "2 (Med Risk)", "resolved"], "target": "2021-12-perennial-findings", "body": "Multiple initialization of Collateral contract"}, {"title": "Unsecure Ownership Transfer", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/12", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Unsecure Ownership Transfer"}, {"title": "Not verified function inputs of public / external functions", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/11", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Not verified function inputs of public / external functions"}, {"title": "Solidity compiler versions mismatch", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor disputed"], "target": "2021-12-perennial-findings", "body": "Solidity compiler versions mismatch"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-12-perennial-findings/issues/1", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-12-perennial-findings", "body": "Unused imports"}, {"title": "balance(dust) rewardsTokens may be unclaimable after endRewardLock", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/271", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "balance(dust) rewardsTokens may be unclaimable after endRewardLock"}, {"title": "Remove unnecessary function can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/265", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Remove unnecessary function can make the code simpler and save some gas"}, {"title": "`++currStreamId` is more gas efficient than `currStreamId += 1`", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/263", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "`++currStreamId` is more gas efficient than `currStreamId += 1`"}, {"title": "Avoid unnecessary external calls can save gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/262", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Avoid unnecessary external calls can save gas"}, {"title": "Code Style: public functions not used by current contract should be external", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/260", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Code Style: public functions not used by current contract should be external"}, {"title": "`Stream#claimReward()` storage writes and reads of `ts.rewards` can be combined into one", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/259", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "`Stream#claimReward()` storage writes and reads of `ts.rewards` can be combined into one"}, {"title": "Improper implementation of `arbitraryCall()` allows protocol gov to steal funds from users' wallets", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/258", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Improper implementation of `arbitraryCall()` allows protocol gov to steal funds from users' wallets"}, {"title": "Gas Optimization On The 2^256-1", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/255", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Gas Optimization On The 2^256-1"}, {"title": "Incompatibility With Rebasing/Deflationary/Inflationary tokens", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/252", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Incompatibility With Rebasing/Deflationary/Inflationary tokens"}, {"title": "Redundant code", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/250", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Redundant code"}, {"title": "Inconsistent check of token balance", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/249", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Inconsistent check of token balance"}, {"title": "`10**6` can be changed to `1e6` and save some gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/248", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "`10**6` can be changed to `1e6` and save some gas"}, {"title": "Incorrect Validation of feePercent", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/246", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Incorrect Validation of feePercent"}, {"title": "Avoid unnecessary storage reads can save gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/245", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Avoid unnecessary storage reads can save gas"}, {"title": "Insufficient input validation", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/243", "labels": ["bug", "0 (Non-critical)"], "target": "2021-11-streaming-findings", "body": "Insufficient input validation"}, {"title": "Wrong calculation of excess depositToken allows stream creator to retrieve `depositTokenFlashloanFeeAmount`, which may cause fund loss to users", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/241", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Wrong calculation of excess depositToken allows stream creator to retrieve `depositTokenFlashloanFeeAmount`, which may cause fund loss to users"}, {"title": "`LockeERC20.sol#toString()` Implementation can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/239", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "`LockeERC20.sol#toString()` Implementation can be simpler and save some gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/238", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Constructors should not have visibility", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/236", "labels": ["bug", "0 (Non-critical)"], "target": "2021-11-streaming-findings", "body": "Constructors should not have visibility"}, {"title": "Slot packing increases runtime gas consumption due to masking", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/235", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Slot packing increases runtime gas consumption due to masking"}, {"title": "Implementations should inherit their interface", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/234", "labels": ["bug", "0 (Non-critical)"], "target": "2021-11-streaming-findings", "body": "Implementations should inherit their interface"}, {"title": "Remove unnecessary variables can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/233", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Remove unnecessary variables can make the code simpler and save some gas"}, {"title": "Cache and read storage variables from the stack can save gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/232", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Cache and read storage variables from the stack can save gas"}, {"title": "Use immutable variables can save gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/231", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Use immutable variables can save gas"}, {"title": "DOS while dealing with erc20 when value(i.e amount*decimals)  is high but less than type(uint112).max", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/228", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "DOS while dealing with erc20 when value(i.e amount*decimals)  is high but less than type(uint112).max"}, {"title": "Emergency gov is never used", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/226", "labels": ["bug", "0 (Non-critical)"], "target": "2021-11-streaming-findings", "body": "Emergency gov is never used"}, {"title": "Loss of precision causing incorrect flashloan & creator fee calculation", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/221", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Loss of precision causing incorrect flashloan & creator fee calculation"}, {"title": "Gas: Check `_feePercent` instead", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/217", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Gas: Check `_feePercent` instead"}, {"title": "Gas: `unstreamed` not needed", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/216", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Gas: `unstreamed` not needed"}, {"title": "Tokens can be stolen when `depositToken == rewardToken`", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/215", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Tokens can be stolen when `depositToken == rewardToken`"}, {"title": "Reward token not correctly recovered", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/214", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Reward token not correctly recovered"}, {"title": "Inaccurate comment in `recoverTokens`", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/213", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Inaccurate comment in `recoverTokens`"}, {"title": "Token owner cannot claim rewardToken if they are not the original depositor", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/204", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Token owner cannot claim rewardToken if they are not the original depositor"}, {"title": "Incentives paid to creator instead of depositor", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/201", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Incentives paid to creator instead of depositor"}, {"title": "Possible incentive theft through the arbitraryCall() function", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/199", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Possible incentive theft through the arbitraryCall() function"}, {"title": "This protocol doesn't support all fee on transfer tokens", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/192", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "This protocol doesn't support all fee on transfer tokens"}, {"title": "In claimReward, reward can be cached more efficiently.", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/190", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "In claimReward, reward can be cached more efficiently."}, {"title": "Not needed lastApplicableTime call in claimReward", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/189", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Not needed lastApplicableTime call in claimReward"}, {"title": "Directly calculate fee in flash loan", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/188", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Directly calculate fee in flash loan"}, {"title": "When exit is called, updateStream is called twice", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/187", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "When exit is called, updateStream is called twice"}, {"title": "fundStream can be implemented more efficiently", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/186", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "fundStream can be implemented more efficiently"}, {"title": "No need to check fee inside factories constructor", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/185", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "No need to check fee inside factories constructor"}, {"title": "Gas Optimization: Use minimal proxy", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/183", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Gas Optimization: Use minimal proxy"}, {"title": "Gas Optimization: Move common logic out of if block", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/181", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Gas Optimization: Move common logic out of if block"}, {"title": "Eliminate amt in fundStream", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/179", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Eliminate amt in fundStream"}, {"title": "`arbitraryCall` does not need to check returned byte", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/168", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "`arbitraryCall` does not need to check returned byte"}, {"title": "Creating rewardTokens without streaming depositTokens", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/166", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Creating rewardTokens without streaming depositTokens"}, {"title": "Any arbitraryCall gathered airdrop can be stolen with recoverTokens", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/162", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "Any arbitraryCall gathered airdrop can be stolen with recoverTokens"}, {"title": "`Governed` doesn't implement the `IGoverned` interface", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/161", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-11-streaming-findings", "body": "`Governed` doesn't implement the `IGoverned` interface"}, {"title": "`Governed`'s constructor doesn't emit an initial `NewGov` event", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/159", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "`Governed`'s constructor doesn't emit an initial `NewGov` event"}, {"title": "`Governed.acceptGov()` emits `NewGov` events when the governor hasn't changed", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/158", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "`Governed.acceptGov()` emits `NewGov` events when the governor hasn't changed"}, {"title": "`Governed.setPendingGov()` emits `NewPendingGov` events when the pending governor hasn't changed", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/157", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "`Governed.setPendingGov()` emits `NewPendingGov` events when the pending governor hasn't changed"}, {"title": "`LockeERC20.approve()` and `LockeERC20.permit()` emit `Approval` events when the allowence hasn't changed", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/153", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "`LockeERC20.approve()` and `LockeERC20.permit()` emit `Approval` events when the allowence hasn't changed"}, {"title": "`LockeERC20.transferFrom()` emits `Transfer` events when `from` equals `to`", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/151", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "`LockeERC20.transferFrom()` emits `Transfer` events when `from` equals `to`"}, {"title": "`LockeERC20.transfer()` and `LockeERC20.transferFrom()` emit `Transfer` events when the transferred amount is zero", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/150", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "`LockeERC20.transfer()` and `LockeERC20.transferFrom()` emit `Transfer` events when the transferred amount is zero"}, {"title": "`rewardPerToken()` reverts before start time.", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/147", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "`rewardPerToken()` reverts before start time."}, {"title": "Avoid fee ", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/145", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Avoid fee "}, {"title": "\"> 0\" is less efficient than \"!= 0\" for unsigned integers", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/143", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "\"> 0\" is less efficient than \"!= 0\" for unsigned integers"}, {"title": "Use existing memory version of state variables (Locke.sol)", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/142", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Use existing memory version of state variables (Locke.sol)"}, {"title": "Missing contract check on `rewardtoken`", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/140", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Missing contract check on `rewardtoken`"}, {"title": "[Gas optimization] remove command less else in an if else", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/137", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "[Gas optimization] remove command less else in an if else"}, {"title": "Missing address(0) check can, lead to user transfering token to the burn address, and doesnt reduce the total supply", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/136", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "Missing address(0) check can, lead to user transfering token to the burn address, and doesnt reduce the total supply"}, {"title": "Missing address(0) check, can crippled the governed functions", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/135", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Missing address(0) check, can crippled the governed functions"}, {"title": "Business logic bug in __abdicate() function - 2 Bugs", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/132", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Business logic bug in __abdicate() function - 2 Bugs"}, {"title": "Structs can be rearranged to save gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/131", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Structs can be rearranged to save gas"}, {"title": "Flash loan mechanics do not implement any standard", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/130", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Flash loan mechanics do not implement any standard"}, {"title": "Use local variable in fundStream()", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/127", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Use local variable in fundStream()"}, {"title": "parameter \"who\" not used", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/125", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "parameter \"who\" not used"}, {"title": "prevent rounding error", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/124", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "prevent rounding error"}, {"title": "ts.tokens sometimes calculated incorrectly", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/123", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "ts.tokens sometimes calculated incorrectly"}, {"title": "recoverTokens doesn't work when isSale is true", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/121", "labels": ["bug", "3 (High Risk)"], "target": "2021-11-streaming-findings", "body": "recoverTokens doesn't work when isSale is true"}, {"title": "claimReward unnessary logic", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/119", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "claimReward unnessary logic"}, {"title": "Storage variable unstreamed can be artificially inflated", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/118", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Storage variable unstreamed can be artificially inflated"}, {"title": "Use of ecrecover is susceptible to signature malleability", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/117", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "Use of ecrecover is susceptible to signature malleability"}, {"title": "flashLoan does not have a return statement", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/114", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "flashLoan does not have a return statement"}, {"title": "Governance has the ability to withdraw tokens the stream doesn't know about", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/112", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Governance has the ability to withdraw tokens the stream doesn't know about"}, {"title": "LockeERC20 name is not implemented as comment imply", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/110", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "LockeERC20 name is not implemented as comment imply"}, {"title": "Caching variables", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/104", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Caching variables"}, {"title": "Wrong comment in claimReward", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/102", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "Wrong comment in claimReward"}, {"title": "Unnecessary call to lastApplicableTime() in claimReward()", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/100", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Unnecessary call to lastApplicableTime() in claimReward()"}, {"title": "No need to temporarily save old values when updating settings", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/99", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "No need to temporarily save old values when updating settings"}, {"title": "Global unstreamed variable not kept up to date", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/98", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "Global unstreamed variable not kept up to date"}, {"title": "Use one require instead of  several", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/96", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Use one require instead of  several"}, {"title": "Inaccuate comment about claimFees()", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/94", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "Inaccuate comment about claimFees()"}, {"title": "Remove unneeded variable in creatorClaimSoldTokens() to save gas", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/93", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Remove unneeded variable in creatorClaimSoldTokens() to save gas"}, {"title": "Remove redundant math to save gas in dilutedBalance()", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/89", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Remove redundant math to save gas in dilutedBalance()"}, {"title": "TODOs List May Leak Important Info & Errors", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/78", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-11-streaming-findings", "body": "TODOs List May Leak Important Info & Errors"}, {"title": "creatorClaimSoldTokens() Does Not Check Destination Address", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/77", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "creatorClaimSoldTokens() Does Not Check Destination Address"}, {"title": "Stream.sol: possible tx.origin attack vector via recoverTokens()", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/73", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "Stream.sol: possible tx.origin attack vector via recoverTokens()"}, {"title": "Governed.sol: setPendingGov() should use the emergency_governed modifier.", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/72", "labels": ["bug", "0 (Non-critical)", "2 (Med Risk)", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "Governed.sol: setPendingGov() should use the emergency_governed modifier."}, {"title": "Stream.claimReward can be simplified", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/70", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Stream.claimReward can be simplified"}, {"title": "Missing zero-address checks on LockeERC20 and Stream construction", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/68", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "Missing zero-address checks on LockeERC20 and Stream construction"}, {"title": "Stream.updateStreamInternal performs extra storage reads", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/67", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Stream.updateStreamInternal performs extra storage reads"}, {"title": "Free flashloan for governance", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/66", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Free flashloan for governance"}, {"title": "Deny of service because integer overflow", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/65", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "Deny of service because integer overflow"}, {"title": "Use _notSameBlock", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-streaming-findings", "body": "Use _notSameBlock"}, {"title": "Delete unnecessary variable", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/58", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Delete unnecessary variable"}, {"title": "Remove dead code", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/57", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Remove dead code"}, {"title": "LockeERC20 is vulnerable to frontrun attack", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/55", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "LockeERC20 is vulnerable to frontrun attack"}, {"title": "Avoid multiple cast", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/54", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Avoid multiple cast"}, {"title": "Flashloan is given for 1 token but checks balances for both reward and deposit token", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Flashloan is given for 1 token but checks balances for both reward and deposit token"}, {"title": "arbitraryCall() can get blocked by an attacker", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/47", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "arbitraryCall() can get blocked by an attacker"}, {"title": "Subtraction can be done unchecked because the require statement checks for underflow", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/46", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Subtraction can be done unchecked because the require statement checks for underflow"}, {"title": "Stream constructor reuse the function arguments instead storage variables", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/45", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Stream constructor reuse the function arguments instead storage variables"}, {"title": "Cache the return value from rewardPerToken()", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/44", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Cache the return value from rewardPerToken()"}, {"title": "Struct TokenStream remove unused variable merkleAccess", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Struct TokenStream remove unused variable merkleAccess"}, {"title": "depositTokens need to have a decimals() function", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "depositTokens need to have a decimals() function"}, {"title": "Dead code", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Dead code"}, {"title": "Missing Emit in critical function", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Missing Emit in critical function"}, {"title": "Use const instead of storage", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Use const instead of storage"}, {"title": "Missing NatSpec comments", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/32", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-streaming-findings", "body": "Missing NatSpec comments"}, {"title": "Use inmutable keyword", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/31", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Use inmutable keyword"}, {"title": "Typos", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/30", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Typos"}, {"title": "Division before multiple can lead to precision errors", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-streaming-findings", "body": "Division before multiple can lead to precision errors"}, {"title": "Missing zero Address check ", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/26", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-11-streaming-findings", "body": "Missing zero Address check "}, {"title": "constructor should guard against zero addresses", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/20", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-11-streaming-findings", "body": "constructor should guard against zero addresses"}, {"title": "Floating Pragma is set.", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/19", "labels": ["bug", "1 (Low Risk)"], "target": "2021-11-streaming-findings", "body": "Floating Pragma is set."}, {"title": "Internal functions to private", "html_url": "https://github.com/code-423n4/2021-11-streaming-findings/issues/7", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-streaming-findings", "body": "Internal functions to private"}, {"title": "Gas optimization: Unnecessary return string", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/385", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Gas optimization: Unnecessary return string"}, {"title": " Unnecessary intermediate variables (MovingAverage.sol)", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/382", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": " Unnecessary intermediate variables (MovingAverage.sol)"}, {"title": "DOS with unbounded loop", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/380", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "DOS with unbounded loop"}, {"title": "Can remove treasuryRewardCut from ForfeitHandler.sol", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/379", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Can remove treasuryRewardCut from ForfeitHandler.sol"}, {"title": "Unncessary statement in UniswapHandler.sol removeBuyer", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/377", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Unncessary statement in UniswapHandler.sol removeBuyer"}, {"title": "Dutch auction can be manipulated", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/375", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Dutch auction can be manipulated"}, {"title": "Malt Protocol Uses Stale Results From `MaltDataLab` Which Can Be Abused By Users", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/373", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Malt Protocol Uses Stale Results From `MaltDataLab` Which Can Be Abused By Users"}, {"title": "AMM pool can be drained using a flashloan and calling `stabilize`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/372", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AMM pool can be drained using a flashloan and calling `stabilize`"}, {"title": "Cache decimals", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/371", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Cache decimals"}, {"title": "MiningService.setBonding should use BONDING role instead of REINVESTOR one", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/370", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "MiningService.setBonding should use BONDING role instead of REINVESTOR one"}, {"title": "(10000 - thresholdBps) can be pre-calculated", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/369", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "(10000 - thresholdBps) can be pre-calculated"}, {"title": "ERC20 import", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/364", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-malt-findings", "body": "ERC20 import"}, {"title": "purchaseArbitrageTokens 0 amount", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/359", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "purchaseArbitrageTokens 0 amount"}, {"title": "Unbounded loops", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/358", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Unbounded loops"}, {"title": "maxAmount and balance", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/357", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "maxAmount and balance"}, {"title": "Inclusive checks", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/356", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Inclusive checks"}, {"title": "Auction.claimArbitrage: if calculated claimable amount is too big, the remaining committed amount cannot be retrieved", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/353", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Auction.claimArbitrage: if calculated claimable amount is too big, the remaining committed amount cannot be retrieved"}, {"title": "Inconsistencies when checking if the auction is active", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/352", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Inconsistencies when checking if the auction is active"}, {"title": "Validation of 'to' in transferAndCall and transferWithPermit", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/350", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Validation of 'to' in transferAndCall and transferWithPermit"}, {"title": "DOMAIN_SEPARATOR can change", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/349", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "DOMAIN_SEPARATOR can change"}, {"title": "Create2Deployer", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/348", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Create2Deployer"}, {"title": "Inaccurate revert messages", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/343", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Inaccurate revert messages"}, {"title": "RewardReinvestor - safeTransfer used unnecessarily on Malt token", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/339", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "RewardReinvestor - safeTransfer used unnecessarily on Malt token"}, {"title": "AbstractRewardMine - Re-entrancy attack during withdrawal", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/333", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AbstractRewardMine - Re-entrancy attack during withdrawal"}, {"title": "Various contracts - remove unused function parameters to save gas ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/331", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Various contracts - remove unused function parameters to save gas "}, {"title": "Various contracts - stricter function mutability for gas savings", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/330", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Various contracts - stricter function mutability for gas savings"}, {"title": "Permissions - return values not checked when sending ETH", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/329", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Permissions - return values not checked when sending ETH"}, {"title": "AuctionBurnReserveSkew - remove `for` loop from initializer", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/326", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AuctionBurnReserveSkew - remove `for` loop from initializer"}, {"title": "User can bypass Recovery Mode via UniswapHandler to buy Malt ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/325", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "User can bypass Recovery Mode via UniswapHandler to buy Malt "}, {"title": "Unable to remove liquidity in Recovery Mode", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/323", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Unable to remove liquidity in Recovery Mode"}, {"title": "Missing `maltDataLab.trackReserveRatio()` in some cases after `swingTrader.sellMalt()`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/320", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Missing `maltDataLab.trackReserveRatio()` in some cases after `swingTrader.sellMalt()`"}, {"title": "Use short reason strings can save gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/317", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Use short reason strings can save gas"}, {"title": "Redundant checks", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/316", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Redundant checks"}, {"title": "Outdated versions of OpenZeppelin library", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/315", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Outdated versions of OpenZeppelin library"}, {"title": "`MovingAverage.setSampleMemory()` may broke MovingAverage, making the value of `exchangeRate` in `StabilizerNode.stabilize()` being extremely wrong", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/313", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`MovingAverage.setSampleMemory()` may broke MovingAverage, making the value of `exchangeRate` in `StabilizerNode.stabilize()` being extremely wrong"}, {"title": "Checking if `lpProfitCut > 0` can save gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/310", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Checking if `lpProfitCut > 0` can save gas"}, {"title": "Checking `uint256` variables `>= 0` is redundant", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/309", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Checking `uint256` variables `>= 0` is redundant"}, {"title": "`MovingAverage.sol#_getFirstSample()` Implementation can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/308", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "`MovingAverage.sol#_getFirstSample()` Implementation can be simpler and save some gas"}, {"title": "Only use `SafeMath` when necessary can save gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/307", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Only use `SafeMath` when necessary can save gas"}, {"title": "`AuctionBurnReserveSkew.sol#getRealBurnBudget()` Implementation can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/306", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`AuctionBurnReserveSkew.sol#getRealBurnBudget()` Implementation can be simpler and save some gas"}, {"title": "Users may lose a small portion of promised returns due to precision loss", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/305", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Users may lose a small portion of promised returns due to precision loss"}, {"title": "Returning the named returns is redundant", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/304", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Returning the named returns is redundant"}, {"title": "Misleading variable names", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/302", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Misleading variable names"}, {"title": "`AuctionBurnReserveSkew.sol#getPegDeltaFrequency()` Implementation can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/301", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`AuctionBurnReserveSkew.sol#getPegDeltaFrequency()` Implementation can be simpler and save some gas"}, {"title": "Cache external call results can save gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/300", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2021-11-malt-findings", "body": "Cache external call results can save gas"}, {"title": "Unnecessary internal function calls", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/296", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Unnecessary internal function calls"}, {"title": "`++i` is more gas efficient than `i++`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/295", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`++i` is more gas efficient than `i++`"}, {"title": "`AuctionBurnReserveSkew.getPegDeltaFrequency()` Wrong implementation can result in an improper amount of excess Liquidity Extension balance to be used at the end of an auction ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/294", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`AuctionBurnReserveSkew.getPegDeltaFrequency()` Wrong implementation can result in an improper amount of excess Liquidity Extension balance to be used at the end of an auction "}, {"title": "`StabilizerNode.sol` The current implementation is misconfiguration-prone for rewardToken with non-18 decimals", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/293", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`StabilizerNode.sol` The current implementation is misconfiguration-prone for rewardToken with non-18 decimals"}, {"title": "The value of `reward` parameter of the `ProvideReinvest` event can be wrong", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/292", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "The value of `reward` parameter of the `ProvideReinvest` event can be wrong"}, {"title": "Permissions.sol#_swapRole is named wrongly", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/290", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Permissions.sol#_swapRole is named wrongly"}, {"title": "Custom size uint is not more efficient than uint256", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/289", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Custom size uint is not more efficient than uint256"}, {"title": "Dont calculate progressionBps, when not needed", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/288", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Dont calculate progressionBps, when not needed"}, {"title": "Unused storage variables", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/287", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Unused storage variables"}, {"title": "Misleading error message", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/286", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Misleading error message"}, {"title": "AbstractRewardMine.sol#setRewardToken is dangerous", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/285", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AbstractRewardMine.sol#setRewardToken is dangerous"}, {"title": "AbstractRewardMine.sol#_removeFromStakePadding can be implemented more efficiently", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/284", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "AbstractRewardMine.sol#_removeFromStakePadding can be implemented more efficiently"}, {"title": "Use immutable variable can save gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/280", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-malt-findings", "body": "Use immutable variable can save gas"}, {"title": "Race condition on ERC20 approval", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/276", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Race condition on ERC20 approval"}, {"title": "`uint64(block.timestamp % 2**64)` can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/273", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`uint64(block.timestamp % 2**64)` can be simpler and save some gas"}, {"title": "For uint `> 0` can be replaced with ` != 0` for gas optimisation", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/271", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "For uint `> 0` can be replaced with ` != 0` for gas optimisation"}, {"title": "`MovingAverage.sol` Use inline expression can save gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/269", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`MovingAverage.sol` Use inline expression can save gas"}, {"title": "AuctionEschapeHatch.sol#exitEarly updates state of the auction wrongly", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/268", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AuctionEschapeHatch.sol#exitEarly updates state of the auction wrongly"}, {"title": "Code Style: private/internal function names should be prefixed with `_`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/265", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Code Style: private/internal function names should be prefixed with `_`"}, {"title": "Timelock can be bypassed", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/263", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Timelock can be bypassed"}, {"title": "Remove liquidity never ends up with left-over LP tokens", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/259", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Remove liquidity never ends up with left-over LP tokens"}, {"title": "Wrong comment in `removeLiquidity`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/258", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-malt-findings", "body": "Wrong comment in `removeLiquidity`"}, {"title": "Slippage checks when adding liquidity are too strict", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/257", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Slippage checks when adding liquidity are too strict"}, {"title": "`UniswapHandler.maltMarketPrice` returns wrong decimals", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/255", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`UniswapHandler.maltMarketPrice` returns wrong decimals"}, {"title": "`splitReinvest` does not provide liquidity at optimal ratio", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/253", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "`splitReinvest` does not provide liquidity at optimal ratio"}, {"title": "`_getFirstSample` returns wrong sample if count < sampleMemory", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/252", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`_getFirstSample` returns wrong sample if count < sampleMemory"}, {"title": "Bonding doesn't work with fee-on transfer tokens", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/251", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Bonding doesn't work with fee-on transfer tokens"}, {"title": "Wrong permissions on `reassignGlobalAdmin`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/250", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Wrong permissions on `reassignGlobalAdmin`"}, {"title": "Initial `SetTransferService` event not emitted", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/249", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Initial `SetTransferService` event not emitted"}, {"title": "`approve` return values not checked & unsafe", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/247", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`approve` return values not checked & unsafe"}, {"title": "`totalDeclaredReward >= totalReleasedReward` not true in `AbstractRewardMine`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/246", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "`totalDeclaredReward >= totalReleasedReward` not true in `AbstractRewardMine`"}, {"title": "`initialize` functions can be frontrun", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/245", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`initialize` functions can be frontrun"}, {"title": "Implementations should inherit their interface", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/242", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Implementations should inherit their interface"}, {"title": "Missing Overflow Protection On the DeployedCapital", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/238", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Missing Overflow Protection On the DeployedCapital"}, {"title": "Auction.sol amendAccountParticipation has no zero division check", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/235", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Auction.sol amendAccountParticipation has no zero division check"}, {"title": "Bonding.sol _unbondAndBreak does not account for edge case where no tokens are returned", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/234", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Bonding.sol _unbondAndBreak does not account for edge case where no tokens are returned"}, {"title": "`permit` Double Emits An `Approval` Event", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/230", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`permit` Double Emits An `Approval` Event"}, {"title": "`_distributeRewards` Does Not Reset Approval If Not All Tokens Were Allocated", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/229", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`_distributeRewards` Does Not Reset Approval If Not All Tokens Were Allocated"}, {"title": "`addLiquidity` Does Not Reset Approval If Not All Tokens Were Added To Liquidity Pool", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/228", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`addLiquidity` Does Not Reset Approval If Not All Tokens Were Added To Liquidity Pool"}, {"title": "Auction collateralToken won't work if token is fee-on-transfer token ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/227", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Auction collateralToken won't work if token is fee-on-transfer token "}, {"title": "Frontrunning in UniswapHandler calls to UniswapV2Router", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/219", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Frontrunning in UniswapHandler calls to UniswapV2Router"}, {"title": "Missing zero address check which will put forfeited rewards at risk(ForefeitHandler.sol) ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/216", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Missing zero address check which will put forfeited rewards at risk(ForefeitHandler.sol) "}, {"title": "`_calculateMaltRequiredForExit` Uses Spot Price To Calculate Malt Quantity In `exitEarly`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/215", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`_calculateMaltRequiredForExit` Uses Spot Price To Calculate Malt Quantity In `exitEarly`"}, {"title": "Timelock reuse function argument as argument for the event emit", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/214", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Timelock reuse function argument as argument for the event emit"}, {"title": "MovingAverage:getValueWithLookback move sampleDiff  to save gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/212", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "MovingAverage:getValueWithLookback move sampleDiff  to save gas"}, {"title": "MovingAverage:getValue move the declaration/initialization of sampleDiff to save gas in the case of an early return", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/210", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "MovingAverage:getValue move the declaration/initialization of sampleDiff to save gas in the case of an early return"}, {"title": "MovingAverage:initialize reuse argument variable instead storage variable in the loop condition", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/209", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "MovingAverage:initialize reuse argument variable instead storage variable in the loop condition"}, {"title": "Reduce external calls", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/208", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Reduce external calls"}, {"title": "decimals return of costBasis is not used.", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/205", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "decimals return of costBasis is not used."}, {"title": "deployedCapital variable is internal", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/200", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "deployedCapital variable is internal"}, {"title": "In TransactionService, store index of source to avoid loop when removing verifier", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/199", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "In TransactionService, store index of source to avoid loop when removing verifier"}, {"title": "Revert transaction if it is unable to change data", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/198", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Revert transaction if it is unable to change data"}, {"title": "_notSameBlock() can be circumvented in bondToAccount() ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/195", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "_notSameBlock() can be circumvented in bondToAccount() "}, {"title": "Adapt count in setAuctionAverageLookback?", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/194", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Adapt count in setAuctionAverageLookback?"}, {"title": "setSampleMemory counter set to right value?", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/193", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "setSampleMemory counter set to right value?"}, {"title": "Max value of upperStabilityThreshold and lowerStabilityThreshold not checked", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/192", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Max value of upperStabilityThreshold and lowerStabilityThreshold not checked"}, {"title": "`StabilizerNode` Will Mint An Incentive For Triggering An Auction Even If An Auction Exists Already", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/191", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`StabilizerNode` Will Mint An Incentive For Triggering An Auction Even If An Auction Exists Already"}, {"title": "No max for advanceIncentive", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/190", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "No max for advanceIncentive"}, {"title": "Users Can Contribute To An Auction Without Directly Committing Collateral Tokens", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/188", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Users Can Contribute To An Auction Without Directly Committing Collateral Tokens"}, {"title": "governor or timelock", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/187", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "governor or timelock"}, {"title": "Outdated Solidity Version Provides No Protections Against Arithmetic Underflows And Overflows", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/185", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Outdated Solidity Version Provides No Protections Against Arithmetic Underflows And Overflows"}, {"title": "`setupParticipant` function should be internal", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/183", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "`setupParticipant` function should be internal"}, {"title": "Similar code in `getCollateralValueInMalt` and `totalUsefulCollateral` functions ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/180", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Similar code in `getCollateralValueInMalt` and `totalUsefulCollateral` functions "}, {"title": "Duplicated code in `unbond` and `unbondAndBreak` functions", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/178", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Duplicated code in `unbond` and `unbondAndBreak` functions"}, {"title": "Malt decimals inconsistency: StabilizerNode and DAO contracts use 18 as hard coded Malt decimals", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/175", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Malt decimals inconsistency: StabilizerNode and DAO contracts use 18 as hard coded Malt decimals"}, {"title": "Lack of precision", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/168", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Lack of precision"}, {"title": "State variables that could be set immutable", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/164", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-malt-findings", "body": "State variables that could be set immutable"}, {"title": "Public functions to external", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/163", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Public functions to external"}, {"title": "Storage double reading. Could save SLOAD", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/161", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Storage double reading. Could save SLOAD"}, {"title": "Unused declared local variables", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/158", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Unused declared local variables"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/157", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Unused imports"}, {"title": "AuctionBurnReserveSkew:addAbovePegObservation gas optimization", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/153", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AuctionBurnReserveSkew:addAbovePegObservation gas optimization"}, {"title": "AuctionBurnReserveSkew:getRealBurnBudget no underflow check needed", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/152", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AuctionBurnReserveSkew:getRealBurnBudget no underflow check needed"}, {"title": "Auction:amendAccountParticipation no underflow check needed", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/151", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Auction:amendAccountParticipation no underflow check needed"}, {"title": "Auction:claimArbitrage no underflow checks needed", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/149", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Auction:claimArbitrage no underflow checks needed"}, {"title": "Auction:purchaseArbitrageTokens gas optimization", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/147", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Auction:purchaseArbitrageTokens gas optimization"}, {"title": "RewardThrottle:handleReward gas optimizations", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/144", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "RewardThrottle:handleReward gas optimizations"}, {"title": "RewardDistributor:decrementRewards no underflow check needed", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/143", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "RewardDistributor:decrementRewards no underflow check needed"}, {"title": "RewardDistributor:_incrementFocalPoint() save storage read", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/142", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "RewardDistributor:_incrementFocalPoint() save storage read"}, {"title": "RewardDistributor:_forfeit no underflow check needed", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/140", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "RewardDistributor:_forfeit no underflow check needed"}, {"title": "Unneeded variables (Auction.sol, StabilizerNode.sol)", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/137", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Unneeded variables (Auction.sol, StabilizerNode.sol)"}, {"title": "Code does not match comments in \"_finalizeAuction\" (Auction.sol)", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/135", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Code does not match comments in \"_finalizeAuction\" (Auction.sol)"}, {"title": "AbstractRewardMine._handleStakePadding logic cases can be separated and function simplified", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/131", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AbstractRewardMine._handleStakePadding logic cases can be separated and function simplified"}, {"title": "setupParticipant() function does not check for zero address", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/130", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "setupParticipant() function does not check for zero address"}, {"title": " AbstractRewardMine._handleStakePadding calls totalDeclaredReward and this way balanceOf function twice", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/128", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": " AbstractRewardMine._handleStakePadding calls totalDeclaredReward and this way balanceOf function twice"}, {"title": "TIMELOCK_ROLE Has Absolute Power to Withdraw All FUND May Raise Red Flags for Investors", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/125", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-11-malt-findings", "body": "TIMELOCK_ROLE Has Absolute Power to Withdraw All FUND May Raise Red Flags for Investors"}, {"title": "The Power Structure is Too Centralized And Protocol May Break If Anything Happen to Admin", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/124", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-11-malt-findings", "body": "The Power Structure is Too Centralized And Protocol May Break If Anything Happen to Admin"}, {"title": "sellMalt(), addLiquidity() and removeLiquidity() Allow Non Privileged Users Withdraw Fund", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/120", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "sellMalt(), addLiquidity() and removeLiquidity() Allow Non Privileged Users Withdraw Fund"}, {"title": "removeVerifier() Repeat SLOAD During Loop Is Waste of Gas", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/117", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "removeVerifier() Repeat SLOAD During Loop Is Waste of Gas"}, {"title": "Avoiding Initialization of Loop Index If It Is 0", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/116", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Avoiding Initialization of Loop Index If It Is 0"}, {"title": "_setupRole() Deprecated and Not Using With Constructor Effectively Circumventing the Admin System", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/115", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "_setupRole() Deprecated and Not Using With Constructor Effectively Circumventing the Admin System"}, {"title": "AbstractRewardMine.getRewardOwnershipFraction shouldn't be used internally", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/114", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AbstractRewardMine.getRewardOwnershipFraction shouldn't be used internally"}, {"title": "reassignGlobalAdmin() Lack of Zero Address Check ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/113", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "reassignGlobalAdmin() Lack of Zero Address Check "}, {"title": "reassignGlobalAdmin() Have No Transfer Ownership Pattern", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/112", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "reassignGlobalAdmin() Have No Transfer Ownership Pattern"}, {"title": "Redundant require statements in `Auction:purchaseArbitrageTokens`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/108", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Redundant require statements in `Auction:purchaseArbitrageTokens`"}, {"title": "Cache array length in `for` loops", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/106", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Cache array length in `for` loops"}, {"title": "Incorrect error messages in `StabilizerNode.sol`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/103", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Incorrect error messages in `StabilizerNode.sol`"}, {"title": "Don't try bonding zero liquidity in `RewardReinvestor`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/101", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Don't try bonding zero liquidity in `RewardReinvestor`"}, {"title": "No message in require statements.", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/98", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "No message in require statements."}, {"title": "functions visibility on contract AuctionEscapeHatch", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/97", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "functions visibility on contract AuctionEscapeHatch"}, {"title": "functions visibility on contract Timelock.sol", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/91", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-malt-findings", "body": "functions visibility on contract Timelock.sol"}, {"title": " Cache Reference To State Variable \"currentAuctionID\" in _checkAuctionFinalization (Auction.sol)", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/89", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": " Cache Reference To State Variable \"currentAuctionID\" in _checkAuctionFinalization (Auction.sol)"}, {"title": "AuctionParticipant.sol: `setReplenishingIndex` mistake could freeze unclaimed tokens", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/88", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AuctionParticipant.sol: `setReplenishingIndex` mistake could freeze unclaimed tokens"}, {"title": "AuctionParticipant.sol: `purchaseArbitrageTokens` should not push duplicate auctions", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/87", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AuctionParticipant.sol: `purchaseArbitrageTokens` should not push duplicate auctions"}, {"title": "AuctionParticipant.sol: `replenishingIndex` incrementing should be improved", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/85", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "AuctionParticipant.sol: `replenishingIndex` incrementing should be improved"}, {"title": "Assignment Of Variables To Default ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/80", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Assignment Of Variables To Default "}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/79", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Open TODOs"}, {"title": "Underutilized Named Returns", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/77", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-malt-findings", "body": "Underutilized Named Returns"}, {"title": "Unused Named Returns", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/76", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-malt-findings", "body": "Unused Named Returns"}, {"title": "Lack Of Return Value Check On the Dex Handler Malt Price Calculation", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/75", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Lack Of Return Value Check On the Dex Handler Malt Price Calculation"}, {"title": "Missing zero-address checks on contract initialization", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/74", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Missing zero-address checks on contract initialization"}, {"title": "SwingTrader.costBasis function should have internal version that uses Malt balance from sellMalt", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "SwingTrader.costBasis function should have internal version that uses Malt balance from sellMalt"}, {"title": "SwingTrader: sellMalt and costBasis functions can be simplified", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "SwingTrader: sellMalt and costBasis functions can be simplified"}, {"title": "Unused event or missed emit on SetAnnualYield()", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/69", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Unused event or missed emit on SetAnnualYield()"}, {"title": "Auction.userClaimableArbTokens amountOut calculations can be simplified", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/67", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Auction.userClaimableArbTokens amountOut calculations can be simplified"}, {"title": "Multiple Zero address transfer functions on contract Permissions", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/64", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Multiple Zero address transfer functions on contract Permissions"}, {"title": "getAuctionCore function returns wrong values out of order", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/63", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "getAuctionCore function returns wrong values out of order"}, {"title": "SafeMath library is not always used in the contracts", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/60", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "SafeMath library is not always used in the contracts"}, {"title": " Missing events for admin only functions that change critical parameters", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/58", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": " Missing events for admin only functions that change critical parameters"}, {"title": "theft of system profit", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/56", "labels": ["bug", "2 (Med Risk)", "needs additional sponsor input"], "target": "2021-11-malt-findings", "body": "theft of system profit"}, {"title": "Auction.userClaimableArbTokens claimablePerc calculations can be simplified", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Auction.userClaimableArbTokens claimablePerc calculations can be simplified"}, {"title": "Auction.userClaimableArbTokens nonzero auction.finalPrice check is redundant", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Auction.userClaimableArbTokens nonzero auction.finalPrice check is redundant"}, {"title": "initialized storage variables are set again in the initializer function ", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/45", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "initialized storage variables are set again in the initializer function "}, {"title": "The Contract Should safeApprove(0) first", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "The Contract Should safeApprove(0) first"}, {"title": "Storage Optimization", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Storage Optimization"}, {"title": "Index address of events for better filtering", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/31", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Index address of events for better filtering"}, {"title": "Use bps uniformly", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/30", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Use bps uniformly"}, {"title": "SafeMath Not Used Nearly At All In MovingAverage.sol", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/21", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "SafeMath Not Used Nearly At All In MovingAverage.sol"}, {"title": "Deprecated Function Usage", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/18", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Deprecated Function Usage"}, {"title": "Should include non-existing contract check", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/9", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Should include non-existing contract check"}, {"title": "Unnecessary event fields", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/5", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Unnecessary event fields"}]