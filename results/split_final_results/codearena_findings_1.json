[{"title": "making public", "html_url": "https://github.com/code-423n4/2021-03-elasticdao-findings/issues/1", "labels": [], "target": "2021-03-elasticdao-findings", "body": "making public"}, {"title": "Magic Numbers used in Admin._stake() When Constant Defined Above Can Be Used Instead", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/71", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "Magic Numbers used in Admin._stake() When Constant Defined Above Can Be Used Instead"}, {"title": "Add a timelock to functions that set key variables", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/70", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "Add a timelock to functions that set key variables"}, {"title": "Duplicated Code In Admin.viewCurrentMaintenanceStaker()", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/69", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "Duplicated Code In Admin.viewCurrentMaintenanceStaker()"}, {"title": "Users Can Drain Funds From MarginSwap By Making Undercollateralized Borrows If The Price Of A Token Has Moved More Than 10% Since The Last MarginSwap Borrow/Liquidation Involving Accounts Holding That Token.", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/67", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Users Can Drain Funds From MarginSwap By Making Undercollateralized Borrows If The Price Of A Token Has Moved More Than 10% Since The Last MarginSwap Borrow/Liquidation Involving Accounts Holding That Token."}, {"title": "The First User To Borrow a Particular Token Can Drain Funds In MarginSwap by Making An Undercollateralized Borrow Using Flash Loans", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/66", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "The First User To Borrow a Particular Token Can Drain Funds In MarginSwap by Making An Undercollateralized Borrow Using Flash Loans"}, {"title": "Impossible to call withdrawReward fails due to run out of gas", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/65", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Impossible to call withdrawReward fails due to run out of gas"}, {"title": "Inconsistent usage of applyInterest", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/64", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Inconsistent usage of applyInterest"}, {"title": "[Gas] Useless addition of 0", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/62", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[Gas] Useless addition of 0"}, {"title": "Not emitting event for important state changes", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/61", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "Not emitting event for important state changes"}, {"title": "[Gas] Do not send value if holdingsValue is 0", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/60", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[Gas] Do not send value if holdingsValue is 0"}, {"title": "[Gas] Extract storage variable to a memory variable", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/59", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[Gas] Extract storage variable to a memory variable"}, {"title": "[Gas] Not used imports", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/58", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[Gas] Not used imports"}, {"title": "[Gas] only process value if amount is greater than 0", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/57", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[Gas] only process value if amount is greater than 0"}, {"title": "[Gas] unused variables", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/56", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[Gas] unused variables"}, {"title": "[Gas] same calculations are done twice", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/55", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[Gas] same calculations are done twice"}, {"title": "[Gas] Error codes", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/54", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[Gas] Error codes"}, {"title": "[INFO] liquidators may be a subject of front-running attacks", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/53", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] liquidators may be a subject of front-running attacks"}, {"title": "[INFO] allTranches array is unbounded", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/52", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] allTranches array is unbounded"}, {"title": "[INFO] Inaccurate revert message in function deactivateIssuer", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/51", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] Inaccurate revert message in function deactivateIssuer"}, {"title": "[INFO] Optimize the inheritance tree", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/50", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] Optimize the inheritance tree"}, {"title": "[INFO] setUpdateMaxPegAmount and setUpdateMinPegAmount do not check boundaries", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/49", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] setUpdateMaxPegAmount and setUpdateMinPegAmount do not check boundaries"}, {"title": "[INFO] Misleading revert messages", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/48", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] Misleading revert messages"}, {"title": "[INFO] Code duplication in viewCurrentMaintenanceStaker", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/47", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] Code duplication in viewCurrentMaintenanceStaker"}, {"title": "[INFO] Variable is declared and initialized with different values", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/46", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] Variable is declared and initialized with different values"}, {"title": "[INFO] Useless overflow comments", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/45", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] Useless overflow comments"}, {"title": "[INFO] Consistent function names", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/44", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] Consistent function names"}, {"title": "[INFO] TODOs", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/43", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] TODOs"}, {"title": "[INFO] All caps indicates that the value should be constant", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/42", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "[INFO] All caps indicates that the value should be constant"}, {"title": "setLeveragePercent should check that new _leveragePercent >= 100", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/41", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "setLeveragePercent should check that new _leveragePercent >= 100"}, {"title": "Isolated margin contracts declare but do not set the value of liquidationThresholdPercent", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/40", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "Isolated margin contracts declare but do not set the value of liquidationThresholdPercent"}, {"title": "PriceAware uses prices from getAmountsOut", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/39", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "PriceAware uses prices from getAmountsOut"}, {"title": "function buyBond charges msg.sender twice", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/38", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "function buyBond charges msg.sender twice"}, {"title": "diffMaxMinRuntime gets default value of 0", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/37", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "diffMaxMinRuntime gets default value of 0"}, {"title": "runtime > 1 hours error message discrepancy", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/36", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "runtime > 1 hours error message discrepancy"}, {"title": "function initTranche should check that the share parameter is > 0", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/35", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "function initTranche should check that the share parameter is > 0"}, {"title": "function crossWithdrawETH does not emit withdraw event", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/34", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-marginswap-findings", "body": "function crossWithdrawETH does not emit withdraw event"}, {"title": "An erroneous constructor's argument could block the withdrawReward", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/33", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "An erroneous constructor's argument could block the withdrawReward"}, {"title": "Unlocked Pragma", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/31", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-marginswap-findings", "body": "Unlocked Pragma"}, {"title": "`getReserves` does not check if tokens match", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/30", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "`getReserves` does not check if tokens match"}, {"title": "Missing checks if pairs equal tokens", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/29", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "Missing checks if pairs equal tokens"}, {"title": " No default `liquidationThresholdPercent`", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/28", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": " No default `liquidationThresholdPercent`"}, {"title": "Events not indexed", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/27", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "Events not indexed"}, {"title": "Rewards cannot be withdrawn", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/26", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Rewards cannot be withdrawn"}, {"title": "`account.holdsToken` is never set", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/25", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "`account.holdsToken` is never set"}, {"title": "Users are credited more tokens when paying back debt with `registerTradeAndBorrow`", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/24", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Users are credited more tokens when paying back debt with `registerTradeAndBorrow`"}, {"title": "Wrong liquidation logic", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/23", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Wrong liquidation logic"}, {"title": "Liquidations can be sandwich attacked", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/22", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-marginswap-findings", "body": "Liquidations can be sandwich attacked"}, {"title": "Price feed can be manipulated", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/21", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Price feed can be manipulated"}, {"title": "Missing `fromToken != toToken` check in `MarginRouter.crossSwapExactTokensForTokens`/`MarginRouter.crossSwapTokensForExactTokens`", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/20", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Missing `fromToken != toToken` check in `MarginRouter.crossSwapExactTokensForTokens`/`MarginRouter.crossSwapTokensForExactTokens`"}, {"title": "Re-entrancy bug in `MarginRouter.crossSwapTokensForExactTokens` allows inflating balance", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/19", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "Re-entrancy bug in `MarginRouter.crossSwapTokensForExactTokens` allows inflating balance"}, {"title": "Naming convention for internal functions not used consistently", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/17", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-marginswap-findings", "body": "Naming convention for internal functions not used consistently"}, {"title": "Function parameter named timestamp", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/16", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-marginswap-findings", "body": "Function parameter named timestamp"}, {"title": "Natspec comments not used in a consistent way", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/15", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-marginswap-findings", "body": "Natspec comments not used in a consistent way"}, {"title": "lastUpdatedDay not initialized", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/14", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-marginswap-findings", "body": "lastUpdatedDay not initialized"}, {"title": "Multisig wallets can't be used for liquidate", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/13", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "Multisig wallets can't be used for liquidate"}, {"title": "isStakePenalizer differtent than other functions in RoleAware.sol", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/12", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-marginswap-findings", "body": "isStakePenalizer differtent than other functions in RoleAware.sol"}, {"title": "No function for TOKEN_ADMIN in RoleAware.sol", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/11", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-marginswap-findings", "body": "No function for TOKEN_ADMIN in RoleAware.sol"}, {"title": "Role 9  in Roles.sol", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/10", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "Role 9  in Roles.sol"}, {"title": "Several function have no entry check", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/9", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "Several function have no entry check"}, {"title": "Todo's left in code", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/8", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "Todo's left in code"}, {"title": "sortTokens can be simplified", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/7", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "sortTokens can be simplified"}, {"title": "Different solidity version in UniswapStyleLib.sol", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/6", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-marginswap-findings", "body": "Different solidity version in UniswapStyleLib.sol"}, {"title": "maintainer can be pushed out", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/5", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "maintainer can be pushed out"}, {"title": "No entry checks in crossSwap[Exact]TokensFor[Exact]Tokens", "html_url": "https://github.com/code-423n4/2021-04-marginswap-findings/issues/4", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-marginswap-findings", "body": "No entry checks in crossSwap[Exact]TokensFor[Exact]Tokens"}, {"title": "Bypass or reduction on the lockup period of Pool FDTs.", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/117", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Bypass or reduction on the lockup period of Pool FDTs."}, {"title": "Potential reentrancy when the borrower drawdowns the loan.", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/115", "labels": ["bug", "duplicate", "1 (Low Risk)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Potential reentrancy when the borrower drawdowns the loan."}, {"title": "Functions calculating the value of `BPT` is vulnerable to flash-loan attacks.", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/113", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Functions calculating the value of `BPT` is vulnerable to flash-loan attacks."}, {"title": "Full payment does not consider late fees of the payment", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/112", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "resolved"], "target": "2021-04-maple-findings", "body": "Full payment does not consider late fees of the payment"}, {"title": "Oracle not checked if set for an asset", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/110", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Oracle not checked if set for an asset"}, {"title": "Not ERC20 Compliant", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-04-maple-findings", "body": "Not ERC20 Compliant"}, {"title": "Default slippage value too high", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/106", "labels": ["bug", "2 (Med Risk)", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-04-maple-findings", "body": "Default slippage value too high"}, {"title": "Uniswap DOS", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/105", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Uniswap DOS"}, {"title": "getRewardForDuration will start returning misleading results if rewardsDuration is updated", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/103", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "getRewardForDuration will start returning misleading results if rewardsDuration is updated"}, {"title": "LoanLib.unwind uses globals.fundingPeriod()", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/100", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "LoanLib.unwind uses globals.fundingPeriod()"}, {"title": "Function triggerDefault should call _emitBalanceUpdateEventForCollateralLocker", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/99", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Function triggerDefault should call _emitBalanceUpdateEventForCollateralLocker"}, {"title": "Interface and implementation function declaration differs", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/98", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Interface and implementation function declaration differs"}, {"title": "Unused code", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/97", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Unused code"}, {"title": "Comment indicates that FundsWithdrawn event should be emitted only when _withdrawableDividend > 0", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/96", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Comment indicates that FundsWithdrawn event should be emitted only when _withdrawableDividend > 0"}, {"title": "Griefing attack on pool creation in PoolFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/94", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Griefing attack on pool creation in PoolFactory.sol"}, {"title": "Griefing attack on loan creation in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/93", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Griefing attack on loan creation in LoanFactory.sol"}, {"title": "Potential huge arbitrage opportunities / MPL price decrease", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/92", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Potential huge arbitrage opportunities / MPL price decrease"}, {"title": "MPL USDC distributions can be withdrawn by anyone", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/91", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "MPL USDC distributions can be withdrawn by anyone"}, {"title": "MPL reward claims of balancer pools can be exploited", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/90", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "MPL reward claims of balancer pools can be exploited"}, {"title": "Allowance Double-Spend Exploit", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/89", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Allowance Double-Spend Exploit"}, {"title": "Possible sandwich-attack when treasury converts tokens", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/88", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Possible sandwich-attack when treasury converts tokens"}, {"title": "Missing non-zero check", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/87", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Missing non-zero check"}, {"title": "Missing index on events", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/86", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing index on events"}, {"title": "Missing check on `setManualPrice(int256 _price)`", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/85", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing check on `setManualPrice(int256 _price)`"}, {"title": "Wrong docs on UsdOracle", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/84", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Wrong docs on UsdOracle"}, {"title": "Chainlink Price oracle always assumes 8 decimals", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/83", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Chainlink Price oracle always assumes 8 decimals"}, {"title": "Chainlink Price data could be stale", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/82", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Chainlink Price data could be stale"}, {"title": "Unnecessary check for `uint256 >= 0`", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/79", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "resolved"], "target": "2021-04-maple-findings", "body": "Unnecessary check for `uint256 >= 0`"}, {"title": "Unused variable in `PoolLib.handleDefault`", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/78", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Unused variable in `PoolLib.handleDefault`"}, {"title": "Outdated Compiler", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/77", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Outdated Compiler"}, {"title": "Use of mapping in place of array in `PoolFactory` and `LoanFactory`", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/76", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Use of mapping in place of array in `PoolFactory` and `LoanFactory`"}, {"title": "Using precalculated value in the Pool & Loan contracts", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/75", "labels": ["bug", "sponsor confirmed", "resolved", "G (Gas Optimization)"], "target": "2021-04-maple-findings", "body": "Using precalculated value in the Pool & Loan contracts"}, {"title": "Optimising Factory contracts by using structs  ", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/73", "labels": ["bug", "sponsor acknowledged", "G (Gas Optimization)"], "target": "2021-04-maple-findings", "body": "Optimising Factory contracts by using structs  "}, {"title": "Event emission inconsistent with NatSpec comment in ERC2222.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/72", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Event emission inconsistent with NatSpec comment in ERC2222.sol"}, {"title": "Inconsistent NatSpec comment in Pool.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in Pool.sol"}, {"title": "Inconsistent NatSpec comment in Pool.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/70", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in Pool.sol"}, {"title": "Missing event for critical operation of setAdmin change in Pool.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/69", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of setAdmin change in Pool.sol"}, {"title": "Missing check for Pool state on several functions in Pool.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Missing check for Pool state on several functions in Pool.sol"}, {"title": "Missing check for stakingFee+delegateFee in Pool.sol constructor", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/66", "labels": ["1 (Low Risk)", "invalid"], "target": "2021-04-maple-findings", "body": "Missing check for stakingFee+delegateFee in Pool.sol constructor"}, {"title": "Incorrect require error message string in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/65", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Incorrect require error message string in LoanFactory.sol"}, {"title": "Inconsistent NatSpec comment in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in LoanFactory.sol"}, {"title": "Incorrect require error message string in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/63", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Incorrect require error message string in LoanFactory.sol"}, {"title": "Incorrect require error message string in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Incorrect require error message string in LoanFactory.sol"}, {"title": "Inconsistent NatSpec comment in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/61", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in LoanFactory.sol"}, {"title": "Inconsistent NatSpec comment in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in LoanFactory.sol"}, {"title": "Inconsistent NatSpec comment in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/59", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in LoanFactory.sol"}, {"title": "Inconsistent NatSpec comment in PoolFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/58", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in PoolFactory.sol"}, {"title": "Inconsistent NatSpec comment in PoolFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/57", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in PoolFactory.sol"}, {"title": "Inconsistent NatSpec comment in PoolFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in PoolFactory.sol"}, {"title": "Inconsistent NatSpec comment in PoolFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/55", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in PoolFactory.sol"}, {"title": "Inconsistent NatSpec comment in PoolFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/54", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in PoolFactory.sol"}, {"title": "Specification/Implementation mismatch on Security Multisig capability", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/53", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Specification/Implementation mismatch on Security Multisig capability"}, {"title": "Specification/Implementation mismatch on Security Multisig capability", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/52", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Specification/Implementation mismatch on Security Multisig capability"}, {"title": "Missing input validation on critical globals variable for zero address in MplRewardsFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/51", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Missing input validation on critical globals variable for zero address in MplRewardsFactory.sol"}, {"title": "Missing input validation on critical globals variable for zero address in LoanFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/50", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2021-04-maple-findings", "body": "Missing input validation on critical globals variable for zero address in LoanFactory.sol"}, {"title": "Missing input validation on critical globals variable for zero address in PoolFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/49", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Missing input validation on critical globals variable for zero address in PoolFactory.sol"}, {"title": "Missing input validation on critical globals variable for zero address in MapleTreasury.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/48", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Missing input validation on critical globals variable for zero address in MapleTreasury.sol"}, {"title": "Inconsistent NatSpec comment in StakeLocker.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in StakeLocker.sol"}, {"title": "Inconsistent NatSpec comment in StakeLocker.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/46", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in StakeLocker.sol"}, {"title": "Missing input validation on function parameter for zero address in FundingLocker.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Missing input validation on function parameter for zero address in FundingLocker.sol"}, {"title": "Missing input validation on function parameter for zero address in CollateralLocker.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/44", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Missing input validation on function parameter for zero address in CollateralLocker.sol"}, {"title": "Missing input validation on function parameter for zero address in StakeLocker.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/43", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Missing input validation on function parameter for zero address in StakeLocker.sol"}, {"title": "Inconsistent NatSpec comment in StakeLocker.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/42", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in StakeLocker.sol"}, {"title": "Missing event for critical operation of Pool Delegate validity change in MapleGlobals.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/39", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of Pool Delegate validity change in MapleGlobals.sol"}, {"title": "Missing event for critical operation of setAdmin change for Protocol admin in MapleGlobals.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/38", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of setAdmin change for Protocol admin in MapleGlobals.sol"}, {"title": "Mirrored admin variables in global context, Pool, PoolFactory, Loan and LoanFactory may make it confusing for deployment and maintenance", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/36", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Mirrored admin variables in global context, Pool, PoolFactory, Loan and LoanFactory may make it confusing for deployment and maintenance"}, {"title": "Missing input validation on critical globals for zero addresses in MapleGlobals.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-04-maple-findings", "body": "Missing input validation on critical globals for zero addresses in MapleGlobals.sol"}, {"title": "Inconsistent NatSpec comment in DebtLocker.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/34", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Inconsistent NatSpec comment in DebtLocker.sol"}, {"title": "Missing event for critical operation of setAdmin change in Loan.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/33", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of setAdmin change in Loan.sol"}, {"title": "Vulnerable to potential reentrancy attacks in Loan.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/32", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Vulnerable to potential reentrancy attacks in Loan.sol"}, {"title": "Missing event for critical operation of new Liquidity locker creation in LiquidityLockerFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/31", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of new Liquidity locker creation in LiquidityLockerFactory.sol"}, {"title": "Missing event for critical operation of new Funding locker creation in FundingLockerFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/30", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of new Funding locker creation in FundingLockerFactory.sol"}, {"title": "Missing event for critical operation of new Debt locker creation in DebtLockerFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/29", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of new Debt locker creation in DebtLockerFactory.sol"}, {"title": "Missing event for critical operation of new Collateral locker creation in CollateralLockerFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/28", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of new Collateral locker creation in CollateralLockerFactory.sol"}, {"title": "Missing event for critical operation of new Collateral locker creation in CollateralLockerFactory.sol", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/27", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "resolved"], "target": "2021-04-maple-findings", "body": "Missing event for critical operation of new Collateral locker creation in CollateralLockerFactory.sol"}, {"title": "Year is not exactly 365 days", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/26", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Year is not exactly 365 days"}, {"title": "Typo NULL_TRASNFER_DST", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/25", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Typo NULL_TRASNFER_DST"}, {"title": "Same constants defined in different files", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/23", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Same constants defined in different files"}, {"title": "Unused definition of enum", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "Unused definition of enum"}, {"title": "Declare functions `external` to save gas", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/11", "labels": ["bug", "sponsor confirmed", "resolved", "G (Gas Optimization)"], "target": "2021-04-maple-findings", "body": "Declare functions `external` to save gas"}, {"title": "Missing zero address validation", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Missing zero address validation"}, {"title": "Constructor arguments to MapleTreasury not validated", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/9", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Constructor arguments to MapleTreasury not validated"}, {"title": "MapleTreasury does not emit an event when MapleGlobals address is updated", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-04-maple-findings", "body": "MapleTreasury does not emit an event when MapleGlobals address is updated"}, {"title": "Loans of tokens with >18 decimals can result in incorrect collateral calculation", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/4", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged", "resolved"], "target": "2021-04-maple-findings", "body": "Loans of tokens with >18 decimals can result in incorrect collateral calculation"}, {"title": "Cross-Chain Replay Attack", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/2", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-maple-findings", "body": "Cross-Chain Replay Attack"}, {"title": "Test of Maple Finance contest form", "html_url": "https://github.com/code-423n4/2021-04-maple-findings/issues/1", "labels": ["0 (Non-critical)"], "target": "2021-04-maple-findings", "body": "Test of Maple Finance contest form"}, {"title": "Requires a non-zero address check when deploying `CErc20` tokens and `CEther`.", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/39", "labels": ["bug", "disagree with severity", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Requires a non-zero address check when deploying `CErc20` tokens and `CEther`."}, {"title": "`UniswapAnchoredView`'s `PriceUpdated` event is never fired", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/38", "labels": ["bug", "duplicate", "disagree with severity", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "`UniswapAnchoredView`'s `PriceUpdated` event is never fired"}, {"title": "UniswapConfig getters return wrong token config if token config does not exist", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/37", "labels": ["bug", "duplicate", "3 (High Risk)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "UniswapConfig getters return wrong token config if token config does not exist"}, {"title": "Privileged roles", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/35", "labels": ["bug", "disagree with severity", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Privileged roles"}, {"title": "Reward rates can be changed through flash borrows", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/33", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Reward rates can be changed through flash borrows"}, {"title": " Unbounded iteration on `refreshCompSpeedsInternal`", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/32", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": " Unbounded iteration on `refreshCompSpeedsInternal`"}, {"title": "Usage of `address.transfer`", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/31", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "Usage of `address.transfer`"}, {"title": "[Info] functions 'getUnderlyingPriceView' and 'price' are too similar", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/29", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "[Info] functions 'getUnderlyingPriceView' and 'price' are too similar"}, {"title": "Allow borrowCap to be filled fully", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Allow borrowCap to be filled fully"}, {"title": "Use 'interface' keyword for interfaces", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/27", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Use 'interface' keyword for interfaces"}, {"title": "function getUnderlyingPrice compares against \"cETH\"", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/26", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "function getUnderlyingPrice compares against \"cETH\""}, {"title": "Use 'receive' when expecting eth and empty call data", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/25", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "Use 'receive' when expecting eth and empty call data"}, {"title": "uint(-1) index for not found", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/24", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "uint(-1) index for not found"}, {"title": "Missed NatSpec @param for newly introduced parameter distributeAll", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/22", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "Missed NatSpec @param for newly introduced parameter distributeAll"}, {"title": "Missing zero/threshold check for maxAssets", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/21", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Missing zero/threshold check for maxAssets"}, {"title": "Missing input validation may set COMP token to zero-address in Comptroller.sol", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/20", "labels": ["bug", "duplicate", "disagree with severity", "0 (Non-critical)", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Missing input validation may set COMP token to zero-address in Comptroller.sol"}, {"title": "Floating pragma used in Uniswap*.sol\u2028", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/19", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "Floating pragma used in Uniswap*.sol\u2028"}, {"title": "All except one Comptroller verify functions do not verify anything in Comptroller.sol/CToken.sol\u2028", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/18", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "All except one Comptroller verify functions do not verify anything in Comptroller.sol/CToken.sol\u2028"}, {"title": "sweepToken() function removed in CErc20.sol from original Compound code", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/17", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "sweepToken() function removed in CErc20.sol from original Compound code"}, {"title": "No account existence check for low-level call in CEther.sol", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/16", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "No account existence check for low-level call in CEther.sol"}, {"title": "Outdated Compiler", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/15", "labels": ["bug", "disagree with severity", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Outdated Compiler"}, {"title": "Missing validation for _setCompAddress", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/14", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Missing validation for _setCompAddress"}, {"title": "Missing event visbility in _setCompAddress() function", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/13", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "Missing event visbility in _setCompAddress() function"}, {"title": "uint[] memory parameter is tricky", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/12", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "uint[] memory parameter is tricky"}, {"title": "now is still used", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "now is still used"}, {"title": "More readable constants", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-04-basedloans-findings", "body": "More readable constants"}, {"title": "uint(-1)", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/7", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "uint(-1)"}, {"title": "CarefulMath / safe math not allways used", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/6", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "CarefulMath / safe math not allways used"}, {"title": "requireNoError not used in a consistent way", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/5", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "requireNoError not used in a consistent way"}, {"title": "requireNoError can be optimized", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/4", "labels": ["bug", "sponsor acknowledged", "G (Gas Optimization)"], "target": "2021-04-basedloans-findings", "body": "requireNoError can be optimized"}, {"title": "Alphabetical order not complied with (contrary to the comments)", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/3", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Alphabetical order not complied with (contrary to the comments)"}, {"title": "Reliance on the fact that NO_ERROR = 0", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/2", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Reliance on the fact that NO_ERROR = 0"}, {"title": "Multiple error enums with overlapping values", "html_url": "https://github.com/code-423n4/2021-04-basedloans-findings/issues/1", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-04-basedloans-findings", "body": "Multiple error enums with overlapping values"}, {"title": "Unnecessary function calls in `addLiquidity`", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/320", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Unnecessary function calls in `addLiquidity`"}, {"title": "Unnecessary `else if` statement in `swapWithSynthsWithLimit`", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/319", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Unnecessary `else if` statement in `swapWithSynthsWithLimit`"}, {"title": "Unrestricted `addLiquidity` could cause unintended results on front-end apps that listen to events.", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/317", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor acknowledged", "filed"], "target": "2021-04-vader-findings", "body": "Unrestricted `addLiquidity` could cause unintended results on front-end apps that listen to events."}, {"title": "Users may unintendedly remove liquidity under a phishing attack.", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/316", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-04-vader-findings", "body": "Users may unintendedly remove liquidity under a phishing attack."}, {"title": "Allowing duplicated anchors could cause bias on anchor price.", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/314", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-04-vader-findings", "body": "Allowing duplicated anchors could cause bias on anchor price."}, {"title": "Out-of-bound index access in function `getAnchorPrice`", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/313", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "Out-of-bound index access in function `getAnchorPrice`"}, {"title": "Unused and Unnecessary code", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/312", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Unused and Unnecessary code"}, {"title": "flashProof is not effective at the start", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/307", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "flashProof is not effective at the start"}, {"title": "Unused ID field in structs", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/304", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Unused ID field in structs"}, {"title": "token == arrayAnchors[i]", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/303", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "token == arrayAnchors[i]"}, {"title": "You don't need to recalculate exclusion fee every time", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/302", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "You don't need to recalculate exclusion fee every time"}, {"title": "Function can be simplified", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/301", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Function can be simplified"}, {"title": "excludedCount", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/300", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "excludedCount"}, {"title": "totalSupply + amount > maxSupply", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/299", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "totalSupply + amount > maxSupply"}, {"title": "Fee on transfer conditions", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/293", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Fee on transfer conditions"}, {"title": "Some storage optimizations", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/292", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Some storage optimizations"}, {"title": "Cache duplicate calls or storage access", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/291", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Cache duplicate calls or storage access"}, {"title": "Extract mappings to a common struct", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/289", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Extract mappings to a common struct"}, {"title": "variable == false -> !variable", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/288", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "variable == false -> !variable"}, {"title": "Extra useless steps to calculate pooledVADER and pooledUSDV ", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/287", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Extra useless steps to calculate pooledVADER and pooledUSDV "}, {"title": "Use immutable for constant variables", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/286", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Use immutable for constant variables"}, {"title": "[INFO] Code style suggestions", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/285", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-vader-findings", "body": "[INFO] Code style suggestions"}, {"title": "ERC20 specification declares decimals as uint8 type", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/283", "labels": ["bug", "0 (Non-critical)", "addressed"], "target": "2021-04-vader-findings", "body": "ERC20 specification declares decimals as uint8 type"}, {"title": "calculations of upgradedAmount is not overflow protected", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/277", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "calculations of upgradedAmount is not overflow protected"}, {"title": "curatePool emits Curated event no matter what", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/274", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "curatePool emits Curated event no matter what"}, {"title": "You can vote for proposal still not existent", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/273", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "You can vote for proposal still not existent"}, {"title": "Swap fee not applied", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/272", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "Swap fee not applied"}, {"title": "listAnchor sets _isCurated to true but forgets other parts of curation", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/271", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "listAnchor sets _isCurated to true but forgets other parts of curation"}, {"title": "_recordBurn does not handle 0 _eth appropriately", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/269", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "_recordBurn does not handle 0 _eth appropriately"}, {"title": "Function can be simplified", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/263", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Function can be simplified"}, {"title": "Token can be burn through transfer", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/262", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "Token can be burn through transfer"}, {"title": "Use Keccak256 over Sha256 for string comparation", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/258", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Use Keccak256 over Sha256 for string comparation"}, {"title": "Not needed check for uint > 0", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/256", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Not needed check for uint > 0"}, {"title": "Divide before multiply", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/255", "labels": ["bug", "question", "2 (Med Risk)"], "target": "2021-04-vader-findings", "body": "Divide before multiply"}, {"title": "Gas improvement", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/253", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Gas improvement"}, {"title": "Store using Struct over multiple mappings", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/252", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Store using Struct over multiple mappings"}, {"title": "Difference from whitepaper", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/251", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-vader-findings", "body": "Difference from whitepaper"}, {"title": "Events not emitted", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/250", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "Events not emitted"}, {"title": "Tokens can get locked and funds lost when minting is disabled in Vader.sol and USDV.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/238", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "Tokens can get locked and funds lost when minting is disabled in Vader.sol and USDV.sol"}, {"title": "Add anchor map", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/236", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Add anchor map"}, {"title": "`DAO.mapPID_finalised` is never read in the contract, only written", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/233", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "`DAO.mapPID_finalised` is never read in the contract, only written"}, {"title": "cache `proposalCount` instead of accessing it three times in `newGrantProposal`/`newAddressProposal`", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/232", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "cache `proposalCount` instead of accessing it three times in `newGrantProposal`/`newAddressProposal`"}, {"title": "ERC20 return values not checked", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/231", "labels": ["bug", "2 (Med Risk)", "filed"], "target": "2021-04-vader-findings", "body": "ERC20 return values not checked"}, {"title": " `Protection` event not used", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/230", "labels": ["bug", "0 (Non-critical)", "filed"], "target": "2021-04-vader-findings", "body": " `Protection` event not used"}, {"title": "Completed proposals can be voted on and executed again", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/229", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "filed"], "target": "2021-04-vader-findings", "body": "Completed proposals can be voted on and executed again"}, {"title": "Canceled proposals can still be executed", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/228", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Canceled proposals can still be executed"}, {"title": "Proposals can be cancelled", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/227", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed", "filed", "addressed"], "target": "2021-04-vader-findings", "body": "Proposals can be cancelled"}, {"title": "Vault Weight accounting is wrong for withdrawals", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/224", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Vault Weight accounting is wrong for withdrawals"}, {"title": "Vault rewards last claim time not always initialized", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/223", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Vault rewards last claim time not always initialized"}, {"title": " Vault rewards can be gamed", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/222", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": " Vault rewards can be gamed"}, {"title": "Fee can be at most 1% and dead code", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/221", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "Fee can be at most 1% and dead code"}, {"title": "Transfer fee is burned on wrong accounts", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/220", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Transfer fee is burned on wrong accounts"}, {"title": "Interest debt is capped after a year", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/219", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Interest debt is capped after a year"}, {"title": "`flashProof` is not flash-proof", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/218", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "`flashProof` is not flash-proof"}, {"title": "Tokens can be stolen through `transferTo`", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/217", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor acknowledged", "filed"], "target": "2021-04-vader-findings", "body": "Tokens can be stolen through `transferTo`"}, {"title": "Wrong `calcAsymmetricShare` calculation", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/214", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Wrong `calcAsymmetricShare` calculation"}, {"title": "getAnchorPrice potentially returns the wrong median", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/213", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "getAnchorPrice potentially returns the wrong median"}, {"title": "Replacing an anchor does not reset `Pool.isAnchor`", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/212", "labels": ["bug", "disagree with severity", "sponsor acknowledged", "0 (Non-critical)", "filed"], "target": "2021-04-vader-findings", "body": "Replacing an anchor does not reset `Pool.isAnchor`"}, {"title": "Anyone can list anchors / curate tokens", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/211", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Anyone can list anchors / curate tokens"}, {"title": "Anyone can curate pools and steal rewards", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/210", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Anyone can curate pools and steal rewards"}, {"title": "Wrong slippage protection on Token -> Token trades", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/209", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Wrong slippage protection on Token -> Token trades"}, {"title": "Missing access restriction on `lockUnits/unlockUnits`", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/208", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Missing access restriction on `lockUnits/unlockUnits`"}, {"title": "4 Synths can be minted with fake base token", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/207", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "4 Synths can be minted with fake base token"}, {"title": "`getAddedAmount` can return wrong results", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/206", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "`getAddedAmount` can return wrong results"}, {"title": "Swap token can be traded as fake base token", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/205", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Swap token can be traded as fake base token"}, {"title": "Wrong liquidity units calculation", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/204", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed", "filed"], "target": "2021-04-vader-findings", "body": "Wrong liquidity units calculation"}, {"title": "Uninitialized variable leads to zero-fees for first transfer in Vader.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/203", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "Uninitialized variable leads to zero-fees for first transfer in Vader.sol"}, {"title": "Incorrect burn address in Vader.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/202", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "Incorrect burn address in Vader.sol"}, {"title": "Gas Optimization: DAO.sol Unnecessary Multiple Return Statements", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/200", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas Optimization: DAO.sol Unnecessary Multiple Return Statements"}, {"title": "Gas Optimization: Utils.sol Make An Unnecessary Multiplication And Division By An Identical Value", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/199", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas Optimization: Utils.sol Make An Unnecessary Multiplication And Division By An Identical Value"}, {"title": "Gas Optimization: Vader.sol Unnecessary Conditional", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/197", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas Optimization: Vader.sol Unnecessary Conditional"}, {"title": "The Calculation For nextEraTime Drifts, Causing Eras To Occur Further And Further Into The Future", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/193", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "The Calculation For nextEraTime Drifts, Causing Eras To Occur Further And Further Into The Future"}, {"title": "Gas Optimization: Avoid Unnecessary Expensive SSTORE Calls In Vether.sol By Checking If _fee Is Non-Zero", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/191", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas Optimization: Avoid Unnecessary Expensive SSTORE Calls In Vether.sol By Checking If _fee Is Non-Zero"}, {"title": "Gas Optimization: Remove Overflow Check in Vether.sol Since Solidity 0.8.x Disallows Implicit Overflows", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/190", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Gas Optimization: Remove Overflow Check in Vether.sol Since Solidity 0.8.x Disallows Implicit Overflows"}, {"title": "Anyone Can Avoid All Vether Transfer Fees By Adding Their Address to the Vether ExcludedAddresses List.", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/189", "labels": ["bug", "disagree with severity", "3 (High Risk)"], "target": "2021-04-vader-findings", "body": "Anyone Can Avoid All Vether Transfer Fees By Adding Their Address to the Vether ExcludedAddresses List."}, {"title": "Flash loans can affect governance voting in DAO.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/187", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Flash loans can affect governance voting in DAO.sol"}, {"title": "Unnecessary logic that will never get triggered in DAO.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/186", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Unnecessary logic that will never get triggered in DAO.sol"}, {"title": "Undefined behavior for DAO and GRANT vote proposals in DAO.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/183", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-04-vader-findings", "body": "Undefined behavior for DAO and GRANT vote proposals in DAO.sol"}, {"title": "Perform early input validation of zero-address for efficiency in DAO.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/182", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Perform early input validation of zero-address for efficiency in DAO.sol"}, {"title": "Gas savings by replacing public visibility with internal/private for isEqual() function of DAO.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/181", "labels": ["bug", "G (Gas Optimization)", "filed"], "target": "2021-04-vader-findings", "body": "Gas savings by replacing public visibility with internal/private for isEqual() function of DAO.sol"}, {"title": "changeDAO should be a two-step process in Vader.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/162", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "changeDAO should be a two-step process in Vader.sol"}, {"title": "Missing DAO functionality to call changeDAO() function in Vader.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/161", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-04-vader-findings", "body": "Missing DAO functionality to call changeDAO() function in Vader.sol"}, {"title": "Missing input validation may set rewardAddress to zero-address in Vader.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/160", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "Missing input validation may set rewardAddress to zero-address in Vader.sol"}, {"title": "Incorrect initialization causes VADER emission rate of 1 second instead of 1 day in Vader.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/155", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-04-vader-findings", "body": "Incorrect initialization causes VADER emission rate of 1 second instead of 1 day in Vader.sol"}, {"title": "Gas savings by removing state variable baseline in Vader.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/153", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Gas savings by removing state variable baseline in Vader.sol"}, {"title": "Gas savings by converting storage variable to immutable in Vader.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/149", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas savings by converting storage variable to immutable in Vader.sol"}, {"title": "Missing DAO functionality to call setParams() function in USDV.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/140", "labels": ["bug", "disagree with severity", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "Missing DAO functionality to call setParams() function in USDV.sol"}, {"title": "Flash attack mitigation does not work as intended in USDV.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/138", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "Flash attack mitigation does not work as intended in USDV.sol"}, {"title": "Gas savings by declaring state variables constant in USDV.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/129", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas savings by declaring state variables constant in USDV.sol"}, {"title": "Unhandled return value of transfer in transferOut() of Pools.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/128", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Unhandled return value of transfer in transferOut() of Pools.sol"}, {"title": "Incorrect operator used in deploySynth() of Pools.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/124", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "addressed"], "target": "2021-04-vader-findings", "body": "Incorrect operator used in deploySynth() of Pools.sol"}, {"title": "User may not get IL protection if certain functions are called directly in Pools.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/120", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-04-vader-findings", "body": "User may not get IL protection if certain functions are called directly in Pools.sol"}, {"title": "Gas savings by removing unused state variable _isMember and related getter function isMember() in Pools.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/118", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas savings by removing unused state variable _isMember and related getter function isMember() in Pools.sol"}, {"title": "Pool functions can be called before initialization in init() of Pools.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/114", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Pool functions can be called before initialization in init() of Pools.sol"}, {"title": "Gas savings by moving inited bool state variable next to an address state variable declaration in Pools.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/111", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas savings by moving inited bool state variable next to an address state variable declaration in Pools.sol"}, {"title": "Public functions getSynth() and isSynth() are commented out in Factory.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/110", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-vader-findings", "body": "Public functions getSynth() and isSynth() are commented out in Factory.sol"}, {"title": "Missing event for critical init() function in Factory.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/108", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "Missing event for critical init() function in Factory.sol"}, {"title": "Gas savings by removing unnecessary conditional in isCurated() function of Router.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/100", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Gas savings by removing unnecessary conditional in isCurated() function of Router.sol"}, {"title": "Gas savings by breaking from loop after match+replace in replaceAnchor() of Router.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas savings by breaking from loop after match+replace in replaceAnchor() of Router.sol"}, {"title": "Gas savings by saving state variable in a memory for loop access in replaceAnchor() of Router.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/90", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Gas savings by saving state variable in a memory for loop access in replaceAnchor() of Router.sol"}, {"title": "Lack of input validation in replacePool() allows curated pool limit bypass in Router.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/87", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "Lack of input validation in replacePool() allows curated pool limit bypass in Router.sol"}, {"title": "Default value of curatedPoolLimit allows only one curated pool in Router.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/86", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-vader-findings", "body": "Default value of curatedPoolLimit allows only one curated pool in Router.sol"}, {"title": "Gas savings by changing getILProtection() function\u2019s public visibility to internal/private in Router.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/85", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Gas savings by changing getILProtection() function\u2019s public visibility to internal/private in Router.sol"}, {"title": "Incorrect initialization gives IL protection of only 1 second instead of 100 days in Router.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/84", "labels": ["bug", "disagree with severity", "3 (High Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Incorrect initialization gives IL protection of only 1 second instead of 100 days in Router.sol"}, {"title": "Gas savings by removing unused state variable repayDelay in Router.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/78", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Gas savings by removing unused state variable repayDelay in Router.sol"}, {"title": "Copy-paste bug leading to incorrect harvest rewards in Vault.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/51", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "Copy-paste bug leading to incorrect harvest rewards in Vault.sol"}, {"title": "Named return variable in harvest() and other functions of Vault.sol and contracts", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/50", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-vader-findings", "body": "Named return variable in harvest() and other functions of Vault.sol and contracts"}, {"title": "Misleading comment for deposit() function of Vault.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/48", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-vader-findings", "body": "Misleading comment for deposit() function of Vault.sol"}, {"title": "Gas savings by avoiding re-initialization of POOLS variable in init() function of Vault.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/43", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "Gas savings by avoiding re-initialization of POOLS variable in init() function of Vault.sol"}, {"title": "Vader.redeemToMember() vulnerable to front running", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/36", "labels": ["bug", "disagree with severity", "2 (Med Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Vader.redeemToMember() vulnerable to front running"}, {"title": "ERC20 race condition for allowances", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-vader-findings", "body": "ERC20 race condition for allowances"}, {"title": "Transfer fee avoidance ", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/33", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Transfer fee avoidance "}, {"title": "totalBurnt might be wrong", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/32", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "totalBurnt might be wrong"}, {"title": "Pay double fees in addExcluded of Vether.sol", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/28", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Pay double fees in addExcluded of Vether.sol"}, {"title": "Optimization possible at _transfer", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "Optimization possible at _transfer"}, {"title": "Different pragma solidity", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/25", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-04-vader-findings", "body": "Different pragma solidity"}, {"title": "Functions with implicit return values", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/24", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-04-vader-findings", "body": "Functions with implicit return values"}, {"title": "Result of ERC20 transfer not checked", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "addressed"], "target": "2021-04-vader-findings", "body": "Result of ERC20 transfer not checked"}, {"title": "Not always reason at require", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/20", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-04-vader-findings", "body": "Not always reason at require"}, {"title": "sortArray optimizable", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/19", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-vader-findings", "body": "sortArray optimizable"}, {"title": "Init function can be called by everyone", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/18", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-04-vader-findings", "body": "Init function can be called by everyone"}, {"title": "Some  unused code", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/17", "labels": ["bug", "G (Gas Optimization)", "addressed"], "target": "2021-04-vader-findings", "body": "Some  unused code"}, {"title": "Public function that could be declared external", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/14", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "addressed"], "target": "2021-04-vader-findings", "body": "Public function that could be declared external"}, {"title": "Lack of zero address validation in init() function", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/12", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-04-vader-findings", "body": "Lack of zero address validation in init() function"}, {"title": "events can be emitted  even after failed transaction", "html_url": "https://github.com/code-423n4/2021-04-vader-findings/issues/6", "labels": ["bug", "disagree with severity", "1 (Low Risk)", "sponsor disputed"], "target": "2021-04-vader-findings", "body": "events can be emitted  even after failed transaction"}, {"title": "Using calldata when not appropiate", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/100", "labels": ["bug", "0 (Non-critical)", "Disputed"], "target": "2021-05-nftx-findings", "body": "Using calldata when not appropiate"}, {"title": "Revert inside a loop", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/97", "labels": ["bug", "G (Gas Optimization)", "Acknowledged"], "target": "2021-05-nftx-findings", "body": "Revert inside a loop"}, {"title": "Two Duplicate \"rescueTokens\" Functions In NFTXFeeDistributor ", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/91", "labels": ["bug", "duplicate", "0 (Non-critical)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Two Duplicate \"rescueTokens\" Functions In NFTXFeeDistributor "}, {"title": "Incorrect Type Specified For Argument _address In NFTXFeeDistributor.rescueTokens()", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/89", "labels": ["bug", "0 (Non-critical)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Incorrect Type Specified For Argument _address In NFTXFeeDistributor.rescueTokens()"}, {"title": "NFTXLPStaking Is Subject To A Flash Loan Attack That Can Steal Nearly All Rewards/Fees That Have Accrued For A Particular Vault", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/88", "labels": ["bug", "3 (High Risk)", "Disputed"], "target": "2021-05-nftx-findings", "body": "NFTXLPStaking Is Subject To A Flash Loan Attack That Can Steal Nearly All Rewards/Fees That Have Accrued For A Particular Vault"}, {"title": "Upgradeable contracts not Upgradeable", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/87", "labels": ["bug", "1 (Low Risk)", "Disputed"], "target": "2021-05-nftx-findings", "body": "Upgradeable contracts not Upgradeable"}, {"title": "__Ownable_init will be called twice in multiple Eligibility contracts", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/84", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "__Ownable_init will be called twice in multiple Eligibility contracts"}, {"title": "lack of zero address validation", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/82", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "lack of zero address validation"}, {"title": "Missing pool existence check in balanceOf", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/80", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Missing pool existence check in balanceOf"}, {"title": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/79", "labels": ["bug", "2 (Med Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom"}, {"title": "Randomization of NFTs returned in redeem/swap operations can be brute-forced", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/78", "labels": ["bug", "2 (Med Risk)", "Acknowledged"], "target": "2021-05-nftx-findings", "body": "Randomization of NFTs returned in redeem/swap operations can be brute-forced"}, {"title": "Front-running setFees() could avoid fees", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/72", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Front-running setFees() could avoid fees"}, {"title": "The direct redeem fee can be circumvented", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/71", "labels": ["bug", "2 (Med Risk)", "Acknowledged"], "target": "2021-05-nftx-findings", "body": "The direct redeem fee can be circumvented"}, {"title": "A malicious receiver can cause another receiver to lose out on distributed fees by returning `false` for `tokensReceived` when receiveRewards is called on their receiver contract.", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/69", "labels": ["bug", "2 (Med Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "A malicious receiver can cause another receiver to lose out on distributed fees by returning `false` for `tokensReceived` when receiveRewards is called on their receiver contract."}, {"title": "Change function visibility from public to external", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Change function visibility from public to external"}, {"title": "Unused events", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/63", "labels": ["bug", "duplicate", "G (Gas Optimization)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Unused events"}, {"title": "Unused storage variables", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "Acknowledged", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Unused storage variables"}, {"title": "Semantic Overloading in NFTXUpgradable.sol", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/61", "labels": ["bug", "duplicate", "0 (Non-critical)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Semantic Overloading in NFTXUpgradable.sol"}, {"title": "Tokens can get stuck in `NFTXMintRequestEligibility`", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/59", "labels": ["bug", "2 (Med Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Tokens can get stuck in `NFTXMintRequestEligibility`"}, {"title": "Potential bug with `reverseEligOnRedeem` / misleading name", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/57", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Potential bug with `reverseEligOnRedeem` / misleading name"}, {"title": "`getRandomTokenIdFromFund` yields wrong probabilities for ERC1155", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/56", "labels": ["bug", "duplicate", "3 (High Risk)", "Acknowledged"], "target": "2021-05-nftx-findings", "body": "`getRandomTokenIdFromFund` yields wrong probabilities for ERC1155"}, {"title": "Vault's flash loan not implemented according to EIP-3156", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Vault's flash loan not implemented according to EIP-3156"}, {"title": "Vault's `swapTo` can return the input tokens", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/53", "labels": ["bug", "1 (Low Risk)", "Acknowledged"], "target": "2021-05-nftx-findings", "body": "Vault's `swapTo` can return the input tokens"}, {"title": "LockIds not according to spec", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/52", "labels": ["documentation", "0 (Non-critical)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "LockIds not according to spec"}, {"title": "Manager can grief with fees", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/51", "labels": ["bug", "2 (Med Risk)"], "target": "2021-05-nftx-findings", "body": "Manager can grief with fees"}, {"title": "Gas optimization for `StakingTokenProvider.nameForStakingToken`", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Gas optimization for `StakingTokenProvider.nameForStakingToken`"}, {"title": "Unchecked external calls in `NFTXLPStaking`", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/48", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Unchecked external calls in `NFTXLPStaking`"}, {"title": "Unbounded iteration in `NFTXEligiblityManager.distribute` over `_feeReceivers`", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/47", "labels": ["bug", "2 (Med Risk)", "Acknowledged"], "target": "2021-05-nftx-findings", "body": "Unbounded iteration in `NFTXEligiblityManager.distribute` over `_feeReceivers`"}, {"title": "`distribute` DoS on missing `receiveRewards` implementation", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/46", "labels": ["bug", "3 (High Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "`distribute` DoS on missing `receiveRewards` implementation"}, {"title": "Missing usage of SafeMath", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/45", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Missing usage of SafeMath"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/44", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Missing parameter validation"}, {"title": "Missing overflow check in `flashLoan`", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/43", "labels": ["bug", "duplicate", "3 (High Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Missing overflow check in `flashLoan`"}, {"title": "Unused variables", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/39", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-nftx-findings", "body": "Unused variables"}, {"title": "[INFO] function publicMint is for testing only", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/26", "labels": ["bug", "0 (Non-critical)"], "target": "2021-05-nftx-findings", "body": "[INFO] function publicMint is for testing only"}, {"title": "eligibilityManager is always 0x0", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/25", "labels": ["bug", "1 (Low Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "eligibilityManager is always 0x0"}, {"title": "no check _rangeStart<=_rangeEnd", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "no check _rangeStart<=_rangeEnd"}, {"title": "Missing documentation for flashloan paused number", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/14", "labels": ["documentation", "0 (Non-critical)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Missing documentation for flashloan paused number"}, {"title": "Not checked if within array bounds", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/13", "labels": ["bug", "0 (Non-critical)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Not checked if within array bounds"}, {"title": "simpler way to suppress compiler warning", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/12", "labels": ["bug", "0 (Non-critical)", "Acknowledged"], "target": "2021-05-nftx-findings", "body": "simpler way to suppress compiler warning"}, {"title": "Fee Distribution Re-Entrancy", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/11", "labels": ["bug", "2 (Med Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "Fee Distribution Re-Entrancy"}, {"title": "EIP-721 / EIP-1155 Re-Entrancy Vulnerability", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/8", "labels": ["bug", "3 (High Risk)", "Confirmed"], "target": "2021-05-nftx-findings", "body": "EIP-721 / EIP-1155 Re-Entrancy Vulnerability"}, {"title": "Inconsistent solidity pragma", "html_url": "https://github.com/code-423n4/2021-05-nftx-findings/issues/3", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-nftx-findings", "body": "Inconsistent solidity pragma"}, {"title": "Beebots.randomIndex() Can Be Manipulated To Not Be Random Without Costing Alice Anything", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/85", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "Beebots.randomIndex() Can Be Manipulated To Not Be Random Without Costing Alice Anything"}, {"title": "External over public ", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/84", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-meebits-findings", "body": "External over public "}, {"title": "Optimizations storage", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/83", "labels": ["bug", "G (Gas Optimization)", "style"], "target": "2021-04-meebits-findings", "body": "Optimizations storage"}, {"title": "Constructor lack of zero address validation", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/82", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Constructor lack of zero address validation"}, {"title": "Randomnesss can be manipulated", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/81", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": "Randomnesss can be manipulated"}, {"title": "Nonce not modified", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/80", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Nonce not modified"}, {"title": "Beebots.contentHash() Is Currently Set As \"todo\"", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/79", "labels": ["duplicate", "invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Beebots.contentHash() Is Currently Set As \"todo\""}, {"title": "Beebots.tokenURI() References A Non-Existent Domain at \"TODO\"", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/78", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Beebots.tokenURI() References A Non-Existent Domain at \"TODO\""}, {"title": "Beebots.TradeValid() Will Erroneously Return True When Maker Is Set To Address(0) and makerIds Are Set To The TokenIds of Unminted Beebot NFTs", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/77", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "Beebots.TradeValid() Will Erroneously Return True When Maker Is Set To Address(0) and makerIds Are Set To The TokenIds of Unminted Beebot NFTs"}, {"title": "Can cancel the same offer several times", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/76", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Can cancel the same offer several times"}, {"title": "NFT can be minted for free after sale ended", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/75", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": "NFT can be minted for free after sale ended"}, {"title": "The randomIndex() can be determined", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/74", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "The randomIndex() can be determined"}, {"title": "function tokenByIndex treats last index as invalid", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/73", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "function tokenByIndex treats last index as invalid"}, {"title": "function ownerOf does not check if it is a valid _tokenId", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/72", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "function ownerOf does not check if it is a valid _tokenId"}, {"title": "Use always uint256", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/71", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Use always uint256"}, {"title": "contentHash is not used", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/70", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "contentHash is not used"}, {"title": "PauseMarket() can be optimized", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/69", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-meebits-findings", "body": "PauseMarket() can be optimized"}, {"title": "creatorNftMints is assigned only 0 or 1", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/68", "labels": ["0 (Non-critical)", "G (Gas Optimization)", "style"], "target": "2021-04-meebits-findings", "body": "creatorNftMints is assigned only 0 or 1"}, {"title": "Require() not needed", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/67", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-meebits-findings", "body": "Require() not needed"}, {"title": "Lack of chain information in the signed data leads to potential replay attacks.", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/66", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": "Lack of chain information in the signed data leads to potential replay attacks."}, {"title": "Should use `SafeMath.add` in the `acceptTrade` function.", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "style"], "target": "2021-04-meebits-findings", "body": "Should use `SafeMath.add` in the `acceptTrade` function."}, {"title": "Nonce does not increase during the entire sale.", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/64", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Nonce does not increase during the entire sale."}, {"title": "No zero check on constructor inputs.", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/63", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "No zero check on constructor inputs."}, {"title": "The `ownerOf` function requires checking if the owner is non-zero.", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/62", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "The `ownerOf` function requires checking if the owner is non-zero."}, {"title": "Several functions in the ERC721 interface are not declared `payable`.", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/61", "labels": ["invalid"], "target": "2021-04-meebits-findings", "body": "Several functions in the ERC721 interface are not declared `payable`."}, {"title": "cancelOffer() is susceptible to front-running", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/60", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "cancelOffer() is susceptible to front-running"}, {"title": "Market pause does not pause cancelOffer()", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/59", "labels": ["0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "Market pause does not pause cancelOffer()"}, {"title": "event Deposit when value is 0", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/58", "labels": ["bug", "0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "event Deposit when value is 0"}, {"title": "Market pause does not pause tradeValid()", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/57", "labels": ["1 (Low Risk)", "style"], "target": "2021-04-meebits-findings", "body": "Market pause does not pause tradeValid()"}, {"title": "event Mint parameter minter", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "event Mint parameter minter"}, {"title": "Design susceptible to taker griefing on acceptTrade()", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/55", "labels": ["enhancement", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Design susceptible to taker griefing on acceptTrade()"}, {"title": "Signature malleability of EVM's ecrecover in verify()", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/54", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Signature malleability of EVM's ecrecover in verify()"}, {"title": "mint for 0 cost when the sale is over", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/53", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "mint for 0 cost when the sale is over"}, {"title": "nonce always remains 0", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/52", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": "nonce always remains 0"}, {"title": "Incorrect use of test parameterization for baseURI value in tokenURI()", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/51", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Incorrect use of test parameterization for baseURI value in tokenURI()"}, {"title": ".transfer is not safe to use with custom smart contracts", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/50", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": ".transfer is not safe to use with custom smart contracts"}, {"title": "ERC721Metadata Spec mismatch from lack of input validation in tokenURI()", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/49", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "ERC721Metadata Spec mismatch from lack of input validation in tokenURI()"}, {"title": "ERC-721 Enumerable Spec mismatch for return value of tokenByIndex() function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/48", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "ERC-721 Enumerable Spec mismatch for return value of tokenByIndex() function"}, {"title": "ERC-721 Enumerable Spec mismatch for index of tokenByIndex() function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/47", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "ERC-721 Enumerable Spec mismatch for index of tokenByIndex() function"}, {"title": "Potential reentrancy in safeTransferFrom functions", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/46", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": "Potential reentrancy in safeTransferFrom functions"}, {"title": "Use of transfer() may lead to failures", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/45", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": "Use of transfer() may lead to failures"}, {"title": "Incorrect createVia argument used in mintWithAlphaOrBeta function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/44", "labels": ["0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "Incorrect createVia argument used in mintWithAlphaOrBeta function"}, {"title": "Deployer minting to arbitrary addresses could trick/confuse users", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/43", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Deployer minting to arbitrary addresses could trick/confuse users"}, {"title": "Missing event in critical devMint() function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/42", "labels": ["1 (Low Risk)", "style"], "target": "2021-04-meebits-findings", "body": "Missing event in critical devMint() function"}, {"title": "ERC-721 Spec mismatch for ownerOf() function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/41", "labels": ["0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "ERC-721 Spec mismatch for ownerOf() function"}, {"title": "Missing error messages in require statements of various function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/40", "labels": ["1 (Low Risk)", "style"], "target": "2021-04-meebits-findings", "body": "Missing error messages in require statements of various function"}, {"title": "Missing event in critical sealContract() function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/39", "labels": ["duplicate", "enhancement", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Missing event in critical sealContract() function"}, {"title": "Missing event in critical pauseMarket() function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/38", "labels": ["duplicate", "enhancement", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Missing event in critical pauseMarket() function"}, {"title": "Missing parameters in SalesBegin event of critical startSale() function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/37", "labels": ["enhancement", "1 (Low Risk)", "style"], "target": "2021-04-meebits-findings", "body": "Missing parameters in SalesBegin event of critical startSale() function"}, {"title": "No guarded launch circuit breaker for public sale", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/36", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "No guarded launch circuit breaker for public sale"}, {"title": "Missing zero/threshold check for NFT sale duration", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/35", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "Missing zero/threshold check for NFT sale duration"}, {"title": "Missing zero/threshold check for NFT sale price", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/34", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "Missing zero/threshold check for NFT sale price"}, {"title": "Missing zero-address check for the beneficiary address", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/33", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "Missing zero-address check for the beneficiary address"}, {"title": "Privileged deployer role and capabilities", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/32", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Privileged deployer role and capabilities"}, {"title": "Gas savings by replacing modifier onlyDeployer with internal function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/31", "labels": ["0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "Gas savings by replacing modifier onlyDeployer with internal function"}, {"title": "randomIndex is not truly random - possibility of predictably minting a specific token Id", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/30", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": "randomIndex is not truly random - possibility of predictably minting a specific token Id"}, {"title": "Explicit initialization with zero not required for nonce", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/29", "labels": ["duplicate"], "target": "2021-04-meebits-findings", "body": "Explicit initialization with zero not required for nonce"}, {"title": "Explicit initialization with false not required for publicSale", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/28", "labels": ["duplicate"], "target": "2021-04-meebits-findings", "body": "Explicit initialization with false not required for publicSale"}, {"title": "Explicit initialization with zero not required for numSales", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/27", "labels": ["duplicate"], "target": "2021-04-meebits-findings", "body": "Explicit initialization with zero not required for numSales"}, {"title": "Explicit initialization with zero not required for numTokens", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/26", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-meebits-findings", "body": "Explicit initialization with zero not required for numTokens"}, {"title": "Incorrect initialization uses test parameterization for sale limit", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/25", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Incorrect initialization uses test parameterization for sale limit"}, {"title": "Incorrect initialization uses test parameterization for token limit", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/24", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Incorrect initialization uses test parameterization for token limit"}, {"title": "Atypical contract structure affects maintainability and readability", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/23", "labels": ["0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "Atypical contract structure affects maintainability and readability"}, {"title": "Clone-and-own approach used for OZ SafeMath library and other code susceptible to errors and missing upstream bug fixes", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/22", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Clone-and-own approach used for OZ SafeMath library and other code susceptible to errors and missing upstream bug fixes"}, {"title": "Unclear `randomIndex` function", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/21", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Unclear `randomIndex` function"}, {"title": "Mint can be front-run", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/20", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Mint can be front-run"}, {"title": "Usage of `address.transfer`", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/19", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Usage of `address.transfer`"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/18", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Missing parameter validation"}, {"title": "SafeMath library asserts instead of reverts", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/17", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "SafeMath library asserts instead of reverts"}, {"title": "Incorrect Implementation", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/16", "labels": ["bug", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Incorrect Implementation"}, {"title": "Numerous Gas Optimizations", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/15", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-meebits-findings", "body": "Numerous Gas Optimizations"}, {"title": "Legacy Function Usage", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/14", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Legacy Function Usage"}, {"title": "transfer used", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/13", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "transfer used"}, {"title": "transfer of 0 ETH", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/12", "labels": ["invalid", "0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "transfer of 0 ETH"}, {"title": "nonce isn't increased", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/11", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "nonce isn't increased"}, {"title": "Not really random", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/10", "labels": ["bug", "1 (Low Risk)"], "target": "2021-04-meebits-findings", "body": "Not really random"}, {"title": "Safemath missing in several places", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/9", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "Safemath missing in several places"}, {"title": "Check for marketPaused in sealContract", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "Check for marketPaused in sealContract"}, {"title": "lack of input validation in ownerOf(uint )", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/7", "labels": ["invalid", "0 (Non-critical)"], "target": "2021-04-meebits-findings", "body": "lack of input validation in ownerOf(uint )"}, {"title": "No zero address checking in contractor", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/6", "labels": ["invalid", "0 (Non-critical)", "style"], "target": "2021-04-meebits-findings", "body": "No zero address checking in contractor"}, {"title": "public function that could be declared external", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/5", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-meebits-findings", "body": "public function that could be declared external"}, {"title": "Arbitrary Transfer of Unowned NFTs", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/4", "labels": ["bug", "3 (High Risk)"], "target": "2021-04-meebits-findings", "body": "Arbitrary Transfer of Unowned NFTs"}, {"title": "state variables that could be declared constant", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/3", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-04-meebits-findings", "body": "state variables that could be declared constant"}, {"title": "instead of call() , transfer() is used to withdraw the ether", "html_url": "https://github.com/code-423n4/2021-04-meebits-findings/issues/2", "labels": ["bug", "2 (Med Risk)"], "target": "2021-04-meebits-findings", "body": "instead of call() , transfer() is used to withdraw the ether"}, {"title": "Unchecking the ownership of `mph` in function `distributeFundingRewards` could cause several critical functions to revert", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/23", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-88mph-findings", "body": "Unchecking the ownership of `mph` in function `distributeFundingRewards` could cause several critical functions to revert"}, {"title": "Use openzeppelin ECDA for erecover", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/20", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-88mph-findings", "body": "Use openzeppelin ECDA for erecover"}, {"title": "Gas optimizations - storage over memory", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed", "resolved"], "target": "2021-05-88mph-findings", "body": "Gas optimizations - storage over memory"}, {"title": "Gas optimizations by using external over public ", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed", "resolved"], "target": "2021-05-88mph-findings", "body": "Gas optimizations by using external over public "}, {"title": "Incompatability with deflationary / fee-on-transfer tokens", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/16", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-05-88mph-findings", "body": "Incompatability with deflationary / fee-on-transfer tokens"}, {"title": "Anyone can withdraw vested amount on behalf of someone", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/15", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-05-88mph-findings", "body": "Anyone can withdraw vested amount on behalf of someone"}, {"title": "lack of zero address validation in constructor", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/13", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-05-88mph-findings", "body": "lack of zero address validation in constructor"}, {"title": "zero amount  of token value can be entered for creating vest object in  vesting.sol", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/12", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-05-88mph-findings", "body": "zero amount  of token value can be entered for creating vest object in  vesting.sol"}, {"title": "Extra precautions in updateAndQuery", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/10", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-88mph-findings", "body": "Extra precautions in updateAndQuery"}, {"title": "Multiple definitions of PRECISION", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-05-88mph-findings", "body": "Multiple definitions of PRECISION"}, {"title": "Add extra error message in_depositRecordData", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/7", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-05-88mph-findings", "body": "Add extra error message in_depositRecordData"}, {"title": "function payInterestToFunders does not have a re-entrancy modifier", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/6", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-88mph-findings", "body": "function payInterestToFunders does not have a re-entrancy modifier"}, {"title": "Missmatch between the comment and the actual code", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/5", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-05-88mph-findings", "body": "Missmatch between the comment and the actual code"}, {"title": "contract AaveMarket function setRewards has a misleading revert message", "html_url": "https://github.com/code-423n4/2021-05-88mph-findings/issues/4", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-05-88mph-findings", "body": "contract AaveMarket function setRewards has a misleading revert message"}, {"title": "Unbounded loop in `_removeNft` could lead to a griefing/DOS attack", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/80", "labels": ["bug", "3 (High Risk)"], "target": "2021-05-visorfinance-findings", "body": "Unbounded loop in `_removeNft` could lead to a griefing/DOS attack"}, {"title": "Deflationary tokens are not considered in time-locked ERC20 functions", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/78", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-visorfinance-findings", "body": "Deflationary tokens are not considered in time-locked ERC20 functions"}, {"title": "Unused imported interface `IVisorService`", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/71", "labels": ["bug", "0 (Non-critical)"], "target": "2021-05-visorfinance-findings", "body": "Unused imported interface `IVisorService`"}, {"title": "Events are not indexed", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/70", "labels": ["bug", "0 (Non-critical)"], "target": "2021-05-visorfinance-findings", "body": "Events are not indexed"}, {"title": "The function onERC721Received () allows writing duplicates in the array \"nfts\". Another functions dealing with this array do not expect duplicates met.", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/67", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-visorfinance-findings", "body": "The function onERC721Received () allows writing duplicates in the array \"nfts\". Another functions dealing with this array do not expect duplicates met."}, {"title": "timelockERC721Keys could exceed the block size limit", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/65", "labels": ["bug", "2 (Med Risk)"], "target": "2021-05-visorfinance-findings", "body": "timelockERC721Keys could exceed the block size limit"}, {"title": "Internal GetBalanceLocked call can exceed block size limit", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/63", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Internal GetBalanceLocked call can exceed block size limit"}, {"title": "Locking the same funds twice in lock() on line 269 of Visor.sol", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/61", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-visorfinance-findings", "body": "Locking the same funds twice in lock() on line 269 of Visor.sol"}, {"title": "Gas optimizations - calculation getBalanceLocked", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/55", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Gas optimizations - calculation getBalanceLocked"}, {"title": "Gas optimizations - storage over memory", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/53", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Gas optimizations - storage over memory"}, {"title": "Gas optimization storage NFTs", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/52", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Gas optimization storage NFTs"}, {"title": "Gas optimizations by using external over public ", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/51", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Gas optimizations by using external over public "}, {"title": "Approval for NFT transfers is not removed after transfer", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/48", "labels": ["bug", "3 (High Risk)"], "target": "2021-05-visorfinance-findings", "body": "Approval for NFT transfers is not removed after transfer"}, {"title": "Wrong TimeLockERC20 event emitted", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/45", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-visorfinance-findings", "body": "Wrong TimeLockERC20 event emitted"}, {"title": "Missing events", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/44", "labels": ["bug", "0 (Non-critical)"], "target": "2021-05-visorfinance-findings", "body": "Missing events"}, {"title": "Unhandled return value of transferFrom in timeLockERC20() could lead to fund loss for recipients", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/39", "labels": ["bug", "2 (Med Risk)"], "target": "2021-05-visorfinance-findings", "body": "Unhandled return value of transferFrom in timeLockERC20() could lead to fund loss for recipients"}, {"title": "Timelock keys are never removed after unlocks", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/37", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-visorfinance-findings", "body": "Timelock keys are never removed after unlocks"}, {"title": "A previously timelocked NFT token becomes permanently stuck in vault if it\u2019s ever moved back into the vault", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/35", "labels": ["bug", "3 (High Risk)"], "target": "2021-05-visorfinance-findings", "body": "A previously timelocked NFT token becomes permanently stuck in vault if it\u2019s ever moved back into the vault"}, {"title": "NFT transfer approvals are not removed and cannot be revoked thus leading to loss of NFT tokens", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/34", "labels": ["bug", "3 (High Risk)"], "target": "2021-05-visorfinance-findings", "body": "NFT transfer approvals are not removed and cannot be revoked thus leading to loss of NFT tokens"}, {"title": "Breaking out of loop can save gas", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/32", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Breaking out of loop can save gas"}, {"title": "Use a temporary variable to cache repetitive storage reads", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/31", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Use a temporary variable to cache repetitive storage reads"}, {"title": "Use a temporary variable to cache repetitive complex calculation", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/30", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Use a temporary variable to cache repetitive complex calculation"}, {"title": "Unused state variable and associated setter function", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/28", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Unused state variable and associated setter function"}, {"title": "Change function visibility from public to external", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/27", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-05-visorfinance-findings", "body": "Change function visibility from public to external"}, {"title": "missing condition in addTemplate(bytes32 name, address template), visorFactory.sol", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/24", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-visorfinance-findings", "body": "missing condition in addTemplate(bytes32 name, address template), visorFactory.sol"}, {"title": "delegatedTransferERC20 can revert when called by owner", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/21", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-visorfinance-findings", "body": "delegatedTransferERC20 can revert when called by owner"}, {"title": "transferERC721 doesn't clean timelockERC721s", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/19", "labels": ["bug", "2 (Med Risk)"], "target": "2021-05-visorfinance-findings", "body": "transferERC721 doesn't clean timelockERC721s"}, {"title": "introduce a max lock time limit", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/14", "labels": ["bug", "0 (Non-critical)"], "target": "2021-05-visorfinance-findings", "body": "introduce a max lock time limit"}, {"title": "sandwich approveTransferERC20", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/10", "labels": ["bug", "1 (Low Risk)"], "target": "2021-05-visorfinance-findings", "body": "sandwich approveTransferERC20"}, {"title": "getNftById is querying against the index not id", "html_url": "https://github.com/code-423n4/2021-05-visorfinance-findings/issues/8", "labels": ["bug", "0 (Non-critical)"], "target": "2021-05-visorfinance-findings", "body": "getNftById is querying against the index not id"}, {"title": "Incorrect type conversion in the contract `ABC` makes users unable to burn FSD tokens", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/77", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Incorrect type conversion in the contract `ABC` makes users unable to burn FSD tokens"}, {"title": "Flash minting and burning can reduce the paid fees when purchasing a membership or opening a cost share request", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/76", "labels": ["bug", "question", "2 (Med Risk)", "disagree with severity"], "target": "2021-05-fairside-findings", "body": "Flash minting and burning can reduce the paid fees when purchasing a membership or opening a cost share request"}, {"title": "The variable `fShareRatio` is vulnerable to manipulation by flash minting and burning", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/75", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-05-fairside-findings", "body": "The variable `fShareRatio` is vulnerable to manipulation by flash minting and burning"}, {"title": "Incorrect implementation of arctan in the contract `FairSideFormula`", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/73", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Incorrect implementation of arctan in the contract `FairSideFormula`"}, {"title": "`pendingWithdrawals` not decreased after a `withdraw`", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/72", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "`pendingWithdrawals` not decreased after a `withdraw`"}, {"title": "Gas optimization for the `rootPows` function in `FairSideFormula`", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/71", "labels": ["bug", "question", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Gas optimization for the `rootPows` function in `FairSideFormula`"}, {"title": "Should check return data from Chainlink aggregators", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/70", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Should check return data from Chainlink aggregators"}, {"title": "Events in `FairSideDAO` are not indexed", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/69", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "Events in `FairSideDAO` are not indexed"}, {"title": "Solidity keyword `transfer` is used in the contract `Withdrawable`", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/67", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Solidity keyword `transfer` is used in the contract `Withdrawable`"}, {"title": "Revert messages are wrong", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Revert messages are wrong"}, {"title": "convictionless mapping is not used", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/61", "labels": ["bug", "question", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "convictionless mapping is not used"}, {"title": "lack of input validation of id in getConvictionScore(){}", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/60", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "lack of input validation of id in getConvictionScore(){}"}, {"title": "Check if variables are initialized", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/59", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "Check if variables are initialized"}, {"title": "Gas optimizations - Use external instead of public", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/57", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "Gas optimizations - Use external instead of public"}, {"title": "Gas optimizations - Reduce reads in purchaseMembership method", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/55", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Gas optimizations - Reduce reads in purchaseMembership method"}, {"title": "Gas optimizations - checkpoints from ERC20ConvictionScore", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/54", "labels": ["bug", "question", "G (Gas Optimization)"], "target": "2021-05-fairside-findings", "body": "Gas optimizations - checkpoints from ERC20ConvictionScore"}, {"title": "`ERC20ConvictionScore.acquireConviction` implements wrong governance checks", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/45", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "`ERC20ConvictionScore.acquireConviction` implements wrong governance checks"}, {"title": "`ERC20ConvictionScore` allows transfers to special TOTAL_GOVERNANCE_SCORE address", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/42", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-05-fairside-findings", "body": "`ERC20ConvictionScore` allows transfers to special TOTAL_GOVERNANCE_SCORE address"}, {"title": "`ERC20ConvictionScore._updateConvictionScore` uses stale credit score for `governanceDelta`", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/41", "labels": ["bug", "question", "3 (High Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-05-fairside-findings", "body": "`ERC20ConvictionScore._updateConvictionScore` uses stale credit score for `governanceDelta`"}, {"title": "`ERC20ConvictionScore`'s `governanceDelta` should be subtracted when user is not a governor anymore", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/40", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "`ERC20ConvictionScore`'s `governanceDelta` should be subtracted when user is not a governor anymore"}, {"title": "`validateVoteHash` does not confirm the vote result", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/37", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "`validateVoteHash` does not confirm the vote result"}]