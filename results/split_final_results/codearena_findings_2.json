[{"title": "Wrong error message in `__castOffchainVotes`", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/36", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-05-fairside-findings", "body": "Wrong error message in `__castOffchainVotes`"}, {"title": "`FairSideDAO.SECS_PER_BLOCK` is inaccurate", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/34", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "`FairSideDAO.SECS_PER_BLOCK` is inaccurate"}, {"title": "Bug inside ABDKMathQuad library", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/32", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "Bug inside ABDKMathQuad library"}, {"title": "NFTs can never be redeemed back to their conviction scores leading to lock/loss of funds\u2028", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/31", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-05-fairside-findings", "body": "NFTs can never be redeemed back to their conviction scores leading to lock/loss of funds\u2028"}, {"title": "Locked funds from tokenization are credited twice to user leading to protocol fund loss", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/30", "labels": ["bug", "question", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Locked funds from tokenization are credited twice to user leading to protocol fund loss"}, {"title": "Locked funds are debited twice from user during tokenization leading to fund loss", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/29", "labels": ["bug", "3 (High Risk)"], "target": "2021-05-fairside-findings", "body": "Locked funds are debited twice from user during tokenization leading to fund loss"}, {"title": "Conviction totals not updated during tokenization", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/28", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Conviction totals not updated during tokenization"}, {"title": "Conviction scoring fails to initialize and bootstrap", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/26", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Conviction scoring fails to initialize and bootstrap"}, {"title": "Dangerous Solidity compiler pragma range that spans breaking versions", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/25", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-05-fairside-findings", "body": "Dangerous Solidity compiler pragma range that spans breaking versions"}, {"title": "Call to swapExactTokensForETH in liquidateDai() will always fail\u2028", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/21", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Call to swapExactTokensForETH in liquidateDai() will always fail\u2028"}, {"title": "Incorrect use of _addTribute instead of _addGovernanceTribute", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/20", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Incorrect use of _addTribute instead of _addGovernanceTribute"}, {"title": "Missing use of DSMath functions may lead to underflows/overflows", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/19", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "Missing use of DSMath functions may lead to underflows/overflows"}, {"title": "Use of ecrecover is susceptible to signature malleability", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "Use of ecrecover is susceptible to signature malleability"}, {"title": "Repetitive storage access", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/15", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "Repetitive storage access"}, {"title": "non existing function returns", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-05-fairside-findings", "body": "non existing function returns"}, {"title": "gracePeriod not increased after membership extension", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/6", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-05-fairside-findings", "body": "gracePeriod not increased after membership extension"}, {"title": "Constant values used inline", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/4", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "Constant values used inline"}, {"title": "totalCostShareBenefit  vs totalCostShareBenefits ", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/3", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "totalCostShareBenefit  vs totalCostShareBenefits "}, {"title": "Improvements arctan", "html_url": "https://github.com/code-423n4/2021-05-fairside-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-05-fairside-findings", "body": "Improvements arctan"}, {"title": "Users can avoid paying borrowing interest after the fyToken matures", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/71", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Users can avoid paying borrowing interest after the fyToken matures"}, {"title": "Possible DoS attack when creating `Joins` in `Wand`", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/70", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Possible DoS attack when creating `Joins` in `Wand`"}, {"title": "User can redeem more tokens by artificially increasing the chi accrual", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/69", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-05-yield-findings", "body": "User can redeem more tokens by artificially increasing the chi accrual"}, {"title": "Using stale cToken exchange rate", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-05-yield-findings", "body": "Using stale cToken exchange rate"}, {"title": "Unnecessary `unchecked` keyword is used in `FYToken`", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/67", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Unnecessary `unchecked` keyword is used in `FYToken`"}, {"title": "In method _update on Pool.sol - Divide before multiply", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/61", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "In method _update on Pool.sol - Divide before multiply"}, {"title": "Gas optimizations - using external over public ", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Gas optimizations - using external over public "}, {"title": "function build could explicitly check that seriesId is not 0", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/59", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "function build could explicitly check that seriesId is not 0"}, {"title": "function redeem should return 'redeemed' amount", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/58", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "function redeem should return 'redeemed' amount"}, {"title": "external function transferToPool is pretty useless", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/57", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "external function transferToPool is pretty useless"}, {"title": "unnecessary store", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/56", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "unnecessary store"}, {"title": "Anyone can create a fake pool to trick unauthorized front-ends", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-05-yield-findings", "body": "Anyone can create a fake pool to trick unauthorized front-ends"}, {"title": "Multiple compiler versions allowing a wide range from 0.5.0 to >=0.8.0", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Multiple compiler versions allowing a wide range from 0.5.0 to >=0.8.0"}, {"title": "flashFeeFactor is uninitialized at declaration leading to zero-fee flash loans enabled by default\u2028", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/53", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-05-yield-findings", "body": "flashFeeFactor is uninitialized at declaration leading to zero-fee flash loans enabled by default\u2028"}, {"title": "Incompatibility With Rebasing/Deflationary/Inflationary tokens", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/52", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-05-yield-findings", "body": "Incompatibility With Rebasing/Deflationary/Inflationary tokens"}, {"title": "Prevent the use of LOCK in setRoleAdmin to instead force the use of lockRole", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Prevent the use of LOCK in setRoleAdmin to instead force the use of lockRole"}, {"title": "Missing reentrancy guard and contract existence check for modules\u2028", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/49", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-05-yield-findings", "body": "Missing reentrancy guard and contract existence check for modules\u2028"}, {"title": "Missing sender address check in receive() may lead to locked Ether", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/48", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Missing sender address check in receive() may lead to locked Ether"}, {"title": "Return values of batch operations are ignored", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/46", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Return values of batch operations are ignored"}, {"title": "Violation of implicit constraints in batched operations may break protocol assumptions", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/45", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-05-yield-findings", "body": "Violation of implicit constraints in batched operations may break protocol assumptions"}, {"title": "Uninitialized or Incorrectly set auctionInterval may lead to liquidation engine livelock", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/44", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-05-yield-findings", "body": "Uninitialized or Incorrectly set auctionInterval may lead to liquidation engine livelock"}, {"title": "Potential griefing with DoS by front-running vault creation with same vaultID", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/43", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Potential griefing with DoS by front-running vault creation with same vaultID"}, {"title": "Missing zero-address validations\u2028", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/42", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-05-yield-findings", "body": "Missing zero-address validations\u2028"}, {"title": "Missing checks on debt max/min limits could cause pour to revert", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Missing checks on debt max/min limits could cause pour to revert"}, {"title": "ERC20 approve is vulnerable to the front-running", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/38", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-05-yield-findings", "body": "ERC20 approve is vulnerable to the front-running"}, {"title": "UniswapV3Oracle function _peek is public", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/37", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "UniswapV3Oracle function _peek is public"}, {"title": "no need for transferToPool to be payable", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/36", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "no need for transferToPool to be payable"}, {"title": "_burnInternal always returns 0 for fy tokens returned", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "_burnInternal always returns 0 for fy tokens returned"}, {"title": "Unsafe call to `.decimals`", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/32", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Unsafe call to `.decimals`"}, {"title": "Undercollateralized vaults' owner can be overwritten", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/30", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Undercollateralized vaults' owner can be overwritten"}, {"title": "Uniswap Oracle uses wrong prices", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/26", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-05-yield-findings", "body": "Uniswap Oracle uses wrong prices"}, {"title": "Inefficient Witch buy", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/25", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-05-yield-findings", "body": "Inefficient Witch buy"}, {"title": "Implicit unsafe math", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/24", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-05-yield-findings", "body": "Implicit unsafe math"}, {"title": "enum TokenType is never used", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/21", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "enum TokenType is never used"}, {"title": "Useless 'auth' modifier in setSources", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/20", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Useless 'auth' modifier in setSources"}, {"title": "'peek' and 'get' are identical (non-transactional)", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "disagree with severity"], "target": "2021-05-yield-findings", "body": "'peek' and 'get' are identical (non-transactional)"}, {"title": "Duplication of Balance", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/16", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Duplication of Balance"}, {"title": "Avoid assembly in getRevertMsg ", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/15", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Avoid assembly in getRevertMsg "}, {"title": "PoolFactory and JoinFactory very similar", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/14", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "PoolFactory and JoinFactory very similar"}, {"title": "Constants \"chi\" and \"rate\"", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/13", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-05-yield-findings", "body": "Constants \"chi\" and \"rate\""}, {"title": "Several todos left in the code", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/9", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Several todos left in the code"}, {"title": "Witch can't give back vault after 2x grab", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/8", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Witch can't give back vault after 2x grab"}, {"title": "auth collision possible", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/5", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-05-yield-findings", "body": "auth collision possible"}, {"title": "auth only works well with external functions", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/4", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-05-yield-findings", "body": "auth only works well with external functions"}, {"title": "Use constants for numbers", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/3", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-05-yield-findings", "body": "Use constants for numbers"}, {"title": "YieldMath.sol / Log2: >= or > ?", "html_url": "https://github.com/code-423n4/2021-05-yield-findings/issues/2", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-05-yield-findings", "body": "YieldMath.sol / Log2: >= or > ?"}, {"title": "Function `foreclosureTimeUser` returns a shorter user's foreclosure time than expected", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/171", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Function `foreclosureTimeUser` returns a shorter user's foreclosure time than expected"}, {"title": "The `domainSeperator` is not recalculated after a hard fork happens", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/166", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-realitycards-findings", "body": "The `domainSeperator` is not recalculated after a hard fork happens"}, {"title": "maxContractBalance can be bypassed", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/163", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-06-realitycards-findings", "body": "maxContractBalance can be bypassed"}, {"title": "Use Mode instead of uint in RCFactory to make code much more readable", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/162", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Use Mode instead of uint in RCFactory to make code much more readable"}, {"title": "Gas optimizations - Remove isMarket from RCMarket", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/161", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Gas optimizations - Remove isMarket from RCMarket"}, {"title": "`RCNftHubL2.safeTransferFrom` not accoring to spec", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/160", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "`RCNftHubL2.safeTransferFrom` not accoring to spec"}, {"title": "Dangerous toggle functions", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/157", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-realitycards-findings", "body": "Dangerous toggle functions"}, {"title": "uberOwner cannot do all the things an owner can", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/156", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-realitycards-findings", "body": "uberOwner cannot do all the things an owner can"}, {"title": "Unbounded iteration on _cardAffiliateAddresses", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/154", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Unbounded iteration on _cardAffiliateAddresses"}, {"title": "Deposits can be denied by abusing `maxContractBalance`", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/153", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "Deposits can be denied by abusing `maxContractBalance`"}, {"title": "Deposits don't work with fee-on transfer tokens", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/152", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-06-realitycards-findings", "body": "Deposits don't work with fee-on transfer tokens"}, {"title": "Market-specific pause is not checked for sponsor", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/145", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-06-realitycards-findings", "body": "Market-specific pause is not checked for sponsor"}, {"title": "Gas Optimizations - Use storage or memory to reduce reads", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/140", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "Gas Optimizations - Use storage or memory to reduce reads"}, {"title": "Gas optimizations - Duplicated state variable ", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/139", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Gas optimizations - Duplicated state variable "}, {"title": "totalNftMintCount can be replaced with ERC721 totalSupply()", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/134", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "totalNftMintCount can be replaced with ERC721 totalSupply()"}, {"title": "Shadowing Local Variables found in RCOrderbook.sol", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/124", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Shadowing Local Variables found in RCOrderbook.sol"}, {"title": "Redudant calculations in payRent when marketBalance < _amount", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/123", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Redudant calculations in payRent when marketBalance < _amount"}, {"title": "Wrong calculation on _collectRentAction", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/122", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Wrong calculation on _collectRentAction"}, {"title": "Anyone can affect deposits of any user and turn the owner of the token", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/119", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Anyone can affect deposits of any user and turn the owner of the token"}, {"title": "NFT Hub implementation deviates from ERC721 for transfer functions", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/118", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "NFT Hub implementation deviates from ERC721 for transfer functions"}, {"title": "Calculation imprecision when calculating the reaming cut", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/117", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "Calculation imprecision when calculating the reaming cut"}, {"title": "Missing balancedBooks modifier could result in failed system insolvency detection", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/112", "labels": ["bug", "2 (Med Risk)", "disagree with severity"], "target": "2021-06-realitycards-findings", "body": "Missing balancedBooks modifier could result in failed system insolvency detection"}, {"title": "questionFinalised is redundant", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/111", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "questionFinalised is redundant"}, {"title": "Missing call to removeOldBids may affect foreclosure", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/109", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-06-realitycards-findings", "body": "Missing call to removeOldBids may affect foreclosure"}, {"title": "Deposit double-counting miscalculation could incorrectly prevent user foreclosure", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-06-realitycards-findings", "body": "Deposit double-counting miscalculation could incorrectly prevent user foreclosure"}, {"title": "Deposit whitelist enforced on msg.sender instead of user", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/107", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-06-realitycards-findings", "body": "Deposit whitelist enforced on msg.sender instead of user"}, {"title": "Critical uberOwner address changes should be a two-step process", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/105", "labels": ["bug", "2 (Med Risk)"], "target": "2021-06-realitycards-findings", "body": "Critical uberOwner address changes should be a two-step process"}, {"title": "Test function left behind can expose order book", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/101", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-06-realitycards-findings", "body": "Test function left behind can expose order book"}, {"title": "Unused named return values are misleading and could lead to errors", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/96", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-06-realitycards-findings", "body": "Unused named return values are misleading and could lead to errors"}, {"title": "Redundant allowance and balance checks", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/93", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-06-realitycards-findings", "body": "Redundant allowance and balance checks"}, {"title": "exitedTimestamp set prematurely", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/91", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "exitedTimestamp set prematurely"}, {"title": "Assert indicates unnecessary check or missing constraint/logic", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/90", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-06-realitycards-findings", "body": "Assert indicates unnecessary check or missing constraint/logic"}, {"title": "Flows can bypass market and global pause", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/89", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-06-realitycards-findings", "body": "Flows can bypass market and global pause"}, {"title": "maxSumOfPrices check is broken", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/87", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "maxSumOfPrices check is broken"}, {"title": "Missing market open check", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/86", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Missing market open check"}, {"title": "Use of assert() instead of require()", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/83", "labels": ["bug", "1 (Low Risk)"], "target": "2021-06-realitycards-findings", "body": "Use of assert() instead of require()"}, {"title": "Misplaced zero-address check", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/82", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Misplaced zero-address check"}, {"title": "Susceptible to collusion and sybil attacks", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/79", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-06-realitycards-findings", "body": "Susceptible to collusion and sybil attacks"}, {"title": "Making isMarketApproved False on an operational market will lock NFTs to L2", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/76", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Making isMarketApproved False on an operational market will lock NFTs to L2"}, {"title": "isGovernor excludes Factory owner", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/75", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "isGovernor excludes Factory owner"}, {"title": "Missing input validation on timeout", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/74", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "Missing input validation on timeout"}, {"title": "Basis points usage deviates from general definition", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/72", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Basis points usage deviates from general definition"}, {"title": "NFT minting limit dependence on block gas limit", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/70", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "NFT minting limit dependence on block gas limit"}, {"title": "Use of ecrecover is susceptible to signature malleability", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/66", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "Use of ecrecover is susceptible to signature malleability"}, {"title": "Missing events in multiple functions ", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/65", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "Missing events in multiple functions "}, {"title": "prevent bids in WINNER_TAKES_ALL when it is no longer possible to win", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "prevent bids in WINNER_TAKES_ALL when it is no longer possible to win"}, {"title": "Redundant require() statement in RCFactory.createMarket()", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Redundant require() statement in RCFactory.createMarket()"}, {"title": "RCFactory.createMarket() does not enforce _timestamps[1] and _timestamps[2] being larger than _timestamps[0], even though proper functioning requires them to be so", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/61", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "RCFactory.createMarket() does not enforce _timestamps[1] and _timestamps[2] being larger than _timestamps[0], even though proper functioning requires them to be so"}, {"title": "Lack of zero address validation ", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/56", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Lack of zero address validation "}, {"title": "Unused return value from orderbook.findNewOwner() and treasury.payRent()", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/53", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Unused return value from orderbook.findNewOwner() and treasury.payRent()"}, {"title": "RCTreasury.addToWhitelist() will erroneously remove user from whitelist if user is already whitelisted", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/49", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-realitycards-findings", "body": "RCTreasury.addToWhitelist() will erroneously remove user from whitelist if user is already whitelisted"}, {"title": "Possible locked-ether (funds) Issue in RCOrderbook.sol", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/43", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-06-realitycards-findings", "body": "Possible locked-ether (funds) Issue in RCOrderbook.sol"}, {"title": "anyone can call function sponsor", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/40", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "anyone can call function sponsor"}, {"title": "circuitBreaker overrides the state", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/38", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "circuitBreaker overrides the state"}, {"title": "contract RCTreasury does not use nfthub and setNftHubAddress", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "contract RCTreasury does not use nfthub and setNftHubAddress"}, {"title": "functions safeTransferFrom and transferFrom are too similar", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/34", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "functions safeTransferFrom and transferFrom are too similar"}, {"title": "event WithdrawnBatch is not used", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/32", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "event WithdrawnBatch is not used"}, {"title": "minRentalDayDivisor can be different between markets and treasury", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/31", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "minRentalDayDivisor can be different between markets and treasury"}, {"title": "Add comment to not obvious code in withdrawDeposit ", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/30", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Add comment to not obvious code in withdrawDeposit "}, {"title": "payout doesn't fix isForeclosed state", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/28", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-06-realitycards-findings", "body": "payout doesn't fix isForeclosed state"}, {"title": "unnecessary emit of LogUserForeclosed", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/27", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "unnecessary emit of LogUserForeclosed"}, {"title": "addToWhitelist doesn't check factoryAddress", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/24", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "addToWhitelist doesn't check factoryAddress"}, {"title": "timestamp", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/20", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-06-realitycards-findings", "body": "timestamp"}, {"title": "external-function", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-06-realitycards-findings", "body": "external-function"}, {"title": "costly-loop", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/17", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "costly-loop"}, {"title": "Camel case function name", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/13", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Camel case function name"}, {"title": "Multiple calls necessary for getWinnerFromOracle", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/12", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-realitycards-findings", "body": "Multiple calls necessary for getWinnerFromOracle"}, {"title": "Can access cards of other markets", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/11", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity", "resolved"], "target": "2021-06-realitycards-findings", "body": "Can access cards of other markets"}, {"title": "1000 as a constant", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "1000 as a constant"}, {"title": "Checks for enum bounds", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/9", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Checks for enum bounds"}, {"title": "improve readability of 1000000 ", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "improve readability of 1000000 "}, {"title": "_realitioAddress not used", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/7", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "_realitioAddress not used"}, {"title": "Use immutable keyword", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/6", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Use immutable keyword"}, {"title": "Unchecked ERC20 transfers can cause lock up", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/2", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Unchecked ERC20 transfers can cause lock up"}, {"title": "Gas inefficiency with NativeMetaTransaction and calldata", "html_url": "https://github.com/code-423n4/2021-06-realitycards-findings/issues/1", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-06-realitycards-findings", "body": "Gas inefficiency with NativeMetaTransaction and calldata"}, {"title": "Gas optimization on `redeemToken` of `ATokenYieldSource`", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/123", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ATokenYieldSource"], "target": "2021-06-pooltogether-findings", "body": "Gas optimization on `redeemToken` of `ATokenYieldSource`"}, {"title": "Gas optimization on `_depositToAave`", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/122", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ATokenYieldSource"], "target": "2021-06-pooltogether-findings", "body": "Gas optimization on `_depositToAave`"}, {"title": "User could lose underlying tokens when redeeming from the `IdleYieldSource`", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/120", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "IdleYieldSource"], "target": "2021-06-pooltogether-findings", "body": "User could lose underlying tokens when redeeming from the `IdleYieldSource`"}, {"title": "Lack of `nonReentrant` modifier in yield source contracts", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/119", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "ATokenYieldSource", "IdleYieldSource", "SushiYieldSource", "BadgerYieldSource"], "target": "2021-06-pooltogether-findings", "body": "Lack of `nonReentrant` modifier in yield source contracts"}, {"title": "`onERC721Received` not implemented in `PrizePool`", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/118", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "`onERC721Received` not implemented in `PrizePool`"}, {"title": "Using `transferFrom` on ERC721 tokens", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/115", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-pooltogether-findings", "body": "Using `transferFrom` on ERC721 tokens"}, {"title": "SafeMath not completely used in yield source contracts", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/114", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-pooltogether-findings", "body": "SafeMath not completely used in yield source contracts"}, {"title": "Return values of ERC20 `transfer` and `transferFrom` are unchecked", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/112", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "SushiYieldSource", "BadgerYieldSource"], "target": "2021-06-pooltogether-findings", "body": "Return values of ERC20 `transfer` and `transferFrom` are unchecked"}, {"title": "Unlocked pragma used in multiple contracts", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/109", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Unlocked pragma used in multiple contracts"}, {"title": "Declare functions as `external` to save gas", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/107", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "SushiYieldSource", "BadgerYieldSource"], "target": "2021-06-pooltogether-findings", "body": "Declare functions as `external` to save gas"}, {"title": "Use ERC-165 instead of homebrew staticcall-based check", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/104", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-pooltogether-findings", "body": "Use ERC-165 instead of homebrew staticcall-based check"}, {"title": "IdleYieldSource doesn't use mantissa calculations", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/103", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "IdleYieldSource doesn't use mantissa calculations"}, {"title": "Gas savings on uninitialized variables.", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/101", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ATokenYieldSource"], "target": "2021-06-pooltogether-findings", "body": "Gas savings on uninitialized variables."}, {"title": "CreditBurned event emitted even on zero tokens burned", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/97", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "CreditBurned event emitted even on zero tokens burned"}, {"title": "Credit accrual is done twice in `award`", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/96", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Credit accrual is done twice in `award`"}, {"title": "SushiYieldSource save gas with pre-approval", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/94", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "SushiYieldSource"], "target": "2021-06-pooltogether-findings", "body": "SushiYieldSource save gas with pre-approval"}, {"title": "ATokenYieldSource save gas with pre-approval", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/93", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ATokenYieldSource", "IdleYieldSource"], "target": "2021-06-pooltogether-findings", "body": "ATokenYieldSource save gas with pre-approval"}, {"title": "`YieldSourcePrizePool_canAwardExternal` does not work", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/92", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-06-pooltogether-findings", "body": "`YieldSourcePrizePool_canAwardExternal` does not work"}, {"title": "withdraw timelock can be circumvented", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/91", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "withdraw timelock can be circumvented"}, {"title": "`YearnV2YieldSource` wrong subtraction in withdraw", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/90", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "`YearnV2YieldSource` wrong subtraction in withdraw"}, {"title": "ATokenYieldSource mixes aTokens and underlying when redeeming", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/86", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "ATokenYieldSource"], "target": "2021-06-pooltogether-findings", "body": "ATokenYieldSource mixes aTokens and underlying when redeeming"}, {"title": "BadgerYieldSource balanceOfToken share calculation seems wrong", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/84", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "BadgerYieldSource"], "target": "2021-06-pooltogether-findings", "body": "BadgerYieldSource balanceOfToken share calculation seems wrong"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/81", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "ATokenYieldSource", "SushiYieldSource", "BadgerYieldSource", "PrizePool", "ControlledToken", "StakePrizePool"], "target": "2021-06-pooltogether-findings", "body": "Missing parameter validation"}, {"title": "_depositToAave always returns 0", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/80", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ATokenYieldSource"], "target": "2021-06-pooltogether-findings", "body": "_depositToAave always returns 0"}, {"title": "Uneven use of events", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/78", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Uneven use of events"}, {"title": "Various gas optimizations", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/77", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Various gas optimizations"}, {"title": "Using memory[] parameter without checking its length", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/75", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Using memory[] parameter without checking its length"}, {"title": "safeApprove() for Yearn Vault may revert preventing deposits causing DoS", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/71", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "safeApprove() for Yearn Vault may revert preventing deposits causing DoS"}, {"title": "Ignored return values may lead to undefined behavior", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/70", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-06-pooltogether-findings", "body": "Ignored return values may lead to undefined behavior"}, {"title": "Overly permissive threshold check allows high yield loss", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/69", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-pooltogether-findings", "body": "Overly permissive threshold check allows high yield loss"}, {"title": "Lack of event emission after critical initialize() functions", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-pooltogether-findings", "body": "Lack of event emission after critical initialize() functions"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/65", "labels": ["bug", "duplicate", "1 (Low Risk)", "ATokenYieldSource", "IdleYieldSource", "YearnV2YieldSource", "SushiYieldSource", "BadgerYieldSource", "PrizePool", "ControlledToken", "YieldSourcePrizePool", "StakePrizePool"], "target": "2021-06-pooltogether-findings", "body": "Missing zero-address checks"}, {"title": "Missing calls to init functions of inherited contracts", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/60", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "ATokenYieldSource", "IdleYieldSource", "YearnV2YieldSource"], "target": "2021-06-pooltogether-findings", "body": "Missing calls to init functions of inherited contracts"}, {"title": "Actual yield source check on address will succeed for non-existent contract", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/59", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "YieldSourcePrizePool", "MitigationStarted"], "target": "2021-06-pooltogether-findings", "body": "Actual yield source check on address will succeed for non-existent contract"}, {"title": "Missing modifier onlyControlledToken may result in undefined/exceptional behavior", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "PrizePool"], "target": "2021-06-pooltogether-findings", "body": "Missing modifier onlyControlledToken may result in undefined/exceptional behavior"}, {"title": "Named return values are never used in favor of explicit returns", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/53", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-pooltogether-findings", "body": "Named return values are never used in favor of explicit returns"}, {"title": "The assumption that operator == to (user) may not hold leading to failed timelock deposits", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/51", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-06-pooltogether-findings", "body": "The assumption that operator == to (user) may not hold leading to failed timelock deposits"}, {"title": "Switch modifier order to consistently place the nonreentrant modifier as the first one", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Switch modifier order to consistently place the nonreentrant modifier as the first one"}, {"title": "Caching sushiAddr and sushiBar in local variables to save 200 gas in supplyTokenTo()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/47", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "SushiYieldSource"], "target": "2021-06-pooltogether-findings", "body": "Caching sushiAddr and sushiBar in local variables to save 200 gas in supplyTokenTo()"}, {"title": "maxLosses can be cached in a local variable to save 100 gas in _withdrawFromVault()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/46", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "YearnV2YieldSource"], "target": "2021-06-pooltogether-findings", "body": "maxLosses can be cached in a local variable to save 100 gas in _withdrawFromVault()"}, {"title": "token can be cached in a local variable to save 100 gas in _withdrawFromVault()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/45", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "token can be cached in a local variable to save 100 gas in _withdrawFromVault()"}, {"title": "token can be cached in a local variable to save 200 gas in _depositInVault()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/44", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "token can be cached in a local variable to save 200 gas in _depositInVault()"}, {"title": "Using function parameter in initialize() instead of state variable saves 100 gas", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "YearnV2YieldSource"], "target": "2021-06-pooltogether-findings", "body": "Using function parameter in initialize() instead of state variable saves 100 gas"}, {"title": "Zero-address check unnecessary due to the initializer modifier", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "YearnV2YieldSource"], "target": "2021-06-pooltogether-findings", "body": "Zero-address check unnecessary due to the initializer modifier"}, {"title": "Caching badger and badgerSett can save 400 gas in supplyTokenTo()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Caching badger and badgerSett can save 400 gas in supplyTokenTo()"}, {"title": "Gas savings of (100*loop-iteration-count) by caching _tokens.end() in _tokenTotalSupply()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Gas savings of (100*loop-iteration-count) by caching _tokens.end() in _tokenTotalSupply()"}, {"title": "Preventing zero-address controlled tokens from being added can avoid checks later", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/35", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "PrizePool"], "target": "2021-06-pooltogether-findings", "body": "Preventing zero-address controlled tokens from being added can avoid checks later"}, {"title": "Unnecessary indirection to access block.timestamp value", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-pooltogether-findings", "body": "Unnecessary indirection to access block.timestamp value"}, {"title": "Gas savings of 100 by caching maxTimelockDuration in _calculateTimelockDuration()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Gas savings of 100 by caching maxTimelockDuration in _calculateTimelockDuration()"}, {"title": "Gas savings of 100 per user by caching _timelockBalances[user] in _sweepTimelockBalances()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Gas savings of 100 per user by caching _timelockBalances[user] in _sweepTimelockBalances()"}, {"title": "Using access lists can save gas due to EIP-2930 post-Berlin hard fork", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-pooltogether-findings", "body": "Using access lists can save gas due to EIP-2930 post-Berlin hard fork"}, {"title": "Gas savings of 300 by caching _currentAwardBalance in captureAwardBalance()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Gas savings of 300 by caching _currentAwardBalance in captureAwardBalance()"}, {"title": "Simplifying extensible but expensive modifier may save gas", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Simplifying extensible but expensive modifier may save gas"}, {"title": "Avoid use of state variables in event emissions to save gas", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Avoid use of state variables in event emissions to save gas"}, {"title": "Upgrading the solc compiler to >=0.8 may save gas", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/25", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-06-pooltogether-findings", "body": "Upgrading the solc compiler to >=0.8 may save gas"}, {"title": "Gas Optimization: PrizePool._calculateCreditBalance.creditBalance is incorrectly passed by reference rather than passed by value, causing unnecessary SLOADs instead of MLOADs", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/24", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Gas Optimization: PrizePool._calculateCreditBalance.creditBalance is incorrectly passed by reference rather than passed by value, causing unnecessary SLOADs instead of MLOADs"}, {"title": "PrizePool.beforeTokenTransfer() incorrectly uses msg.sender in seven places instead of _msgSender()", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/23", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-pooltogether-findings", "body": "PrizePool.beforeTokenTransfer() incorrectly uses msg.sender in seven places instead of _msgSender()"}, {"title": "function _getRefferalCode() can be refactored to a constant variable", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/20", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ATokenYieldSource"], "target": "2021-06-pooltogether-findings", "body": "function _getRefferalCode() can be refactored to a constant variable"}, {"title": "modifier canAddLiquidity and function _canAddLiquidity", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "modifier canAddLiquidity and function _canAddLiquidity"}, {"title": "_accrueCredit -> _updateCreditBalance", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-pooltogether-findings", "body": "_accrueCredit -> _updateCreditBalance"}, {"title": "setPrizeStrategy check for Interface Supported in PrizePool.sol doesn't guarantee that the new prize strategy is valid", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/15", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-06-pooltogether-findings", "body": "setPrizeStrategy check for Interface Supported in PrizePool.sol doesn't guarantee that the new prize strategy is valid"}, {"title": "staticCall to yieldSource.depositToken doesn't provide any security guarantees", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/14", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-pooltogether-findings", "body": "staticCall to yieldSource.depositToken doesn't provide any security guarantees"}, {"title": "currentTime() outside of loop", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/11", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-06-pooltogether-findings", "body": "currentTime() outside of loop"}, {"title": "What is default duration when creditRateMantissa is not set", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/10", "labels": ["bug", "1 (Low Risk)"], "target": "2021-06-pooltogether-findings", "body": "What is default duration when creditRateMantissa is not set"}, {"title": "Use immutable keyword", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/7", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "Use immutable keyword"}, {"title": "function sponsor not allways present", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/6", "labels": ["bug", "0 (Non-critical)"], "target": "2021-06-pooltogether-findings", "body": "function sponsor not allways present"}, {"title": "no check for _stakeToken!=0", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/4", "labels": ["bug", "1 (Low Risk)"], "target": "2021-06-pooltogether-findings", "body": "no check for _stakeToken!=0"}, {"title": "uint256(-1)", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/3", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-pooltogether-findings", "body": "uint256(-1)"}, {"title": "cache and reuse _vault.apiVersion() result", "html_url": "https://github.com/code-423n4/2021-06-pooltogether-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "YearnV2YieldSource"], "target": "2021-06-pooltogether-findings", "body": "cache and reuse _vault.apiVersion() result"}, {"title": "Add reentracy protections on function `executeTrade`", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/143", "labels": ["bug", "2 (Med Risk)", "sponsor dispute"], "target": "2021-06-tracer-findings", "body": "Add reentracy protections on function `executeTrade`"}, {"title": "The `currentHour` variable in `Pricing` could be out of sync", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/142", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "The `currentHour` variable in `Pricing` could be out of sync"}, {"title": "Margin value is not checked to be non-negative in `leveragedNotionalValue`", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/141", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-tracer-findings", "body": "Margin value is not checked to be non-negative in `leveragedNotionalValue`"}, {"title": "The `averagePriceForPeriod` function may revert without proper error message returned", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/140", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "The `averagePriceForPeriod` function may revert without proper error message returned"}, {"title": "`Prices.averagePrice` does not show a difference between no trades and a zero price", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/139", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "`Prices.averagePrice` does not show a difference between no trades and a zero price"}, {"title": "Unlocked pragma used in multiple contracts", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/133", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Unlocked pragma used in multiple contracts"}, {"title": "Gas savings in verifyAndSubmitLiquidation()", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/131", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Gas savings in verifyAndSubmitLiquidation()"}, {"title": "Missing validation on calculateTWAP", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/130", "labels": ["bug", "invalid", "sponsor dispute"], "target": "2021-06-tracer-findings", "body": "Missing validation on calculateTWAP"}, {"title": "Change claimEscrow() to external", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/128", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Change claimEscrow() to external"}, {"title": "Logic error in fee subtraction", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/127", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Logic error in fee subtraction"}, {"title": "Gas savings in getPoolFundingRate()", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/125", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Gas savings in getPoolFundingRate()"}, {"title": "State variable not used", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/122", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "State variable not used"}, {"title": "Superfluous verifySignature function", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/121", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Superfluous verifySignature function"}, {"title": "Use EIP-1167 in order to deploy new perpetual swap contracts", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/120", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Use EIP-1167 in order to deploy new perpetual swap contracts"}, {"title": "Wrong trading pricing calculations", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/119", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Wrong trading pricing calculations"}, {"title": "Unnecessary type conversions", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/118", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Unnecessary type conversions"}, {"title": "Missing checks for lowestMaxLeverage < maxLeverage and insurancePoolSwitchStage < deleveragingCliff", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/117", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Missing checks for lowestMaxLeverage < maxLeverage and insurancePoolSwitchStage < deleveragingCliff"}, {"title": "Underflow problems occurring when a token has >18 decimals", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/116", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Underflow problems occurring when a token has >18 decimals"}, {"title": "No check transferFrom() return value", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/115", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "No check transferFrom() return value"}, {"title": "inclusive check that account is not above minimum margin", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/109", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "inclusive check that account is not above minimum margin"}, {"title": "amountToReturn > receipt.escrowedAmount could be inclusive", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/108", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "amountToReturn > receipt.escrowedAmount could be inclusive"}, {"title": "Wrong funding index in settle when no base?", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/106", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Wrong funding index in settle when no base?"}, {"title": "Insurance slippage reimbursement can be used to steal insurance fund", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/105", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Insurance slippage reimbursement can be used to steal insurance fund"}, {"title": "Deflationary tokens are not supported", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/104", "labels": ["bug", "1 (Low Risk)", "sponsor dispute", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Deflationary tokens are not supported"}, {"title": "Can set values to more than 100%", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/102", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Can set values to more than 100%"}, {"title": "Trader orders can be frontrun and users can be denied from trading", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/100", "labels": ["bug", "2 (Med Risk)"], "target": "2021-06-tracer-findings", "body": "Trader orders can be frontrun and users can be denied from trading"}, {"title": "Wrong token approval", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/99", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Wrong token approval"}, {"title": "Wrong price scale for `GasOracle`", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/93", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Wrong price scale for `GasOracle`"}, {"title": "LibMath sumN can iterate over array", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/89", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "LibMath sumN can iterate over array"}, {"title": "LibMath fails implicitly", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/88", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "LibMath fails implicitly"}, {"title": "hardcoded chainId", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/85", "labels": ["bug", "1 (Low Risk)"], "target": "2021-06-tracer-findings", "body": "hardcoded chainId"}, {"title": "Potential division by zero\u2028", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/83", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Potential division by zero\u2028"}, {"title": "Malicious owner can drain the market at any time using SafetyWithdraw\u2028", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/81", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Malicious owner can drain the market at any time using SafetyWithdraw\u2028"}, {"title": "Missing length check on array could lead to undefined behavior", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/79", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Missing length check on array could lead to undefined behavior"}, {"title": "setDecimals can be set by anyone and not used", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/78", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "setDecimals can be set by anyone and not used"}, {"title": "Using tx.gasprice to prevent front-running may lead to failed liquidations", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/76", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-tracer-findings", "body": "Using tx.gasprice to prevent front-running may lead to failed liquidations"}, {"title": "Close-ended time ranges may confuse users/interfaces", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/75", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Close-ended time ranges may confuse users/interfaces"}, {"title": "Use of incorrect index leads to incorrect updation of funding rates", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/74", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Use of incorrect index leads to incorrect updation of funding rates"}, {"title": "Use of deprecated Chainlink API\u2028", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/73", "labels": ["bug", "2 (Med Risk)"], "target": "2021-06-tracer-findings", "body": "Use of deprecated Chainlink API\u2028"}, {"title": "Lack of a contract existence check may lead to undefined behavior", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/71", "labels": ["bug", "1 (Low Risk)"], "target": "2021-06-tracer-findings", "body": "Lack of a contract existence check may lead to undefined behavior"}, {"title": "Missing replay protection against previously executed orders\u2028", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/70", "labels": ["bug", "invalid", "sponsor dispute"], "target": "2021-06-tracer-findings", "body": "Missing replay protection against previously executed orders\u2028"}, {"title": "Potential Out-of-Gas exception due to unbounded loop", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/69", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Potential Out-of-Gas exception due to unbounded loop"}, {"title": "Malicious owner can arbitrarily change fee to any % value\u2028", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/66", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Malicious owner can arbitrarily change fee to any % value\u2028"}, {"title": "Missing events for critical parameter changing operations by owner", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/64", "labels": ["bug", "2 (Med Risk)"], "target": "2021-06-tracer-findings", "body": "Missing events for critical parameter changing operations by owner"}, {"title": "Event log poisoning/griefing in withdrawFees()\u2028", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/63", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Event log poisoning/griefing in withdrawFees()\u2028"}, {"title": "function which can declared as external ", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "function which can declared as external "}, {"title": "Dangerous use of storage data location specifier", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/61", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "Dangerous use of storage data location specifier"}, {"title": "tvl calculation in withdraw() should use convertedWadAmount instead of amount", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/57", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "tvl calculation in withdraw() should use convertedWadAmount instead of amount"}, {"title": "Deposit event should use the converted WAD amount", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/56", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Deposit event should use the converted WAD amount"}, {"title": "executionPrice, newMakeAverage and newTakeAverage before calling the market", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/52", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "executionPrice, newMakeAverage and newTakeAverage before calling the market"}, {"title": "recalculation of 10**18", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "recalculation of 10**18"}, {"title": "Zero-address checks are missing", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/49", "labels": ["bug", "1 (Low Risk)"], "target": "2021-06-tracer-findings", "body": "Zero-address checks are missing"}, {"title": "LIQUIDATION_GAS_COST may not be a constant\u2028", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/48", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "LIQUIDATION_GAS_COST may not be a constant\u2028"}, {"title": "orders and orderToSig mappings", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "orders and orderToSig mappings"}, {"title": "Single-step process for critical ownership transfer\u2028", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/43", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-06-tracer-findings", "body": "Single-step process for critical ownership transfer\u2028"}, {"title": "state variable which can be declared as immutable", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/40", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "state variable which can be declared as immutable"}, {"title": "Unused State variable", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Unused State variable"}, {"title": "[Gas] Use at least 0.8.0 instead of 0.8.4", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "[Gas] Use at least 0.8.0 instead of 0.8.4"}, {"title": "[Gas] Change some function parameters from `memory` to `calldata`", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "[Gas] Change some function parameters from `memory` to `calldata`"}, {"title": "Using array memory parameter without checking its length ", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Using array memory parameter without checking its length "}, {"title": "claimEscrow() accepts invalid receiptId", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/33", "labels": ["bug", "0 (Non-critical)"], "target": "2021-06-tracer-findings", "body": "claimEscrow() accepts invalid receiptId"}, {"title": "avoid paying insurance", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/30", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "avoid paying insurance"}, {"title": "Use immutable keyword", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/29", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Use immutable keyword"}, {"title": "Comment in claimEscrow", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/26", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Comment in claimEscrow"}, {"title": "use try catch", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/25", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-tracer-findings", "body": "use try catch"}, {"title": "Variables that can be converted into immutables", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/24", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Variables that can be converted into immutables"}, {"title": "make sure withdrawFees allways can withdraw", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/23", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "make sure withdrawFees allways can withdraw"}, {"title": "Comment in partialLiquidationIsValid misleading", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/18", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Comment in partialLiquidationIsValid misleading"}, {"title": "check sign in calculateSlippage", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/17", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-tracer-findings", "body": "check sign in calculateSlippage"}, {"title": "Comment for formula calcEscrowLiquidationAmount different than code", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Comment for formula calcEscrowLiquidationAmount different than code"}, {"title": "alternative solidity coding", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/15", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "alternative solidity coding"}, {"title": "Use constants for numbers", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/14", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Use constants for numbers"}, {"title": "todos left in the code", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/12", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "todos left in the code"}, {"title": "prb-math not audited", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/11", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "prb-math not audited"}, {"title": "Only one constructor with an emit", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Only one constructor with an emit"}, {"title": "Deployers can be called by everyone", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/9", "labels": ["bug", "invalid", "sponsor dispute"], "target": "2021-06-tracer-findings", "body": "Deployers can be called by everyone"}, {"title": "No pause function is present", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/8", "labels": ["bug", "invalid", "sponsor dispute"], "target": "2021-06-tracer-findings", "body": "No pause function is present"}, {"title": "matchOrders could/should check market", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/6", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "matchOrders could/should check market"}, {"title": "Claim liquidation escrow", "html_url": "https://github.com/code-423n4/2021-06-tracer-findings/issues/2", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-tracer-findings", "body": "Claim liquidation escrow"}, {"title": "Use of deprecated Chainlink function `latestAnswer`", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/126", "labels": ["bug", "2 (Med Risk)", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Use of deprecated Chainlink function `latestAnswer`"}, {"title": "Use of `tx.origin` for authentication", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/122", "labels": ["bug", "1 (Low Risk)"], "target": "2021-06-gro-findings", "body": "Use of `tx.origin` for authentication"}, {"title": "More accurate calculation of return USD of `withdrawSingleByLiquidity`", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/121", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "More accurate calculation of return USD of `withdrawSingleByLiquidity`"}, {"title": "Add a proper revert message in `_withdrawSingle`", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/120", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Add a proper revert message in `_withdrawSingle`"}, {"title": "Unlocked pragma used in multiple contracts", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/117", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-06-gro-findings", "body": "Unlocked pragma used in multiple contracts"}, {"title": "function withdrawToAdapter should be inluded in the interface and return withdrawal amount", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/116", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-06-gro-findings", "body": "function withdrawToAdapter should be inluded in the interface and return withdrawal amount"}, {"title": "BaseVaultAdaptor assumes `sharePrice` is always in underlying decimals", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/114", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "BaseVaultAdaptor assumes `sharePrice` is always in underlying decimals"}, {"title": "strategiesLength should not be allowed to exceed MAX_STRATS", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/110", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor disputed"], "target": "2021-06-gro-findings", "body": "strategiesLength should not be allowed to exceed MAX_STRATS"}, {"title": "Rational actors will just set themselves as referral", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor disputed"], "target": "2021-06-gro-findings", "body": "Rational actors will just set themselves as referral"}, {"title": "Early user can break minting", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/107", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Early user can break minting"}, {"title": "Usage of deprecated ChainLink API in `Buoy3Pool`", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/106", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Usage of deprecated ChainLink API in `Buoy3Pool`"}, {"title": "`Buoy3Pool._updateRatios` unsafe math", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/105", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-06-gro-findings", "body": "`Buoy3Pool._updateRatios` unsafe math"}, {"title": "`Buoy3Pool.safetyCheck` is not precise and has some assumptions", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/104", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "`Buoy3Pool.safetyCheck` is not precise and has some assumptions"}, {"title": "`Allocaiton.calcProtocolExposureDelta` gas optimization", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "`Allocaiton.calcProtocolExposureDelta` gas optimization"}, {"title": "`Exposure.sortVaultsByDelta` does not work for N_COINS != 3", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/101", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor disputed"], "target": "2021-06-gro-findings", "body": "`Exposure.sortVaultsByDelta` does not work for N_COINS != 3"}, {"title": "`Insurance.getVaultDeltaForDeposit` returns wrong `investDelta`", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/98", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-06-gro-findings", "body": "`Insurance.getVaultDeltaForDeposit` returns wrong `investDelta`"}, {"title": "Wrong min amount check in `withdrawByStablecoin`", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/97", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Wrong min amount check in `withdrawByStablecoin`"}, {"title": "Hardcoded 99 as deadcoin", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/96", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Hardcoded 99 as deadcoin"}, {"title": "Loss of precision", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/95", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-06-gro-findings", "body": "Loss of precision"}, {"title": "RebasingGToken emits same events on transfer", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "RebasingGToken emits same events on transfer"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/90", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Missing parameter validation"}, {"title": "event LogTransfer is only emitted in function transfer", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/88", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "event LogTransfer is only emitted in function transfer"}, {"title": "burnAll should check that factor > 0 and amount > 0", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/87", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-06-gro-findings", "body": "burnAll should check that factor > 0 and amount > 0"}, {"title": "totalAssets > withdrawUsd should be inclusive", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/86", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "totalAssets > withdrawUsd should be inclusive"}, {"title": "Two SafeApprove calls when it could be just one", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/84", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Two SafeApprove calls when it could be just one"}, {"title": "Inconsistent usage of exponentiation for constants", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/83", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Inconsistent usage of exponentiation for constants"}, {"title": "Return False early in isValidBigFish", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/82", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Return False early in isValidBigFish"}, {"title": "setBigFishThreshold above 100%", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/80", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "setBigFishThreshold above 100%"}, {"title": "withdrawal fee may be set above 100% or frontrunned", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/78", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "withdrawal fee may be set above 100% or frontrunned"}, {"title": "decimals of FixedStablecoins", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/77", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "decimals of FixedStablecoins"}, {"title": "updateStrategiesDebtRatio function and LogNewDebtRatios event", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/74", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "updateStrategiesDebtRatio function and LogNewDebtRatios event"}, {"title": "Unused code", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Unused code"}, {"title": "Incorrect use of operator leads to arbitrary minting of GVT tokens", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/69", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Incorrect use of operator leads to arbitrary minting of GVT tokens"}, {"title": "Stricter than needed inequalities may affect borderline scenarios", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/67", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Stricter than needed inequalities may affect borderline scenarios"}, {"title": "Unauthorized rebalanceTrigger calls may allow one to exploit arbitrage opportunity and put system at risk", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/66", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Unauthorized rebalanceTrigger calls may allow one to exploit arbitrage opportunity and put system at risk"}, {"title": "Use of uninitialized value and unclear/unused logic", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Use of uninitialized value and unclear/unused logic"}, {"title": "Whitelist addition/removal is done unconditionally", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Whitelist addition/removal is done unconditionally"}, {"title": "Vault assets can be migrated to an arbitrary address at anytime by owner", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/59", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Vault assets can be migrated to an arbitrary address at anytime by owner"}, {"title": "Incorrect error strings used may cause confusion", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/58", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Incorrect error strings used may cause confusion"}, {"title": "Emergency disabling can only be done one stablecoin at a time", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/57", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Emergency disabling can only be done one stablecoin at a time"}, {"title": "Critical protocol parameter configuration/changes should have sanity/threshold checks", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Critical protocol parameter configuration/changes should have sanity/threshold checks"}, {"title": "Critical protocol parameter changes should have time-delayed enforcement", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/55", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Critical protocol parameter changes should have time-delayed enforcement"}, {"title": "Enabling preventSmartContracts may lead to lock/loss of funds", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-06-gro-findings", "body": "Enabling preventSmartContracts may lead to lock/loss of funds"}, {"title": "The use of tx.origin for smart contract safe list is risky and not generic", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/53", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "The use of tx.origin for smart contract safe list is risky and not generic"}, {"title": "Flash loan risk mitigation is optional and not robust enough", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/52", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Flash loan risk mitigation is optional and not robust enough"}, {"title": "Safe addresses can only be added but not removed", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/51", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Safe addresses can only be added but not removed"}, {"title": "Uninitialized vaults/addresses will lead to reverts", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Uninitialized vaults/addresses will lead to reverts"}, {"title": "Missing zero-address check and event parameter for _emergencyHandler", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/49", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Missing zero-address check and event parameter for _emergencyHandler"}, {"title": "Having only owner unpause/restart is risky", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/48", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Having only owner unpause/restart is risky"}, {"title": "Missing emits for declared events", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/47", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Missing emits for declared events"}, {"title": "Single-step process for critical ownership transfer is risky", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/46", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Single-step process for critical ownership transfer is risky"}, {"title": "Missing input validation on _feeToken in DepositHandler constructor and setFeeToken()", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "Missing input validation on _feeToken in DepositHandler constructor and setFeeToken()"}, {"title": "Simpler logic can save gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/44", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Simpler logic can save gas"}, {"title": "Removing unnecessary lpToken.balanceOf can save 4700+ gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Removing unnecessary lpToken.balanceOf can save 4700+ gas"}, {"title": "Removing redundant code can save gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Removing redundant code can save gas"}, {"title": "Removing unused return values can save gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Removing unused return values can save gas"}, {"title": "Removing unnecessary check can save gas in withdraw flow", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Removing unnecessary check can save gas in withdraw flow"}, {"title": "Changing function visibility from public to external/internal/private can save gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Changing function visibility from public to external/internal/private can save gas"}, {"title": "Moving logic to where required will save >=6800 gas on deposit/withdraw flows", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Moving logic to where required will save >=6800 gas on deposit/withdraw flows"}, {"title": "Unnecessary zero-address check", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/35", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Unnecessary zero-address check"}, {"title": "Removing unnecessary initializations can save gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Removing unnecessary initializations can save gas"}, {"title": "Rearranging order of state variable declarations to pack them will save storage slots and gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Rearranging order of state variable declarations to pack them will save storage slots and gas"}, {"title": "Simplifying logic will save at least 4200-11,500 gas in deposit flow", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Simplifying logic will save at least 4200-11,500 gas in deposit flow"}, {"title": "Caching repeatedly read state variables in local variables can save gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Caching repeatedly read state variables in local variables can save gas"}, {"title": "Using access lists can save gas due to EIP-2930 post-Berlin hard fork", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/30", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Using access lists can save gas due to EIP-2930 post-Berlin hard fork"}, {"title": "Avoid use of state variables in event emissions to save gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Avoid use of state variables in event emissions to save gas"}, {"title": "Upgrading the solc compiler to >=0.8 may save gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/28", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Upgrading the solc compiler to >=0.8 may save gas"}, {"title": "Unnecessary duplication of array", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Unnecessary duplication of array"}, {"title": "optimization uses extra gas", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/24", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "optimization uses extra gas"}, {"title": "BASIS_POINTS naming convention", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/23", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "BASIS_POINTS naming convention"}, {"title": "use safemath", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/22", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "use safemath"}, {"title": "calcProtocolExposureDelta could use a break", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/20", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "calcProtocolExposureDelta could use a break"}, {"title": "Unnecessary update of amount ", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "Unnecessary update of amount "}, {"title": "Easier way to determine strategiesLength ", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Easier way to determine strategiesLength "}, {"title": "initialize maxPercentForWithdraw and maxPercentForDeposit?", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/16", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "initialize maxPercentForWithdraw and maxPercentForDeposit?"}, {"title": "require comments don't all follow convention", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/14", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "require comments don't all follow convention"}, {"title": "Outdated comment at calculateWithdrawalAmountsOnPartVaults ", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/13", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "Outdated comment at calculateWithdrawalAmountsOnPartVaults "}, {"title": "redundant check of array length", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/12", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "redundant check of array length"}, {"title": "setUnderlyingTokenPercent should check percentages", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/11", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-06-gro-findings", "body": "setUnderlyingTokenPercent should check percentages"}, {"title": "setFeeToken doesn't check index", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "setFeeToken doesn't check index"}, {"title": "implicit assumptions about underlying coins", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/9", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "implicit assumptions about underlying coins"}, {"title": "hardcoded values", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "hardcoded values"}, {"title": "lastRatio of Buoy3Pool not initialized", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/7", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-06-gro-findings", "body": "lastRatio of Buoy3Pool not initialized"}, {"title": "implicit underflows", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/6", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "implicit underflows"}, {"title": "emergencyHandler not checked & not emitted", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/5", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-06-gro-findings", "body": "emergencyHandler not checked & not emitted"}, {"title": "sortVaultsByDelta doesn't work as expected", "html_url": "https://github.com/code-423n4/2021-06-gro-findings/issues/2", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-06-gro-findings", "body": "sortVaultsByDelta doesn't work as expected"}, {"title": "The interest rate is calculated based on assumptions on the block time", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/142", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "The interest rate is calculated based on assumptions on the block time"}, {"title": "Unimplemented methods in several interfaces", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/140", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Unimplemented methods in several interfaces"}, {"title": "Add a proper revert message in `transferFrom` of `LPTokenMaster`", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/138", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Add a proper revert message in `transferFrom` of `LPTokenMaster`"}, {"title": "Math.max can be used", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/133", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Math.max can be used"}, {"title": "Boolean to constant comparison", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/132", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Boolean to constant comparison"}, {"title": "typo in revert", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/131", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "typo in revert"}, {"title": "typo: totalAccountBorrrow", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/130", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "typo: totalAccountBorrrow"}, {"title": "Unused imported interface in LendingPair", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/128", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Unused imported interface in LendingPair"}, {"title": " Recommended", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/127", "labels": ["bug", "invalid", "disagree with severity", "sponsor disputed", "3 (High Risk)"], "target": "2021-07-wildcredit-findings", "body": " Recommended"}, {"title": "repayAll() and repayAllETH() vulnerable to frontrunning", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/125", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "repayAll() and repayAllETH() vulnerable to frontrunning"}, {"title": "`LendingPair.pendingSupplyInterest` is not accurate", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/124", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "`LendingPair.pendingSupplyInterest` is not accurate"}, {"title": "`LendingPair.liquidateAccount` fails if tokens are lent out", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/123", "labels": ["bug", "disagree with severity", "sponsor confirmed", "3 (High Risk)"], "target": "2021-07-wildcredit-findings", "body": "`LendingPair.liquidateAccount` fails if tokens are lent out"}, {"title": "`LendingPair.liquidateAccount` does not accrue and update cumulativeInterestRate", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/122", "labels": ["bug", "disagree with severity", "sponsor confirmed", "3 (High Risk)"], "target": "2021-07-wildcredit-findings", "body": "`LendingPair.liquidateAccount` does not accrue and update cumulativeInterestRate"}, {"title": "Simple interest formula is used", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/119", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Simple interest formula is used"}, {"title": "Uniswap oracle assumes PairToken <> WETH liquidity", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/118", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Uniswap oracle assumes PairToken <> WETH liquidity"}, {"title": "Reward computation is wrong", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/116", "labels": ["bug", "disagree with severity", "sponsor acknowledged", "3 (High Risk)"], "target": "2021-07-wildcredit-findings", "body": "Reward computation is wrong"}, {"title": "Total LP supply & total debt accrual is wrong", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/115", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Total LP supply & total debt accrual is wrong"}, {"title": "LPTokenMaster does not implement `IERC20`", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/113", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "LPTokenMaster does not implement `IERC20`"}, {"title": "Interest model is non-continuous", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/112", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Interest model is non-continuous"}, {"title": "Variables that can be converted into immutables", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/110", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Variables that can be converted into immutables"}, {"title": "when setting new value for feeRecepient/totalRewardPerBlock ensure that new value is different from old one", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/109", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "when setting new value for feeRecepient/totalRewardPerBlock ensure that new value is different from old one"}, {"title": "Lack of zero address validation", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/108", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Lack of zero address validation"}, {"title": "Packing of  variable in controller.sol", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/103", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Packing of  variable in controller.sol"}, {"title": "Migrate Rewards Without Distribution", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/102", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Migrate Rewards Without Distribution"}, {"title": "Use of Floating Pragma", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/99", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Use of Floating Pragma"}, {"title": "Erc20 Race condition for allowance", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/96", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor disputed"], "target": "2021-07-wildcredit-findings", "body": "Erc20 Race condition for allowance"}, {"title": "Rewards can be migrated to an arbitrary address at anytime by owner", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/93", "labels": ["bug", "invalid", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Rewards can be migrated to an arbitrary address at anytime by owner"}, {"title": "Critical protocol parameter configuration/changes should have sanity/threshold checks", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/85", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Critical protocol parameter configuration/changes should have sanity/threshold checks"}, {"title": "Single-step process for critical ownership transfers is risky", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/82", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Single-step process for critical ownership transfers is risky"}, {"title": "Gas optimizations - optimize reads in _distributeReward ", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/77", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Gas optimizations - optimize reads in _distributeReward "}, {"title": "Gas optimizations - Check first If blocksElapsed == 0 in _pendingRewardPerToken", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/76", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Gas optimizations - Check first If blocksElapsed == 0 in _pendingRewardPerToken"}, {"title": "Chainlink - Use latestRoundData instead latestAnswer to run more validations", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/75", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Chainlink - Use latestRoundData instead latestAnswer to run more validations"}, {"title": "Gas optimizations - Use bytesX instead of string", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/74", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "Gas optimizations - Use bytesX instead of string"}, {"title": "_wethWithdrawTo is vulnerable re-entrancy", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/71", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "_wethWithdrawTo is vulnerable re-entrancy"}, {"title": "setReward does not check if pid exists", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/70", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "setReward does not check if pid exists"}, {"title": "addPool emits PoolUpdate with wrong pid", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/68", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "addPool emits PoolUpdate with wrong pid"}, {"title": "safeTransferFrom in TransferHelper is not safeTransferFrom", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/67", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "safeTransferFrom in TransferHelper is not safeTransferFrom"}, {"title": "Code size exceed limit", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor disputed"], "target": "2021-07-wildcredit-findings", "body": "Code size exceed limit"}, {"title": "LendingPair: Missing validation check for ETH methods [Updated]", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "LendingPair: Missing validation check for ETH methods [Updated]"}, {"title": "LendingPair: Unnecessary Casting", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/59", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "LendingPair: Unnecessary Casting"}, {"title": "External call does not have amount check in TransferHelper", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/56", "labels": ["bug", "G (Gas Optimization)", "disagree with severity", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "External call does not have amount check in TransferHelper"}, {"title": "UniswapV3Oracle: Reduce minObservations to uint16", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "UniswapV3Oracle: Reduce minObservations to uint16"}, {"title": "UniswapV3Oracle: No events emitted for setUniPriceConverter, setTwapPeriod, setMinObservations", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/53", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "UniswapV3Oracle: No events emitted for setUniPriceConverter, setTwapPeriod, setMinObservations"}, {"title": "RewardDistribution: Optimise pendingSupplyReward, pendingBorrowReward, _distributeReward and _poolRewardRate", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "RewardDistribution: Optimise pendingSupplyReward, pendingBorrowReward, _distributeReward and _poolRewardRate"}, {"title": "RewardDistribution: Optimise _getPid", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "RewardDistribution: Optimise _getPid"}, {"title": "RewardDistribution: Redundant boolean flag check in _getPid()", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/48", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "RewardDistribution: Redundant boolean flag check in _getPid()"}, {"title": "RewardDistribution: Avoid 0 pid to drop boolean flag use", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/47", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "RewardDistribution: Avoid 0 pid to drop boolean flag use"}, {"title": "LPTokenMaster: underlying() \u2192 address underlyingToken", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/46", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "LPTokenMaster: underlying() \u2192 address underlyingToken"}, {"title": "LPTokenMaster: CEI Pattern", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "LPTokenMaster: CEI Pattern"}, {"title": "LendingPair: Optimise liquidation parameter calculations", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "LendingPair: Optimise liquidation parameter calculations"}, {"title": "LendingPair: Error Messages can be improved", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/40", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "LendingPair: Error Messages can be improved"}, {"title": "LendingPair: Cache token decimals", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "LendingPair: Cache token decimals"}, {"title": "LendingPair: Avoid rounding error in _accrueAccountSupply()", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/37", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "LendingPair: Avoid rounding error in _accrueAccountSupply()"}, {"title": "InterestRateModel: Use constant for 100e18", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/36", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "InterestRateModel: Use constant for 100e18"}, {"title": "InterestRateModel: Infallible logic", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/35", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-wildcredit-findings", "body": "InterestRateModel: Infallible logic"}, {"title": "difference between _safeTransferFrom and _safeTransfer", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/32", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "difference between _safeTransferFrom and _safeTransfer"}, {"title": "Use immutable keyword", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/28", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Use immutable keyword"}, {"title": "redundant call to _checkMinReserve in withdrawBorrowETH ", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "redundant call to _checkMinReserve in withdrawBorrowETH "}, {"title": "minBorrowUSD not initialized in the contract", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/25", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "minBorrowUSD not initialized in the contract"}, {"title": "No check of MAX_LIQ_FEES in contructor of Controller", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/24", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "No check of MAX_LIQ_FEES in contructor of Controller"}, {"title": "Undefined Event", "html_url": "https://github.com/code-423n4/2021-07-wildcredit-findings/issues/1", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-wildcredit-findings", "body": "Undefined Event"}, {"title": "Flash loan manipulation on `getPoolShareWeight` of `Utils`", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/238", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Flash loan manipulation on `getPoolShareWeight` of `Utils`"}, {"title": "Improper access control of `claimAllForMember` allows anyone to reduce the weight of a member", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/235", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Improper access control of `claimAllForMember` allows anyone to reduce the weight of a member"}, {"title": "Possible divide by zero errors in `Utils`", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/232", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Possible divide by zero errors in `Utils`"}, {"title": "Assuming `BEP20.name` of a token is implemented", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/226", "labels": ["bug", "invalid", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Assuming `BEP20.name` of a token is implemented"}, {"title": "Missing input validation in addLiquidityForMember()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/225", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Missing input validation in addLiquidityForMember()"}, {"title": "Loss of precision", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/224", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Loss of precision"}, {"title": "Missing input validation zapLiquidity()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/222", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Missing input validation zapLiquidity()"}, {"title": "Missing function setParams in Dao", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/220", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Missing function setParams in Dao"}, {"title": "state variable that can be declared as constant", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/219", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "state variable that can be declared as constant"}, {"title": "state variables that can be declared as immutable", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/217", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "state variables that can be declared as immutable"}, {"title": "Missing input validation in realise()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/216", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "Missing input validation in realise()"}, {"title": "Lack of emission of event when changing  dao fees", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/215", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Lack of emission of event when changing  dao fees"}, {"title": "Missing revert if denominator = 0", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/214", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Missing revert if denominator = 0"}, {"title": "lack of zero address validation for recipent in _transfer() of pool.sol, synth.sol", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/213", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "lack of zero address validation for recipent in _transfer() of pool.sol, synth.sol"}, {"title": "No checking of recipient address validation during low-level call", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/212", "labels": ["bug", "invalid", "0 (Non-critical)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "No checking of recipient address validation during low-level call"}, {"title": "Mismatch in event definition", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/210", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Mismatch in event definition"}, {"title": "[Pool] - Anyone can remove liquidity from Pools, allowing them to alter the price  ", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/206", "labels": ["bug", "invalid", "3 (High Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "[Pool] - Anyone can remove liquidity from Pools, allowing them to alter the price  "}, {"title": "Pool.burnSynth(address,address) is potentially reentrant", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/203", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Pool.burnSynth(address,address) is potentially reentrant"}, {"title": "Pool._addPoolMetrics(uint256) is subject to potential miner manipulation", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/201", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Pool._addPoolMetrics(uint256) is subject to potential miner manipulation"}, {"title": "DaoVault.constructor(address) is missing a zero address check", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/198", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "DaoVault.constructor(address) is missing a zero address check"}, {"title": "Router.revenueDetails(uint256,address) potentially vulnerable to miner manipulation", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/194", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Router.revenueDetails(uint256,address) potentially vulnerable to miner manipulation"}, {"title": "Dividend reward can be gamed", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/182", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Dividend reward can be gamed"}, {"title": "BondVault `BASE` incentive can be gamed", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/178", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "BondVault `BASE` incentive can be gamed"}, {"title": "Vote weight can be manipulated", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/176", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Vote weight can be manipulated"}, {"title": "BondVault fails if no SPARTA in DAO", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/175", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "BondVault fails if no SPARTA in DAO"}, {"title": "delisting bond assets does not remove from array", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/174", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "delisting bond assets does not remove from array"}, {"title": "DAO.setGenesisFactors sets wrong `erasToEarn`", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/173", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "DAO.setGenesisFactors sets wrong `erasToEarn`"}, {"title": "Missleading onlyDAO modifiers", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/172", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Missleading onlyDAO modifiers"}, {"title": "`calcAsymmetricValueToken` never used", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/170", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "`calcAsymmetricValueToken` never used"}, {"title": "SynthVault withdraw forfeits rewards", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/168", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "SynthVault withdraw forfeits rewards"}, {"title": "SynthVault deposit lockup bypass", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/167", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "SynthVault deposit lockup bypass"}, {"title": "SynthVault rewards can be gamed", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/166", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "SynthVault rewards can be gamed"}, {"title": "Unbounded iteration in Synth Vault", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/163", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "Unbounded iteration in Synth Vault"}, {"title": "Can accidentally lose tokens when removing liquidity from pool 2", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/161", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "Can accidentally lose tokens when removing liquidity from pool 2"}, {"title": "Synth: Can accidentally burn tokens by sending them to zero", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/159", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Synth: Can accidentally burn tokens by sending them to zero"}, {"title": "Pool: Can accidentally burn tokens by sending them to zero", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/158", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Pool: Can accidentally burn tokens by sending them to zero"}, {"title": "DAO approval amount too high for token", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/157", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "DAO approval amount too high for token"}, {"title": "DAO approval amount too high for BASE", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/156", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "DAO approval amount too high for BASE"}, {"title": "Synth: approveAndCall sets unnecessary approval", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/155", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Synth: approveAndCall sets unnecessary approval"}, {"title": "Pool: approveAndCall sets unnecessary approval", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/154", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Pool: approveAndCall sets unnecessary approval"}, {"title": "Pools can be created without initial liquidity", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/151", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Pools can be created without initial liquidity"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/147", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "Missing parameter validation"}, {"title": "Variable one in Utils.sol can be set to constant  ", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/146", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Variable one in Utils.sol can be set to constant  "}, {"title": "Function purgeDeployer() should be declared external in BondVault.sol", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/145", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Function purgeDeployer() should be declared external in BondVault.sol"}, {"title": "Missing zero address check on BondVault constructor", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/144", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Missing zero address check on BondVault constructor"}, {"title": "Strict equality used in claimForMemeber()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/143", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "Strict equality used in claimForMemeber()"}, {"title": "Missing check for already curated pool being re-curated", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/137", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Missing check for already curated pool being re-curated"}, {"title": "Missing check for token type/decimals in createPool", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/136", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Missing check for token type/decimals in createPool"}, {"title": "Incorrect event parameter logs zero address instead of WBNB", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/135", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Incorrect event parameter logs zero address instead of WBNB"}, {"title": "Number of curated pools can only be 10 at any point", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/134", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Number of curated pools can only be 10 at any point"}, {"title": "Members lose SPARTA tokens in removeLiquiditySingle()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/133", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Members lose SPARTA tokens in removeLiquiditySingle()"}, {"title": "Potential reentrancy may lead to unexpected behavior", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/132", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Potential reentrancy may lead to unexpected behavior"}, {"title": "Lack of require() allows control flow to proceed leading to undefined behavior", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/131", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Lack of require() allows control flow to proceed leading to undefined behavior"}, {"title": "Missing isListedPool checks may lead to lock/loss of user funds", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/130", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Missing isListedPool checks may lead to lock/loss of user funds"}, {"title": "Unnecessary redundant check for basisPoints", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/129", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Unnecessary redundant check for basisPoints"}, {"title": "Unused _token potentially indicates missing logic or is dead code", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/128", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Unused _token potentially indicates missing logic or is dead code"}, {"title": "Missing check for toPool != fromPool", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/127", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Missing check for toPool != fromPool"}, {"title": "receive() function in Router allows locking of accidentally sent user\u2019s BNB", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/126", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "receive() function in Router allows locking of accidentally sent user\u2019s BNB"}, {"title": "Duplicated functionality in two functions is a maintainability risk", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/125", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Duplicated functionality in two functions is a maintainability risk"}, {"title": "isMember and arrayMembers are only added to but never removed from", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/122", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "isMember and arrayMembers are only added to but never removed from"}, {"title": "Attacker can trigger pool sync leading to user fund loss", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/120", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Attacker can trigger pool sync leading to user fund loss"}, {"title": "Incorrect event parameter used in emit", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/119", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Incorrect event parameter used in emit"}, {"title": "Missing zero-address check on recipient address in transfer", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/117", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "Missing zero-address check on recipient address in transfer"}, {"title": "withdraw() not defined (Router.sol#217)", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/110", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "withdraw() not defined (Router.sol#217)"}, {"title": "Old DAO continues to exist/function even after moving to a new DAO", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/107", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Old DAO continues to exist/function even after moving to a new DAO"}]