[{"title": "Unnecessary imports", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/50", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "disagree with severity", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Unnecessary imports"}, {"title": "Less than 256 uints are not efficient", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-pooltogether-findings", "body": "Less than 256 uints are not efficient"}, {"title": "function _getPrizeSplitAmount can be refactored", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/48", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "function _getPrizeSplitAmount can be refactored"}, {"title": "Immutable variables", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/47", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Immutable variables"}, {"title": "staticcall may return true for an invalid _yieldSource", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/45", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "staticcall may return true for an invalid _yieldSource"}, {"title": "calculateNextBeaconPeriodStartTime casts timestamp to uint64", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/44", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "calculateNextBeaconPeriodStartTime casts timestamp to uint64"}, {"title": "Unnecessary Addition In Loop (PrizeDistributionBuffer.sol)", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-pooltogether-findings", "body": "Unnecessary Addition In Loop (PrizeDistributionBuffer.sol)"}, {"title": "`PrizeDistributor.sol#claim()` Remove redundant check can save gas", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "resolved"], "target": "2021-10-pooltogether-findings", "body": "`PrizeDistributor.sol#claim()` Remove redundant check can save gas"}, {"title": "`PrizeSplit.sol#_totalPrizeSplitPercentageAmount()` Avoid unnecessary copy from storage to memory can save gas", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/40", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "`PrizeSplit.sol#_totalPrizeSplitPercentageAmount()` Avoid unnecessary copy from storage to memory can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Adding unchecked directive can save gas"}, {"title": "`PrizePool.sol#_canDeposit()` Remove redundant code can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "`PrizePool.sol#_canDeposit()` Remove redundant code can make the code simpler and save some gas"}, {"title": "`PrizePool.sol#setTicket()` Remove unnecessary variable can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "`PrizePool.sol#setTicket()` Remove unnecessary variable can make the code simpler and save some gas"}, {"title": "`PrizeSplit.sol#distribute()` The value of the event parameter is wrong", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "`PrizeSplit.sol#distribute()` The value of the event parameter is wrong"}, {"title": "The formula of number of prizes for a degree is wrong", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/33", "labels": ["bug", "sponsor confirmed", "3 (High Risk)", "resolved"], "target": "2021-10-pooltogether-findings", "body": "The formula of number of prizes for a degree is wrong"}, {"title": "Deposits don't work with fee-on transfer tokens", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/30", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-pooltogether-findings", "body": "Deposits don't work with fee-on transfer tokens"}, {"title": "Gas: `PrizePool.captureAwardBalance` computation can be simplified", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Gas: `PrizePool.captureAwardBalance` computation can be simplified"}, {"title": "`PrizePool` uses `ERC20` for `ERC721`", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "`PrizePool` uses `ERC20` for `ERC721`"}, {"title": "Reserve does not correctly implement RingBuffer", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/26", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Reserve does not correctly implement RingBuffer"}, {"title": "Anyone can claim prizes on behalf of someone", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/25", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-pooltogether-findings", "body": "Anyone can claim prizes on behalf of someone"}, {"title": "Unbounded iteration over picks when `claim`ing draws", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/24", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-10-pooltogether-findings", "body": "Unbounded iteration over picks when `claim`ing draws"}, {"title": "Wrong comment regarding decimal precision of `_calculatePrizeTierFraction`", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/22", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Wrong comment regarding decimal precision of `_calculatePrizeTierFraction`"}, {"title": "Gas: Bitmasks creation can be simplified", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Gas: Bitmasks creation can be simplified"}, {"title": "Gas: Default case of `_calculateTierIndex` can return `0`", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/20", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Gas: Default case of `_calculateTierIndex` can return `0`"}, {"title": "Should `safeApprove(0)` first", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/19", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-pooltogether-findings", "body": "Should `safeApprove(0)` first"}, {"title": "Usage of deprecated `safeApprove`", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/18", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Usage of deprecated `safeApprove`"}, {"title": "PrizeSplit uint8 limits", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/17", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "PrizeSplit uint8 limits"}, {"title": "Gas improvement _transferTwab", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/16", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Gas improvement _transferTwab"}, {"title": "Unnecessary Multiple Return Statements (PrizePool.sol)", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/15", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Unnecessary Multiple Return Statements (PrizePool.sol)"}, {"title": "double reading from memory inside a for loop.", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/11", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "double reading from memory inside a for loop."}, {"title": "No need to put ReentrnacyGaurd on PrizePool.constructor.", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/10", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-pooltogether-findings", "body": "No need to put ReentrnacyGaurd on PrizePool.constructor."}, {"title": "++i is more gas efficient than i++ for loops.", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-pooltogether-findings", "body": "++i is more gas efficient than i++ for loops."}, {"title": "PrizePoolHarness._supply -a return without specifying return value", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/1", "labels": ["bug", "sponsor disputed", "0 (Non-critical)", "disagree with severity"], "target": "2021-10-pooltogether-findings", "body": "PrizePoolHarness._supply -a return without specifying return value"}, {"title": "Limit on growth size of pool - bond size", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/275", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-defiprotocol-findings", "body": "Limit on growth size of pool - bond size"}, {"title": "No input validation on parameter changes", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/274", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "No input validation on parameter changes"}, {"title": "Unnecessary require check", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/273", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Unnecessary require check"}, {"title": "block.timestamp is a better timer than block.number", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/271", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "block.timestamp is a better timer than block.number"}, {"title": "Add nonreentrant modifiers to external methods in 2 files", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/270", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Add nonreentrant modifiers to external methods in 2 files"}, {"title": "Owner can steal all Basket funds during auction", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/265", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Owner can steal all Basket funds during auction"}, {"title": "`handleFees` reverts if supply is zero", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/264", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "`handleFees` reverts if supply is zero"}, {"title": "Event BasketLicenseProposed needs an idNumber", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/263", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Event BasketLicenseProposed needs an idNumber"}, {"title": "`bondTimestamp` is not a timestamp but a blocknumber", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/261", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "`bondTimestamp` is not a timestamp but a blocknumber"}, {"title": "Lack of revert messages", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/258", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Lack of revert messages"}, {"title": "`mintTo` arguments order", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/257", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "`mintTo` arguments order"}, {"title": "Same tokens added to bounty", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/253", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Same tokens added to bounty"}, {"title": "pack structs *3", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/252", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "pack structs *3"}, {"title": "Naming", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/250", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Naming"}, {"title": "`burn` and `mintTo` in `Basket.sol` vulnerable to reentrancy", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/248", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "`burn` and `mintTo` in `Basket.sol` vulnerable to reentrancy"}, {"title": "Unecessary transfer trips", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/245", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Unecessary transfer trips"}, {"title": "Auction multiplier set to zero", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/242", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Auction multiplier set to zero"}, {"title": "Set functions to external.", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/240", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Set functions to external."}, {"title": "Gas optimation proposal struct", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/238", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Gas optimation proposal struct"}, {"title": "Gas saving: pack struct", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/237", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-09-defiprotocol-findings", "body": "Gas saving: pack struct"}, {"title": "Fee on transfer tokens can lead to incorrect approval", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/236", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Fee on transfer tokens can lead to incorrect approval"}, {"title": "Proposals can never get created due to reaching `block.gaslimit`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/235", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Proposals can never get created due to reaching `block.gaslimit`"}, {"title": "Sanity checks when the contract parameters are updated", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/234", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Sanity checks when the contract parameters are updated"}, {"title": "The increment in for loop post condition can be made unchecked", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/232", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "The increment in for loop post condition can be made unchecked"}, {"title": "Replace `tokenList.length` by existing variable `length`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/230", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Replace `tokenList.length` by existing variable `length`"}, {"title": "Use `calldata` instead of `memory` for function parameters", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/229", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Use `calldata` instead of `memory` for function parameters"}, {"title": "Gas: Can save an sload in `changeLicenseFee`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/228", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Gas: Can save an sload in `changeLicenseFee`"}, {"title": "Gas: Can save an sload in `changePublisher`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/227", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Gas: Can save an sload in `changePublisher`"}, {"title": "Gas: Factory parameter can be removed from Auction", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/225", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Gas: Factory parameter can be removed from Auction"}, {"title": "`newIbRatio` update math depends on how often it's called", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/224", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "`newIbRatio` update math depends on how often it's called"}, {"title": "Re-entrancy in `settleAuction` allow stealing all funds", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/223", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Re-entrancy in `settleAuction` allow stealing all funds"}, {"title": "Setting wrong publisher cannot be undone", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/222", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Setting wrong publisher cannot be undone"}, {"title": "Re-entrancy in `Factory.createBasket`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/219", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Re-entrancy in `Factory.createBasket`"}, {"title": "Wrong constant for `ONE_DAY`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/218", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Wrong constant for `ONE_DAY`"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/217", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Style issues"}, {"title": "Eliminate hasBonded", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/216", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Eliminate hasBonded"}, {"title": "newIbRatio is not really useful", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/215", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "newIbRatio is not really useful"}, {"title": "Mint fees can be simplified", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/214", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Mint fees can be simplified"}, {"title": "Dead code", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/211", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Dead code"}, {"title": "Double division by BASE", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/210", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Double division by BASE"}, {"title": "Check the actual amounts transferred", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/206", "labels": ["bug", "duplicate", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Check the actual amounts transferred"}, {"title": "emit NewIBRatio in function initialize", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/205", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "emit NewIBRatio in function initialize"}, {"title": "Hardcoding numbers is error-prone", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/203", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Hardcoding numbers is error-prone"}, {"title": "Inconvenient to find bounty ids", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/202", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Inconvenient to find bounty ids"}, {"title": "licenseFee state variable not checked for maximum value (Basket.sol)", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/200", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "licenseFee state variable not checked for maximum value (Basket.sol)"}, {"title": "redundant code (unused variables)", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/198", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "redundant code (unused variables)"}, {"title": "Use safeTransfer instead of transfer", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/196", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Use safeTransfer instead of transfer"}, {"title": "block timestamp manipulation can cause fees change", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/195", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "block timestamp manipulation can cause fees change"}, {"title": "Lack of Event Logging and Input Validation", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/193", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Lack of Event Logging and Input Validation"}, {"title": "`onlyOwner` Role Can Unintentionally Influence `settleAuction()`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/192", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "`onlyOwner` Role Can Unintentionally Influence `settleAuction()`"}, {"title": "Max approvals are risky if contract is malicious/compromised\u2028", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/191", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Max approvals are risky if contract is malicious/compromised\u2028"}, {"title": "Recognize the risk of using approve", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/190", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Recognize the risk of using approve"}, {"title": "Resetting partial struct fields is risky", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/189", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Resetting partial struct fields is risky"}, {"title": "2-step change of publisher address and licenseFee does not generate warning event\u2028", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/188", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "2-step change of publisher address and licenseFee does not generate warning event\u2028"}, {"title": " Incorrectly used new publisher and new licenseFee cannot be changed", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/186", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": " Incorrectly used new publisher and new licenseFee cannot be changed"}, {"title": "Publisher role cannot be renounced", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/185", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Publisher role cannot be renounced"}, {"title": "Using the latest compiler version may be susceptible to undiscovered bugs", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/180", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-defiprotocol-findings", "body": "Using the latest compiler version may be susceptible to undiscovered bugs"}, {"title": "Missing emission of basket ID and token composition", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/178", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Missing emission of basket ID and token composition"}, {"title": "Missing support for (preventing) use of deflationary tokens in baskets", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/177", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Missing support for (preventing) use of deflationary tokens in baskets"}, {"title": "Risk of duplicate/scam basket token names/symbols may trick users", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/176", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Risk of duplicate/scam basket token names/symbols may trick users"}, {"title": "Hardcoded constants are risky", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/174", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Hardcoded constants are risky"}, {"title": "Missing sanity/threshold checks on critical contract parameter initializations", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/173", "labels": ["bug", "1 (Low Risk)"], "target": "2021-09-defiprotocol-findings", "body": "Missing sanity/threshold checks on critical contract parameter initializations"}, {"title": "Missing timelocks for critical protocol parameter setters by owner\u2028", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/172", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Missing timelocks for critical protocol parameter setters by owner\u2028"}, {"title": "Missing events for critical protocol parameter setters by owner", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/171", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Missing events for critical protocol parameter setters by owner"}, {"title": "Lack of indexed event parameters will affect offchain monitoring", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/169", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Lack of indexed event parameters will affect offchain monitoring"}, {"title": "Incorrect data location specifier can be abused to cause DoS and fund loss", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/168", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Incorrect data location specifier can be abused to cause DoS and fund loss"}, {"title": "Bounty list is never pruned to remove inactive bounties", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/165", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Bounty list is never pruned to remove inactive bounties"}, {"title": "Missing interfaces to determine available bounties", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/164", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Missing interfaces to determine available bounties"}, {"title": "Event params are of no practical value", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/163", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Event params are of no practical value"}, {"title": "Malicious tokens can execute arbitrary code", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/162", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Malicious tokens can execute arbitrary code"}, {"title": "Gas Optimization Wrt. Token Uniqueness", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/160", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Gas Optimization Wrt. Token Uniqueness"}, {"title": "Missing check for auctionOngoing is risky", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/157", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Missing check for auctionOngoing is risky"}, {"title": "Unused constant", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/156", "labels": ["bug", "G (Gas Optimization)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Unused constant"}, {"title": "Choose either explicit return or named return, not both", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/154", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Choose either explicit return or named return, not both"}, {"title": "Avoiding unnecessary return can save gas", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/153", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Avoiding unnecessary return can save gas"}, {"title": "Loop can be skipped for i == 0", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/151", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Loop can be skipped for i == 0"}, {"title": "Unnecessary initialization of loop index variable", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/150", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Unnecessary initialization of loop index variable"}, {"title": "Using delete to clear variables instead of zero assignment\u2028", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/149", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Using delete to clear variables instead of zero assignment\u2028"}, {"title": "Caching return values of external calls in local/memory variables avoids CALLs to save gas\u2028", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/147", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Caching return values of external calls in local/memory variables avoids CALLs to save gas\u2028"}, {"title": "Caching state variables in local/memory variables avoids SLOADs to save gas", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/145", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Caching state variables in local/memory variables avoids SLOADs to save gas"}, {"title": "Avoiding state variables in emits saves gas\u2028", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/143", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Avoiding state variables in emits saves gas\u2028"}, {"title": "Lack of guarded launch approach may be risky", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/139", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Lack of guarded launch approach may be risky"}, {"title": "`Auction.sol#initialize()` Use msg.sender rather than factory_ parameter can save gas", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/137", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "`Auction.sol#initialize()` Use msg.sender rather than factory_ parameter can save gas"}, {"title": "`Auction.sol#settleAuction()` Mishandling bounty state could potentially disrupt `settleAuction()`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/136", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "`Auction.sol#settleAuction()` Mishandling bounty state could potentially disrupt `settleAuction()`"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/135", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Adding unchecked directive can save gas"}, {"title": "`Basket.sol#auctionBurn()` A failed auction will freeze part of the funds", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/134", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "`Basket.sol#auctionBurn()` A failed auction will freeze part of the funds"}, {"title": "Fee calculation is potentially incorrect", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/129", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Fee calculation is potentially incorrect"}, {"title": " Protocol owner fee limit not verified correctly (Factory.sol)", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/127", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": " Protocol owner fee limit not verified correctly (Factory.sol)"}, {"title": "Settle Time Limit not set correctly (Auction.sol)", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/126", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-defiprotocol-findings", "body": "Settle Time Limit not set correctly (Auction.sol)"}, {"title": "Variable assignment has no effect", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/124", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Variable assignment has no effect"}, {"title": "Timelocked functions doesn't emit proposal events", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/123", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Timelocked functions doesn't emit proposal events"}, {"title": "Timelock period may be less than 24 hours because it depends on `block.number` instead of `block.timestamp`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/122", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Timelock period may be less than 24 hours because it depends on `block.number` instead of `block.timestamp`"}, {"title": "lack of checks in `Factory::setBondPercentDiv` allow owner to prevent bonding in Auction::bondForRebalance()", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/121", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "lack of checks in `Factory::setBondPercentDiv` allow owner to prevent bonding in Auction::bondForRebalance()"}, {"title": "lack of checks in Factory.setAuctionMultiplier", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/120", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "lack of checks in Factory.setAuctionMultiplier"}, {"title": "Factory.sol - lack of checks in `setAuctionDecrement` will cause reverts in Auction::settleAuction()", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/119", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Factory.sol - lack of checks in `setAuctionDecrement` will cause reverts in Auction::settleAuction()"}, {"title": "Factory.sol - lack of checks for setMinLicenseFee", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/118", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Factory.sol - lack of checks for setMinLicenseFee"}, {"title": "specs not according to the docs", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/115", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "specs not according to the docs"}, {"title": "use of approve() instead of safeApprove()", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/114", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "use of approve() instead of safeApprove()"}, {"title": "lack of checking of array length", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/111", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "lack of checking of array length"}, {"title": "Packing storage variables in Auction would save gas", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/109", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Packing storage variables in Auction would save gas"}, {"title": "settleAuction should be external and arguments should use calldata", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/108", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "settleAuction should be external and arguments should use calldata"}, {"title": "licenseFee can be greater than BASE", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/104", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "licenseFee can be greater than BASE"}, {"title": "tokensNeeded can potentially be 0", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/101", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "tokensNeeded can potentially be 0"}, {"title": "Suggestion for incentive alignment", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/99", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Suggestion for incentive alignment"}, {"title": "Misleading variable names", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/98", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Misleading variable names"}, {"title": "Use CEI pattern to align w/ best practices", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/97", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Use CEI pattern to align w/ best practices"}, {"title": "Only validateWeights when it is needed", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Only validateWeights when it is needed"}, {"title": "set lastFee in initialize() function", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/94", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "set lastFee in initialize() function"}, {"title": "Transfer tokens directly to the basket", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/92", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Transfer tokens directly to the basket"}, {"title": "`Auction.sol#settleAuction()` late auction bond could potentially not being able to be settled, cause funds loss to bonder", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/90", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "`Auction.sol#settleAuction()` late auction bond could potentially not being able to be settled, cause funds loss to bonder"}, {"title": "`Factory.sol` Lack of two-step procedure and/or input validation routines for critical operations leaves them error-prone", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/89", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "`Factory.sol` Lack of two-step procedure and/or input validation routines for critical operations leaves them error-prone"}, {"title": "Missing Zero-Address Checks", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/86", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Missing Zero-Address Checks"}, {"title": "Redundant Balance Check", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/85", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Redundant Balance Check"}, {"title": "Lack of zero ratio validation", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/83", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Lack of zero ratio validation"}, {"title": "`Auction.sol#settleAuction()` addBounty with a fake token could potentially disrupt `settleAuction()`", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/82", "labels": ["bug", "1 (Low Risk)"], "target": "2021-09-defiprotocol-findings", "body": "`Auction.sol#settleAuction()` addBounty with a fake token could potentially disrupt `settleAuction()`"}, {"title": "User can mint miniscule amount of shares, later withdraw miniscule more than deposited", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/81", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "User can mint miniscule amount of shares, later withdraw miniscule more than deposited"}, {"title": "`Auction.sol#bondTimestamp` Misleading name", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/80", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "`Auction.sol#bondTimestamp` Misleading name"}, {"title": "`Basket.sol#handleFees()` could potentially cause disruption of minting and burning", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/79", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "`Basket.sol#handleFees()` could potentially cause disruption of minting and burning"}, {"title": "Use calldata instead of memory in function parameter declarations", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/75", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Use calldata instead of memory in function parameter declarations"}, {"title": "Not handling approve return value", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/73", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Not handling approve return value"}, {"title": "`proposal` declared as both a function and a Proposal in Factory", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "`proposal` declared as both a function and a Proposal in Factory"}, {"title": "Use of uint rather than uint256", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/69", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Use of uint rather than uint256"}, {"title": "Code lacking comments/spec", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/68", "labels": ["bug", "0 (Non-critical)", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Code lacking comments/spec"}, {"title": "Bonding mechanism allows malicious user to DOS auctions", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/66", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Bonding mechanism allows malicious user to DOS auctions"}, {"title": "Basket becomes unusable if everybody burns their shares", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/64", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Basket becomes unusable if everybody burns their shares"}, {"title": "Basket will break and lock all user funds if not used in 100 years", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/63", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Basket will break and lock all user funds if not used in 100 years"}, {"title": "Missing Transfer Ownership Pattern", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/62", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Missing Transfer Ownership Pattern"}, {"title": "Inaccurate log emitted at deleteNewIndex", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/58", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Inaccurate log emitted at deleteNewIndex"}, {"title": "BLOCK_DECREMENT not used", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/57", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "BLOCK_DECREMENT not used"}, {"title": "Scoop ERC20 tokens from basket contract", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/56", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Scoop ERC20 tokens from basket contract"}, {"title": "malicious tokens could be added with addBounty", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "malicious tokens could be added with addBounty"}, {"title": "handleFees() only mint when necessary", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/53", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "handleFees() only mint when necessary"}, {"title": "handleFees() will revert if licenseFee is too high", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/52", "labels": ["bug", "1 (Low Risk)"], "target": "2021-09-defiprotocol-findings", "body": "handleFees() will revert if licenseFee is too high"}, {"title": "More readable constants", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/51", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "More readable constants"}, {"title": "initialize of Basket.sol is missing initializer ", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/50", "labels": ["bug", "duplicate", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "initialize of Basket.sol is missing initializer "}, {"title": "Auction settler can steal user funds if bond timestamp is high enough", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/45", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Auction settler can steal user funds if bond timestamp is high enough"}, {"title": "Redundant call to external contract, result can be saved", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Redundant call to external contract, result can be saved"}, {"title": "No minimum rate in the auction may break the protocol under network failure", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/42", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "No minimum rate in the auction may break the protocol under network failure"}, {"title": " settleAuction may be impossible if locked at a wrong time.", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/41", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": " settleAuction may be impossible if locked at a wrong time."}, {"title": "Restore state to 0 if not needed anymore", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/40", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Restore state to 0 if not needed anymore"}, {"title": "Unnecessary initializing of variable to 0", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Unnecessary initializing of variable to 0"}, {"title": "Unsafe approve would halt the auction and burn the bond", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/35", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-09-defiprotocol-findings", "body": "Unsafe approve would halt the auction and burn the bond"}, {"title": "Reentrancy in settleAuction(): malicious publisher can bypass index timelock mechanism, inject malicious index, and rug the basket", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/31", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Reentrancy in settleAuction(): malicious publisher can bypass index timelock mechanism, inject malicious index, and rug the basket"}, {"title": "Cannot change pending while timelocked", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/30", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Cannot change pending while timelocked"}, {"title": "DAO is fee recipient / cannot revoke owner", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/27", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "DAO is fee recipient / cannot revoke owner"}, {"title": "Global bounties variable and 0 bounty allow dos in bounty functionality of basket", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/25", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Global bounties variable and 0 bounty allow dos in bounty functionality of basket"}, {"title": "Zero weighted baskets are allowed to steal funds", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/21", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Zero weighted baskets are allowed to steal funds"}, {"title": "Require statement can be moved to start of function", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Require statement can be moved to start of function"}, {"title": "Uninitialized Implementation Contracts", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/18", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Uninitialized Implementation Contracts"}, {"title": "Events not emitted for parameter changes ", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Events not emitted for parameter changes "}, {"title": "Runtime constants not defined as immutable", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/15", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Runtime constants not defined as immutable"}, {"title": "Some variables type should be changed ", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/7", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Some variables type should be changed "}, {"title": "Lack of input validation in initialize function of Basket.sol ", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/5", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Lack of input validation in initialize function of Basket.sol "}, {"title": "Gas Saving by changing the visibility of initialize function from public to externa in basket.sol", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/4", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-defiprotocol-findings", "body": "Gas Saving by changing the visibility of initialize function from public to externa in basket.sol"}, {"title": "initialize function in basket.sol can be front-run", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/3", "labels": ["bug", "1 (Low Risk)"], "target": "2021-09-defiprotocol-findings", "body": "initialize function in basket.sol can be front-run"}, {"title": "Lack of input validation in  initialize function of  Auction.sol", "html_url": "https://github.com/code-423n4/2021-09-defiprotocol-findings/issues/1", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-09-defiprotocol-findings", "body": "Lack of input validation in  initialize function of  Auction.sol"}, {"title": "Sanity check on the lower and upper ticks", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/93", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Sanity check on the lower and upper ticks"}, {"title": "Incorrect comparison in the `_updatePosition` of `ConcentratedLiquidityPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/91", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Incorrect comparison in the `_updatePosition` of `ConcentratedLiquidityPool`"}, {"title": "Timestamp underflow error in `swap` function of `ConcentratedLiquidityPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/90", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Timestamp underflow error in `swap` function of `ConcentratedLiquidityPool`"}, {"title": "Users cannot receive rewards from `ConcentratedLiquidityPoolManager` if their liquidity is too large", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/88", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Users cannot receive rewards from `ConcentratedLiquidityPoolManager` if their liquidity is too large"}, {"title": "Wrong usage of `positionId` in `ConcentratedLiquidityPoolManager`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/86", "labels": ["bug", "duplicate", "3 (High Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "Wrong usage of `positionId` in `ConcentratedLiquidityPoolManager`"}, {"title": "Overflow in the `mint` function of `ConcentratedLiquidityPool` causes LPs' funds to be stolen", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/84", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "Overflow in the `mint` function of `ConcentratedLiquidityPool` causes LPs' funds to be stolen"}, {"title": "Incorrect usage of typecasting in `_getAmountsForLiquidity` lets an attacker steal funds from the pool", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/83", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Incorrect usage of typecasting in `_getAmountsForLiquidity` lets an attacker steal funds from the pool"}, {"title": "`incentiveId <= incentiveCount[pool]` is bad and can be removed", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/79", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`incentiveId <= incentiveCount[pool]` is bad and can be removed"}, {"title": "`subscribe` can be called by anyone", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/77", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "`subscribe` can be called by anyone"}, {"title": "`addIncentive` may need more inputs checked", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/76", "labels": ["bug", "duplicate", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "`addIncentive` may need more inputs checked"}, {"title": "`addIncentive` and `reclaimIncentive` can be external", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/75", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`addIncentive` and `reclaimIncentive` can be external"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/74", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Style issues"}, {"title": "Useless state variable wETH", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Useless state variable wETH"}, {"title": "Unused import", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Unused import"}, {"title": "Boundaries for timestamp values", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Boundaries for timestamp values"}, {"title": "Handle of deflationary tokens", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Handle of deflationary tokens"}, {"title": "uint32 for timestamps", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/63", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "uint32 for timestamps"}, {"title": "Inclusive conditions", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/62", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "Inclusive conditions"}, {"title": "_burn should decrement totalSupply", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/60", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "_burn should decrement totalSupply"}, {"title": "Replace hex numbers with .selector", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/58", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Replace hex numbers with .selector"}, {"title": "Struct could be optimized for saving gas", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/57", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Struct could be optimized for saving gas"}, {"title": "Cache storage variables in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/56", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Cache storage variables in the stack can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/55", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Adding unchecked directive can save gas"}, {"title": "`ConcentratedLiquidityPoolManager.sol#reclaimIncentive` Misleading error message", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/54", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`ConcentratedLiquidityPoolManager.sol#reclaimIncentive` Misleading error message"}, {"title": "`ConcentratedLiquidityPosition.sol#collect()` Users may get double the amount of yield when they call `collect()` before `burn()`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/53", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`ConcentratedLiquidityPosition.sol#collect()` Users may get double the amount of yield when they call `collect()` before `burn()`"}, {"title": "`ConcentratedLiquidityPosition.sol#burn()` Wrong implementation allows attackers to steal yield", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/52", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`ConcentratedLiquidityPosition.sol#burn()` Wrong implementation allows attackers to steal yield"}, {"title": "Burning does not update reserves", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/51", "labels": ["bug", "duplicate", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Burning does not update reserves"}, {"title": "Unsafe cast in ConcentratedLiquidityPool burn leads to attack", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/50", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Unsafe cast in ConcentratedLiquidityPool burn leads to attack"}, {"title": "Gas: `ConcentratedLiquidityPoolManager.addIncentive` ", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Gas: `ConcentratedLiquidityPoolManager.addIncentive` "}, {"title": "`TridentNFT` signature malleability", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/48", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "`TridentNFT` signature malleability"}, {"title": "`TridentNFT.safeTransferFrom` now EIP-721 compliant", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/47", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "`TridentNFT.safeTransferFrom` now EIP-721 compliant"}, {"title": "`TridentNFT._mint` can mint to zero address", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/46", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "`TridentNFT._mint` can mint to zero address"}, {"title": "`TridentNFT.permitAll` prviliges discrepancy for operator", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/45", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`TridentNFT.permitAll` prviliges discrepancy for operator"}, {"title": "`TridentNFT.permit` should always check `recoveredAddress != 0`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/44", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`TridentNFT.permit` should always check `recoveredAddress != 0`"}, {"title": "`TridentNFT` ignores `from`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/43", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "`TridentNFT` ignores `from`"}, {"title": "Incentive should check that it hasn't started yet", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/42", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Incentive should check that it hasn't started yet"}, {"title": "Cannot claim reward", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/41", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Cannot claim reward"}, {"title": "Wrong inequality when trying to subscribe to an incentive", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/40", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "Wrong inequality when trying to subscribe to an incentive"}, {"title": "`ConcentratedLiquidityPoolManager`'s incentives can be stolen", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/37", "labels": ["bug", "duplicate", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`ConcentratedLiquidityPoolManager`'s incentives can be stolen"}, {"title": "Wrong inequality when adding/removing liquidity in current price range", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/34", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Wrong inequality when adding/removing liquidity in current price range"}, {"title": "`ConcentratedLiquidityPool`s can be created with the same tokens", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/33", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`ConcentratedLiquidityPool`s can be created with the same tokens"}, {"title": "`ConcentratedLiquidityPool.Sync` event never used", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/32", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "`ConcentratedLiquidityPool.Sync` event never used"}, {"title": "`Ticks.cross` wrong comment?", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/31", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "`Ticks.cross` wrong comment?"}, {"title": "`DyDxMath.getLiquidityForAmounts` underflows", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/30", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`DyDxMath.getLiquidityForAmounts` underflows"}, {"title": " No sanity check of `_price` in the constructor", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": " No sanity check of `_price` in the constructor"}, {"title": "range fee growth underflow", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/25", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "range fee growth underflow"}, {"title": "`ConcentratedLiquidityPool.burn()` Wrong implementation", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/24", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "`ConcentratedLiquidityPool.burn()` Wrong implementation"}, {"title": "ConcentratedLiquidityPoolManager.sol#claimReward() and reclaimIncentive() will fail when incentive.token is token0 or token1", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/23", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "ConcentratedLiquidityPoolManager.sol#claimReward() and reclaimIncentive() will fail when incentive.token is token0 or token1"}, {"title": "Spelling Errors", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/22", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "Spelling Errors"}, {"title": "Ticks: getMaxLiquidity() formula should be explained", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/21", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Ticks: getMaxLiquidity() formula should be explained"}, {"title": "ConcentratedLiquidityPoolHelper: getTickState() might run out of gas", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/17", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "ConcentratedLiquidityPoolHelper: getTickState() might run out of gas"}, {"title": "ConcentratedLiquidityPool: incorrect feeGrowthGlobal accounting when crossing ticks", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/16", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "ConcentratedLiquidityPool: incorrect feeGrowthGlobal accounting when crossing ticks"}, {"title": "ConcentratedLiquidityPool: secondsPerLiquidity should be modified whenever pool liquidity changes", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/15", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "ConcentratedLiquidityPool: secondsPerLiquidity should be modified whenever pool liquidity changes"}, {"title": "ConcentratedLiquidityPool: rangeFeeGrowth and secondsPerLiquidity math needs to be unchecked", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/13", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "ConcentratedLiquidityPool: rangeFeeGrowth and secondsPerLiquidity math needs to be unchecked"}, {"title": "ConcentratedLiquidityPool: MAX_TICK_LIQUIDITY is checked incorrectly", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/12", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushitrident-2-findings", "body": "ConcentratedLiquidityPool: MAX_TICK_LIQUIDITY is checked incorrectly"}, {"title": "ConcentratedLiquidityPool: initialPrice should be checked to be within allowable range", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/11", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-2-findings", "body": "ConcentratedLiquidityPool: initialPrice should be checked to be within allowable range"}, {"title": "Incentives for different pools should differ by a large factor", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/10", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "Incentives for different pools should differ by a large factor"}, {"title": "Possible attacks on Seconds * Liquidity calculation", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/8", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Possible attacks on Seconds * Liquidity calculation"}, {"title": "Consider using solidity version 0.8.8", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/7", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Consider using solidity version 0.8.8"}, {"title": "Implement or remove functions", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/6", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "Implement or remove functions"}, {"title": "Possible underflow if other checks aren't used", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/5", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushitrident-2-findings", "body": "Possible underflow if other checks aren't used"}, {"title": "Unlocked Pragma Statements", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/3", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-2-findings", "body": "Unlocked Pragma Statements"}, {"title": "Understanding the fee growth mechanism (why nearestTick is unsuitable)", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-2-findings/issues/1", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-2-findings", "body": "Understanding the fee growth mechanism (why nearestTick is unsuitable)"}, {"title": "depositYieldBearing didn't check address != 0", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/48", "labels": ["bug", "sponsor confirmed", "disagree with severity", "0 (Non-critical)", "resolved"], "target": "2021-10-tempus-findings", "body": "depositYieldBearing didn't check address != 0"}, {"title": "`internal` functions can be `private`", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/46", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-10-tempus-findings", "body": "`internal` functions can be `private`"}, {"title": "`public` functions can be `external`", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/45", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "`public` functions can be `external`"}, {"title": "Prefix increaments are cheaper than postfix increaments", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/40", "labels": ["bug", "sponsor acknowledged", "G (Gas Optimization)"], "target": "2021-10-tempus-findings", "body": "Prefix increaments are cheaper than postfix increaments"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/39", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-tempus-findings", "body": "Open TODOs"}, {"title": "Use of uint8 for counter in for loop increases gas costs", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/38", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Use of uint8 for counter in for loop increases gas costs"}, {"title": "getAMMOrderedAmounts and _exitTempusAmmAndRedeem functions use explicit token comparison for ordering instead of relying on Balancer's PoolTokens", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/37", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-tempus-findings", "body": "getAMMOrderedAmounts and _exitTempusAmmAndRedeem functions use explicit token comparison for ordering instead of relying on Balancer's PoolTokens"}, {"title": "for loop with _TOTAL_TOKENS", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/36", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "for loop with _TOTAL_TOKENS"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/33", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Unused imports"}, {"title": "Lack of validation for Maturity Date", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/32", "labels": ["bug", "sponsor disputed", "disagree with severity", "0 (Non-critical)"], "target": "2021-10-tempus-findings", "body": "Lack of validation for Maturity Date"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/31", "labels": ["bug", "sponsor acknowledged", "G (Gas Optimization)"], "target": "2021-10-tempus-findings", "body": "Cache array length in for loops can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/30", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Typos", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/29", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-tempus-findings", "body": "Typos"}, {"title": "Long Revert Strings", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/28", "labels": ["bug", "sponsor acknowledged", "G (Gas Optimization)"], "target": "2021-10-tempus-findings", "body": "Long Revert Strings"}, {"title": "Gas: `ERC20OwnerMintableToken.burn` should use caller", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/27", "labels": ["bug", "sponsor disputed", "G (Gas Optimization)"], "target": "2021-10-tempus-findings", "body": "Gas: `ERC20OwnerMintableToken.burn` should use caller"}, {"title": "Gas: Don't store cToken twice", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/26", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Gas: Don't store cToken twice"}, {"title": "`_setAmplificationData` should clear upper bits of values", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/25", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-10-tempus-findings", "body": "`_setAmplificationData` should clear upper bits of values"}, {"title": "`transferFees` may not be the contract itself", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/24", "labels": ["bug", "sponsor acknowledged", "disagree with severity", "0 (Non-critical)"], "target": "2021-10-tempus-findings", "body": "`transferFees` may not be the contract itself"}, {"title": "No `swap` slippage checks", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/23", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-tempus-findings", "body": "No `swap` slippage checks"}, {"title": "`exitTempusAMM` can be made to fail", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/21", "labels": ["bug", "sponsor confirmed", "2 (Med Risk)", "resolved"], "target": "2021-10-tempus-findings", "body": "`exitTempusAMM` can be made to fail"}, {"title": "`depositAndFix` can be made to fail", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/20", "labels": ["bug", "sponsor confirmed", "2 (Med Risk)", "resolved"], "target": "2021-10-tempus-findings", "body": "`depositAndFix` can be made to fail"}, {"title": "TempusAMM freezing all actions except proportional exit on maturity seems unnecessary", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/18", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "TempusAMM freezing all actions except proportional exit on maturity seems unnecessary"}, {"title": "Inheritance from BaseGeneralPool is unused", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/17", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Inheritance from BaseGeneralPool is unused"}, {"title": "Repeated token transfers on deposits are unnecessary", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/16", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Repeated token transfers on deposits are unnecessary"}, {"title": "Use of `matured` storage variable is unnecessary", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/15", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Use of `matured` storage variable is unnecessary"}, {"title": "Aave/Compound pools result in liquidity mining returns being lost", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/14", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-tempus-findings", "body": "Aave/Compound pools result in liquidity mining returns being lost"}, {"title": "cToken funds are locked if Compound's exchange rate is 0", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/13", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-10-tempus-findings", "body": "cToken funds are locked if Compound's exchange rate is 0"}, {"title": "Param `initInterestRate` in `TempusPool::constructor` should not be 0", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/12", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-tempus-findings", "body": "Param `initInterestRate` in `TempusPool::constructor` should not be 0"}, {"title": "Make `protocolName` variables in protocol pools constant", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/11", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Make `protocolName` variables in protocol pools constant"}, {"title": "Steal tokens from TempusController", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/10", "labels": ["bug", "sponsor confirmed", "disagree with severity", "3 (High Risk)", "resolved"], "target": "2021-10-tempus-findings", "body": "Steal tokens from TempusController"}, {"title": "PermanentlyOwnable does not prevent transferring ownership to a dead address.", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/9", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-tempus-findings", "body": "PermanentlyOwnable does not prevent transferring ownership to a dead address."}, {"title": "Manipulating updateInterestRate() in Tempus Pools to mint more Principal and Yield Tokens Than They Should", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/8", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-10-tempus-findings", "body": "Manipulating updateInterestRate() in Tempus Pools to mint more Principal and Yield Tokens Than They Should"}, {"title": "Scaling factors for token 0/1 might swap in TempusAMM constructor.", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/7", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-tempus-findings", "body": "Scaling factors for token 0/1 might swap in TempusAMM constructor."}, {"title": "No zero address check for controller in TempusPool", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/6", "labels": ["bug", "sponsor confirmed", "disagree with severity", "0 (Non-critical)", "resolved"], "target": "2021-10-tempus-findings", "body": "No zero address check for controller in TempusPool"}, {"title": "Improper Access Control", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/5", "labels": ["bug", "sponsor disputed", "disagree with severity", "0 (Non-critical)"], "target": "2021-10-tempus-findings", "body": "Improper Access Control"}, {"title": "Named Return Issues", "html_url": "https://github.com/code-423n4/2021-10-tempus-findings/issues/4", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-tempus-findings", "body": "Named Return Issues"}, {"title": "Hex selector", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/66", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)", "resolved"], "target": "2021-10-ambire-findings", "body": "Hex selector"}, {"title": "Only prepare tx when the fee is present", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/65", "labels": ["bug", "sponsor acknowledged", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Only prepare tx when the fee is present"}, {"title": "LibBytes uses itself", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/58", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "LibBytes uses itself"}, {"title": "Duplicate math operations", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/57", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Duplicate math operations"}, {"title": "ecrecover may return empty address", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/56", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "ecrecover may return empty address"}, {"title": "block.chainid may change in case of a hardfork", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/55", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "block.chainid may change in case of a hardfork"}, {"title": "Hardcoded WETH", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/54", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "Hardcoded WETH"}, {"title": "lack of require message", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/53", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-ambire-findings", "body": "lack of require message"}, {"title": "use of floating pragma", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/51", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-ambire-findings", "body": "use of floating pragma"}, {"title": "No account existence check for low-level call", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/48", "labels": ["bug", "invalid", "sponsor disputed", "1 (Low Risk)"], "target": "2021-10-ambire-findings", "body": "No account existence check for low-level call"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/46", "labels": ["bug", "sponsor acknowledged", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Inconsistent code style of for loops", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/45", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-ambire-findings", "body": "Inconsistent code style of for loops"}, {"title": "Gas: `SignatureValidatorV2.recoverAddrImpl` should use `else if`", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/42", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Gas: `SignatureValidatorV2.recoverAddrImpl` should use `else if`"}, {"title": "Gas: `BytesLib` addition can be unchecked", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/41", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Gas: `BytesLib` addition can be unchecked"}, {"title": "QuickAccManager Smart Contract signature verification can be exploited", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/40", "labels": ["bug", "sponsor confirmed", "3 (High Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "QuickAccManager Smart Contract signature verification can be exploited"}, {"title": "Signature replay attacks for different identities (nonce on wrong party)", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/39", "labels": ["bug", "duplicate", "sponsor confirmed", "3 (High Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "Signature replay attacks for different identities (nonce on wrong party)"}, {"title": "No check for signature malleability", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/38", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)", "resolved"], "target": "2021-10-ambire-findings", "body": "No check for signature malleability"}, {"title": "If zero address is added as privilege anyone can execute arbitrary transactions", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/37", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "If zero address is added as privilege anyone can execute arbitrary transactions"}, {"title": "`Identity` fallback returns too many bytes", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/36", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)", "resolved"], "target": "2021-10-ambire-findings", "body": "`Identity` fallback returns too many bytes"}, {"title": "No ERC20 safe* versions called & no return values checked", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/35", "labels": ["bug", "duplicate", "sponsor acknowledged", "disagree with severity", "0 (Non-critical)", "resolved"], "target": "2021-10-ambire-findings", "body": "No ERC20 safe* versions called & no return values checked"}, {"title": "`Zapper` only works for whitelisted tokens", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/33", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-10-ambire-findings", "body": "`Zapper` only works for whitelisted tokens"}, {"title": "`Zapper` should safeApprove(0) first", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/32", "labels": ["bug", "sponsor acknowledged", "1 (Low Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "`Zapper` should safeApprove(0) first"}, {"title": "`QuickAccManager.sol` Constants should be marked as `constant`", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/31", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "`QuickAccManager.sol` Constants should be marked as `constant`"}, {"title": "Cache storage variables in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/30", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Cache storage variables in the stack can save gas"}, {"title": "Unnecessary storage variables", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/29", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Unnecessary storage variables"}, {"title": "`Zapper.sol#tradeV3Single()` Remove unnecessary variable can make the code simpler and save gas", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/28", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "`Zapper.sol#tradeV3Single()` Remove unnecessary variable can make the code simpler and save gas"}, {"title": "`Zapper.sol#wrapETH()` Use `WETH.deposit` can save some gas", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/27", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "`Zapper.sol#wrapETH()` Use `WETH.deposit` can save some gas"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/26", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Cache array length in for loops can save gas"}, {"title": "`QuickAccManager.sol#send()` Avoid unnecessary read from storage can save gas", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/25", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "`QuickAccManager.sol#send()` Avoid unnecessary read from storage can save gas"}, {"title": "Assignment Of Variable To Default (Identity.sol)", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/17", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Assignment Of Variable To Default (Identity.sol)"}, {"title": "Long Revert Strings", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/16", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Long Revert Strings"}, {"title": "Compare with 0 and 1 in a more efficient way", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/15", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Compare with 0 and 1 in a more efficient way"}, {"title": "Safe some gas on the nonce increment", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/14", "labels": ["bug", "sponsor acknowledged", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Safe some gas on the nonce increment"}, {"title": "Prevent execution with invalid signatures", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/13", "labels": ["bug", "duplicate", "sponsor confirmed", "disagree with severity", "3 (High Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "Prevent execution with invalid signatures"}, {"title": "Some code is commented out", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/11", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)", "resolved"], "target": "2021-10-ambire-findings", "body": "Some code is commented out"}, {"title": "IdentityFactory.withdraw can be external", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/10", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "IdentityFactory.withdraw can be external"}, {"title": "Set `QuickAccManager::CANCEL_PREFIX` as constant", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/7", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Set `QuickAccManager::CANCEL_PREFIX` as constant"}, {"title": "Set `IdentityFactory::creator` as immutable", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/6", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Set `IdentityFactory::creator` as immutable"}, {"title": "Set `QuickAccManager::DOMAIN_SEPARATOR` as immutable", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/4", "labels": ["bug", "sponsor confirmed", "G (Gas Optimization)", "resolved"], "target": "2021-10-ambire-findings", "body": "Set `QuickAccManager::DOMAIN_SEPARATOR` as immutable"}, {"title": "Address with privilege for QuickAccount with `address(0)`'s can execute arbitrary transactions", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/3", "labels": ["bug", "sponsor confirmed", "disagree with severity", "1 (Low Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "Address with privilege for QuickAccount with `address(0)`'s can execute arbitrary transactions"}, {"title": "`QuickAccManager.sol#cancel()` Wrong `hashTx` makes it impossible to cancel a scheduled transaction", "html_url": "https://github.com/code-423n4/2021-10-ambire-findings/issues/1", "labels": ["bug", "sponsor confirmed", "3 (High Risk)", "resolved"], "target": "2021-10-ambire-findings", "body": "`QuickAccManager.sol#cancel()` Wrong `hashTx` makes it impossible to cancel a scheduled transaction"}, {"title": "Math's operations order in Swivel's functions", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/162", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Math's operations order in Swivel's functions"}, {"title": "Better Math in `calculateReturn`", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/161", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Better Math in `calculateReturn`"}, {"title": "balanceOf should be a _view_ function", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/157", "labels": ["bug", "duplicate", "0 (Non-critical)", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "balanceOf should be a _view_ function"}, {"title": "fee-on-transfer underlying can cause problems", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/156", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "fee-on-transfer underlying can cause problems"}, {"title": "Unsafe handling of underlying tokens", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/155", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-swivel-findings", "body": "Unsafe handling of underlying tokens"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/153", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2021-09-swivel-findings", "body": "Style issues"}, {"title": "'matured' can be replaced by 'maturityRate' > 0", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/151", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "'matured' can be replaced by 'maturityRate' > 0"}, {"title": "Functions returning boolean", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/149", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Functions returning boolean"}, {"title": "'onlyAdmin' and 'onlySwivel' modifiers", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/148", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "'onlyAdmin' and 'onlySwivel' modifiers"}, {"title": "'mature' and 'maturityRate' do not need separate mappings", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/147", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "'mature' and 'maturityRate' do not need separate mappings"}, {"title": "Can cancel the same order again", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/145", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Can cancel the same order again"}, {"title": "Underlying can be fetched from cToken", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/142", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "Underlying can be fetched from cToken"}, {"title": "Validations in setFee", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/137", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-swivel-findings", "body": "Validations in setFee"}, {"title": "Return value of transferNotionalFee", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/135", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Return value of transferNotionalFee"}, {"title": "Magic Number 1e26 would best replace by a constant in `VaultTracker`", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/131", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2021-09-swivel-findings", "body": "Magic Number 1e26 would best replace by a constant in `VaultTracker`"}, {"title": "The requires used in `p2pVaultExchange` `transferVaultNotional` in Marketplace.sol are not necessary", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/130", "labels": ["bug", "0 (Non-critical)"], "target": "2021-09-swivel-findings", "body": "The requires used in `p2pVaultExchange` `transferVaultNotional` in Marketplace.sol are not necessary"}, {"title": "Redundant `require` in Swivel.sol", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/129", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Redundant `require` in Swivel.sol"}, {"title": "require(mPlace.custodialExit) in Swivel.sol is redundant", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/128", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "require(mPlace.custodialExit) in Swivel.sol is redundant"}, {"title": "Swivel.sol - marketplace is an immutable address, yet is always casted to MarketPlace - store as MarketPlace to make code cleaner", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/125", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Swivel.sol - marketplace is an immutable address, yet is always casted to MarketPlace - store as MarketPlace to make code cleaner"}, {"title": "swivel and marketPlace contract does not implement the mechanisim to renounce the role of admin", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/119", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-swivel-findings", "body": "swivel and marketPlace contract does not implement the mechanisim to renounce the role of admin"}, {"title": "Bounded array lengths or checking gasleft will save gas from OOGs", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/116", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Bounded array lengths or checking gasleft will save gas from OOGs"}, {"title": "Avoiding initialization of loop index can save a little gas", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/115", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Avoiding initialization of loop index can save a little gas"}, {"title": "Converting fenominator to a static array will save storage slots and gas", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/114", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2021-09-swivel-findings", "body": "Converting fenominator to a static array will save storage slots and gas"}, {"title": "+= can be replaced by =", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/113", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "+= can be replaced by ="}, {"title": " Input validation on amount > 0 will save gas", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/112", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-swivel-findings", "body": " Input validation on amount > 0 will save gas"}, {"title": "Removing redundant require() can save gas", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/111", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Removing redundant require() can save gas"}, {"title": "Caching state variables in local/memory variables avoids SLOADs to save gas", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/110", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Caching state variables in local/memory variables avoids SLOADs to save gas"}, {"title": "Missing input validation, threshold check, event and timelock in setFee function", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Missing input validation, threshold check, event and timelock in setFee function"}, {"title": "Missing input validation & event in emergency blockWithdrawal could be risky", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/107", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-swivel-findings", "body": "Missing input validation & event in emergency blockWithdrawal could be risky"}, {"title": "Missing input validation on array length match", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/105", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-swivel-findings", "body": "Missing input validation on array length match"}, {"title": "Compact signatures not being supported could lead to DoS", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/104", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Compact signatures not being supported could lead to DoS"}, {"title": "Missing input validation may cause revert due to underflow", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/102", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Missing input validation may cause revert due to underflow"}, {"title": "Missing event & timelock for critical onlyAdmin functions", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/101", "labels": ["bug", "2 (Med Risk)"], "target": "2021-09-swivel-findings", "body": "Missing event & timelock for critical onlyAdmin functions"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/100", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-swivel-findings", "body": "Missing zero-address checks"}, {"title": "Use of ecrecover is susceptible to signature malleability", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/99", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "Use of ecrecover is susceptible to signature malleability"}, {"title": "Static chainID could allow replay attacks on chain splits", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/98", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-swivel-findings", "body": "Static chainID could allow replay attacks on chain splits"}, {"title": "Previously created markets can be overwritten", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/97", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-09-swivel-findings", "body": "Previously created markets can be overwritten"}, {"title": "Missing event and timelock for setSwivelAddress", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/96", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-swivel-findings", "body": "Missing event and timelock for setSwivelAddress"}, {"title": "Admin is a single-point of failure without any mitigations", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/95", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-swivel-findings", "body": "Admin is a single-point of failure without any mitigations"}, {"title": "Missing guarded launch", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/94", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "Missing guarded launch"}, {"title": "Abstract contracts should really be interfaces", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/93", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Abstract contracts should really be interfaces"}, {"title": "Different parameter used in  while emitting event", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/90", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "Different parameter used in  while emitting event"}, {"title": "Gas: Approve `cToken` address only once for underlying", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Gas: Approve `cToken` address only once for underlying"}, {"title": "Wrong yield computation upon maturity", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/85", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Wrong yield computation upon maturity"}, {"title": "Infinite mint by transferring nTokens to self", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/81", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-swivel-findings", "body": "Infinite mint by transferring nTokens to self"}, {"title": "Lack of Pause Mechanism", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/76", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "sponsor disputed", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "Lack of Pause Mechanism"}, {"title": "Potential Reentrancy when Initiating and Exiting Positions", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/75", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Potential Reentrancy when Initiating and Exiting Positions"}, {"title": "Swivel Markets are not Isolated", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/73", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Swivel Markets are not Isolated"}, {"title": "Missing Dev Comments", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Missing Dev Comments"}, {"title": "Gas Savings Upon Market Creation", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/70", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-swivel-findings", "body": "Gas Savings Upon Market Creation"}, {"title": "Lack of Proper Revert Messages", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/68", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Lack of Proper Revert Messages"}, {"title": "Open TODOs in Codebase", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/67", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-swivel-findings", "body": "Open TODOs in Codebase"}, {"title": "transferNotionalFrom doesn't check from != to", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/65", "labels": ["bug", "duplicate", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "transferNotionalFrom doesn't check from != to"}, {"title": "Prevent underflow in require", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "sponsor disputed", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "Prevent underflow in require"}, {"title": "return value of 0 from ecrecover not checked", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/61", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-swivel-findings", "body": "return value of 0 from ecrecover not checked"}, {"title": "Double Spending. No decreaseAllowance()/ IncreaseAllowance()", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/53", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Double Spending. No decreaseAllowance()/ IncreaseAllowance()"}, {"title": "Missing initial ownership event", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/49", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "Missing initial ownership event"}, {"title": "Sig.split function could be private instead internal.", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/44", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Sig.split function could be private instead internal."}, {"title": "Title: Double reading from calldata o", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Title: Double reading from calldata o"}, {"title": "Complex state variable copied to memory in redeemZcToken (MarketPlace.sol)", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Complex state variable copied to memory in redeemZcToken (MarketPlace.sol)"}, {"title": "Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/39", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Swivel: Taker is charged fees twice in exitVaultFillingVaultInitiate"}, {"title": "Swivel: implementation for initiateZcTokenFillingZcTokenExit is incorrect", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/38", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Swivel: implementation for initiateZcTokenFillingZcTokenExit is incorrect"}, {"title": "Swivel: Implement check effect interaction to align with best practices", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/37", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Swivel: Implement check effect interaction to align with best practices"}, {"title": "Swivel: Incorrect dev comments for the 4 initiate functions", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Swivel: Incorrect dev comments for the 4 initiate functions"}, {"title": "VaultTracker.sol: init sVault.exchangeRate in constructor", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "VaultTracker.sol: init sVault.exchangeRate in constructor"}, {"title": "VaultTracker.sol: pass in exchangeRate as a variable to matureVault()", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/30", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "VaultTracker.sol: pass in exchangeRate as a variable to matureVault()"}, {"title": "MarketPlace.sol: Remove maturity from VaultTracker and ZcToken", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "MarketPlace.sol: Remove maturity from VaultTracker and ZcToken"}, {"title": "VaultTracker.sol: Gas optimisation for addNotional", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/28", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "VaultTracker.sol: Gas optimisation for addNotional"}, {"title": "Use bytes32 rather than string/bytes", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Use bytes32 rather than string/bytes"}, {"title": "Return value of transferNotionalFee ignored", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-swivel-findings", "body": "Return value of transferNotionalFee ignored"}, {"title": "Array .length Used Directly In For Loops", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/15", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-swivel-findings", "body": "Array .length Used Directly In For Loops"}, {"title": "createMarket function missing parameter description", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/3", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "createMarket function missing parameter description"}, {"title": "Wrong parameter name used in function spec", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/2", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-09-swivel-findings", "body": "Wrong parameter name used in function spec"}, {"title": "Bytes constant more efficient than string literal", "html_url": "https://github.com/code-423n4/2021-09-swivel-findings/issues/1", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-swivel-findings", "body": "Bytes constant more efficient than string literal"}, {"title": "token out of range check can be simplified", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "token out of range check can be simplified"}, {"title": "Useless multiplication by 1", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Useless multiplication by 1"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/33", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Unused imports"}, {"title": "Immutable state variables", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Immutable state variables"}, {"title": "Unused state variables", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Unused state variables"}, {"title": "BLOCK_TIME of Arbitrum is less than 13 seconds", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/30", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-10-tracer-findings", "body": "BLOCK_TIME of Arbitrum is less than 13 seconds"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/27", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Adding unchecked directive can save gas"}, {"title": "`PoolKeeper.sol#performUpkeepSinglePool()` Wrong implementation allows attacker to interfere the upkeep of pools", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/26", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-10-tracer-findings", "body": "`PoolKeeper.sol#performUpkeepSinglePool()` Wrong implementation allows attacker to interfere the upkeep of pools"}, {"title": "Wrong keeper reward computation", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/23", "labels": ["bug", "sponsor confirmed", "2 (Med Risk)"], "target": "2021-10-tracer-findings", "body": "Wrong keeper reward computation"}, {"title": "Gas: Inefficient modulo computation", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Gas: Inefficient modulo computation"}, {"title": "Validate max fee", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/21", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-10-tracer-findings", "body": "Validate max fee"}, {"title": "No ERC20 `safeApprove` versions called", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/20", "labels": ["bug", "sponsor disputed", "1 (Low Risk)"], "target": "2021-10-tracer-findings", "body": "No ERC20 `safeApprove` versions called"}, {"title": "`uncommit` sends tokens to the wrong user", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/19", "labels": ["bug", "2 (Med Risk)", "disagree with severity"], "target": "2021-10-tracer-findings", "body": "`uncommit` sends tokens to the wrong user"}, {"title": "Deposits don't work with fee-on transfer tokens", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/17", "labels": ["bug", "sponsor disputed", "2 (Med Risk)"], "target": "2021-10-tracer-findings", "body": "Deposits don't work with fee-on transfer tokens"}, {"title": "Gas: `transferGovernance` can save an sload", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/16", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Gas: `transferGovernance` can save an sload"}, {"title": "Unsafe `int256` casts in `executePriceChange`", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/14", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-10-tracer-findings", "body": "Unsafe `int256` casts in `executePriceChange`"}, {"title": "Revert in `poolUpkeep`", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/13", "labels": ["bug", "sponsor disputed", "1 (Low Risk)"], "target": "2021-10-tracer-findings", "body": "Revert in `poolUpkeep`"}, {"title": "Gas: shadow pools are only required for burn types", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/12", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Gas: shadow pools are only required for burn types"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/11", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-10-tracer-findings", "body": "Missing parameter validation"}, {"title": "LeveragedPool has require statements which are also checked in library", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/10", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "LeveragedPool has require statements which are also checked in library"}, {"title": "Contradiction in comment/require statement", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/7", "labels": ["bug", "sponsor confirmed", "1 (Low Risk)"], "target": "2021-10-tracer-findings", "body": "Contradiction in comment/require statement"}, {"title": "Unused Named Returns Can Be Removed", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Unused Named Returns Can Be Removed"}, {"title": "Minimize Storage Slots (LeveragedPool.sol)", "html_url": "https://github.com/code-423n4/2021-10-tracer-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tracer-findings", "body": "Minimize Storage Slots (LeveragedPool.sol)"}, {"title": "Set initial value for lastFee", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Set initial value for lastFee"}, {"title": "Cache factory.ownerSplit()", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/89", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Cache factory.ownerSplit()"}, {"title": "Cache basketAsERC20.totalSupply()", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/88", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Cache basketAsERC20.totalSupply()"}, {"title": "There may be no bounties or user is not interested in any of them", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "There may be no bounties or user is not interested in any of them"}, {"title": "How much to approve before calling mintTo", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/86", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "How much to approve before calling mintTo"}, {"title": "createBasket re-entrancy", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/85", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "createBasket re-entrancy"}, {"title": "Validations", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/84", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-10-defiprotocol-findings", "body": "Validations"}, {"title": "Missing events for owner only functions that change critical parameters", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/82", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-10-defiprotocol-findings", "body": "Missing events for owner only functions that change critical parameters"}, {"title": " Missing events for basket only functions that change critical parameters", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/81", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-10-defiprotocol-findings", "body": " Missing events for basket only functions that change critical parameters"}, {"title": "Sensitive variables should not be able to be changed easily", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/80", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Sensitive variables should not be able to be changed easily"}, {"title": "Fee on transfer tokens do not work within the protocol", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/78", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Fee on transfer tokens do not work within the protocol"}, {"title": "Lack of Documentation on key functions", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/77", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Lack of Documentation on key functions"}, {"title": "Input Validation on Factory.sol", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/75", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Input Validation on Factory.sol"}, {"title": "Increase optimizer runs", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/74", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Increase optimizer runs"}, {"title": "Remove hardhat import", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/73", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Remove hardhat import"}, {"title": "uint256 can be lowered to unitX with X < 256 in some cases", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "uint256 can be lowered to unitX with X < 256 in some cases"}, {"title": "Unchecked modifiers should be used when over/under-flow isnt an issue to save gas", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/71", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Unchecked modifiers should be used when over/under-flow isnt an issue to save gas"}, {"title": "Uninitialized variables are automatically set to 0", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/70", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Uninitialized variables are automatically set to 0"}, {"title": "`Basket.sol` should use the Upgradeable variant of OpenZeppelin Contracts", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "`Basket.sol` should use the Upgradeable variant of OpenZeppelin Contracts"}, {"title": "`Basket.sol#changePublisher()` Remove redundant assertion can save gas", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`Basket.sol#changePublisher()` Remove redundant assertion can save gas"}, {"title": "Basket: No need for initialized variable", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/63", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Basket: No need for initialized variable"}, {"title": "`Basket.sol#changeLicenseFee()` Remove redundant check can save gas", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`Basket.sol#changeLicenseFee()` Remove redundant check can save gas"}, {"title": "`Basket.sol#changePublisher()` Insufficient input validation", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/61", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`Basket.sol#changePublisher()` Insufficient input validation"}, {"title": "`Basket.sol` should have methods to cancel pending changes", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`Basket.sol` should have methods to cancel pending changes"}, {"title": "`Basket.sol#mint()` Malfunction due to extra `nonReentrant` modifier", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/59", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`Basket.sol#mint()` Malfunction due to extra `nonReentrant` modifier"}, {"title": "Tests are broken", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/58", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Tests are broken"}, {"title": "Unnecessary new list in Basket's validateWeights()", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/56", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary new list in Basket's validateWeights()"}, {"title": "Restore state to 0 if not needed anymore", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/53", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Restore state to 0 if not needed anymore"}, {"title": "Auction bonder can steal user funds if bond block is high enough", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/51", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Auction bonder can steal user funds if bond block is high enough"}, {"title": "Inaccurate log emitted at deleteNewIndex", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Inaccurate log emitted at deleteNewIndex"}, {"title": "Basket becomes unusable if everybody burns their shares", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/49", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Basket becomes unusable if everybody burns their shares"}, {"title": "Bonding mechanism allows malicious user to DOS auctions", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/48", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Bonding mechanism allows malicious user to DOS auctions"}, {"title": "Comparisons to boolean constant", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/47", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Comparisons to boolean constant"}, {"title": "Minimize Storage Slots (Auction.sol)", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/46", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Minimize Storage Slots (Auction.sol)"}, {"title": "`nonReentrant` modifier should be used before any other modifier", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`nonReentrant` modifier should be used before any other modifier"}, {"title": "Events in `IAuction` don't use the `indexed` keyword", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/44", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Events in `IAuction` don't use the `indexed` keyword"}, {"title": "`Factory.proposeBasketLicense()` and `IFactory.proposeBasketLicense()` accept arguments with different data locations", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/43", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`Factory.proposeBasketLicense()` and `IFactory.proposeBasketLicense()` accept arguments with different data locations"}, {"title": "`Basket.publishNewIndex()` and `IBasket.publishNewIndex()` accept arguments with different data locations", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/42", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`Basket.publishNewIndex()` and `IBasket.publishNewIndex()` accept arguments with different data locations"}, {"title": "`Auction.settleAuction()` and `IAuction.settleAuction()` accept arguments with different data locations", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`Auction.settleAuction()` and `IAuction.settleAuction()` accept arguments with different data locations"}, {"title": "Empty `else if` block in `Basket.publishNewIndex()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Empty `else if` block in `Basket.publishNewIndex()`"}, {"title": "Unnecessary `SLOAD`s and `MLOAD`s in for-each loops", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary `SLOAD`s and `MLOAD`s in for-each loops"}, {"title": "Unnecessary `SLOAD`s in `Factory`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/35", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary `SLOAD`s in `Factory`"}, {"title": "Unnecessary `SLOAD`s in `Basket`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary `SLOAD`s in `Basket`"}, {"title": "Unnecessary `SLOAD`s in `Auction`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary `SLOAD`s in `Auction`"}, {"title": "Inconsistent naming of a function's argument in `Factory`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/32", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Inconsistent naming of a function's argument in `Factory`"}, {"title": "Array out-of-bounds error in `Auction`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/31", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Array out-of-bounds error in `Auction`"}, {"title": "Array out-of-bounds errors in `Factory`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/30", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Array out-of-bounds errors in `Factory`"}, {"title": "Unnecessary require statement in `Auction.initialize()` and `Basket.initialize()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary require statement in `Auction.initialize()` and `Basket.initialize()`"}, {"title": "Unnecessary checked arithmetic in for loops", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/28", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary checked arithmetic in for loops"}, {"title": "Unnecessary checked arithmetic in `Basket.handleFees()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary checked arithmetic in `Basket.handleFees()`"}, {"title": "Unnecessary checked arithmetic in `Auction.addBounty()` and `Factory.proposeBasketLicense()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary checked arithmetic in `Auction.addBounty()` and `Factory.proposeBasketLicense()`"}, {"title": "Unnecessary checked arithmetic in `Auction.settleAuction()`, `Auction.bondBurn()`, `Basket.changePublisher()`, `Basket.changeLicenseFee()` and `Basket.publishNewIndex()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/25", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary checked arithmetic in `Auction.settleAuction()`, `Auction.bondBurn()`, `Basket.changePublisher()`, `Basket.changeLicenseFee()` and `Basket.publishNewIndex()`"}, {"title": "Setting `Factory.auctionDecrement` to zero causes Denial of Service in `Auction.settleAuction()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/24", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Setting `Factory.auctionDecrement` to zero causes Denial of Service in `Auction.settleAuction()`"}, {"title": "Setting `Factory.bondPercentDiv` to zero cause Denial of Service in `Auction.bondForRebalance()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/23", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Setting `Factory.bondPercentDiv` to zero cause Denial of Service in `Auction.bondForRebalance()`"}, {"title": "Prefix increament is cheaper than postfix increament", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Prefix increament is cheaper than postfix increament"}, {"title": "Unnecessary cast in `Basket.onlyPublisher()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary cast in `Basket.onlyPublisher()`"}, {"title": "Unnecessary cast in `Factory.proposeBasketLicense()`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/20", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "Unnecessary cast in `Factory.proposeBasketLicense()`"}, {"title": "Require statements without messages in `Factory`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/18", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Require statements without messages in `Factory`"}, {"title": "Require statements without messages in `Basket`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Require statements without messages in `Basket`"}, {"title": "Require statements without messages in `Auction`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Require statements without messages in `Auction`"}, {"title": "`internal` function in `Auction` can be `private`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/15", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`internal` function in `Auction` can be `private`"}, {"title": "`public` functions in `Factory` can be `external`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/14", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`public` functions in `Factory` can be `external`"}, {"title": "`public` functions in `Basket` can be `external`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`public` functions in `Basket` can be `external`"}, {"title": "`public` functions in `Auction` can be `external`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/12", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "`public` functions in `Auction` can be `external`"}, {"title": "State variables in `Factory` can be `immutable`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/11", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-defiprotocol-findings", "body": "State variables in `Factory` can be `immutable`"}, {"title": "Open TODOs in `Factory`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Open TODOs in `Factory`"}, {"title": "Open TODOs in `Basket`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/9", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Open TODOs in `Basket`"}, {"title": "Open TODOs in `Auction`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Open TODOs in `Auction`"}, {"title": "Open TODOs in `IFactory`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/7", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Open TODOs in `IFactory`"}, {"title": "Open TODOs in `IBasket`", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/6", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Open TODOs in `IBasket`"}, {"title": "Unused Named Returns Can Be Removed", "html_url": "https://github.com/code-423n4/2021-10-defiprotocol-findings/issues/4", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-defiprotocol-findings", "body": "Unused Named Returns Can Be Removed"}, {"title": "Token Can Deny Execution of `sweepFees()` Function", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/81", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Token Can Deny Execution of `sweepFees()` Function"}, {"title": "`Ownable` Contract Does Not Implement Two-Step Transfer Ownership Pattern", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/78", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "`Ownable` Contract Does Not Implement Two-Step Transfer Ownership Pattern"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/75", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Open TODOs"}, {"title": "Unnecessary `CALLDATALOAD`s in for-each loops", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/74", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-tally-findings", "body": "Unnecessary `CALLDATALOAD`s in for-each loops"}]