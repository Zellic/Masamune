[{"title": "Reducing the epoch length results in leaking value from advancement incentives", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/4", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-malt-findings", "body": "Reducing the epoch length results in leaking value from advancement incentives"}, {"title": "Invalid equation check on `require`", "html_url": "https://github.com/code-423n4/2021-11-malt-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-11-malt-findings", "body": "Invalid equation check on `require`"}, {"title": "Event missing when removing a vote in extensions", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/170", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "Event missing when removing a vote in extensions"}, {"title": "Collateral can be deposited in a finished pool", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/169", "labels": ["bug", "2 (Med Risk)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "Collateral can be deposited in a finished pool"}, {"title": "Ether can be locked in the `PoolFactory` contract without a way to retrieve it", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/168", "labels": ["bug", "2 (Med Risk)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "Ether can be locked in the `PoolFactory` contract without a way to retrieve it"}, {"title": "missing nonreentrant modfier", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/166", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "missing nonreentrant modfier"}, {"title": "Change state mutability in NoYield.sol", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/165", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Change state mutability in NoYield.sol"}, {"title": "Not needed zero address check", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/160", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Not needed zero address check"}, {"title": "Loops can be implemented more efficiently", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/157", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Loops can be implemented more efficiently"}, {"title": "In `CreditLine#_borrowTokensToLiquidate`, oracle is used wrong way", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/155", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "In `CreditLine#_borrowTokensToLiquidate`, oracle is used wrong way"}, {"title": "denial of service", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/154", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "denial of service"}, {"title": "Gas: Use `else if` in `withdrawLiquidity`", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/148", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Gas: Use `else if` in `withdrawLiquidity`"}, {"title": "Self-transfer leads to wrong withdrawable repayments", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/146", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Self-transfer leads to wrong withdrawable repayments"}, {"title": "Collateral deposit does not support fee-on-transfer tokens", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/143", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "Collateral deposit does not support fee-on-transfer tokens"}, {"title": "`NoYield.sol` Tokens with fee on transfer are not supported", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/142", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "`NoYield.sol` Tokens with fee on transfer are not supported"}, {"title": "Extension voting threshold check needs to rerun on each transfer", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/141", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Extension voting threshold check needs to rerun on each transfer"}, {"title": "Extension voting power can be flashloaned", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/140", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "Extension voting power can be flashloaned"}, {"title": "Pool direct savingsaccount deposits fail when no strategy set", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/138", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "Pool direct savingsaccount deposits fail when no strategy set"}, {"title": "Aave's share tokens are rebasing breaking current strategy code", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/137", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "Aave's share tokens are rebasing breaking current strategy code"}, {"title": "approve return values not checked", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/136", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "approve return values not checked"}, {"title": "`unlockShares` wrong comment", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/135", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "`unlockShares` wrong comment"}, {"title": "Yearn token <> shares conversion decimal issue", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/134", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Yearn token <> shares conversion decimal issue"}, {"title": "Wrong returns of `SavingsAccountUtil.depositFromSavingsAccount()` can cause fund loss", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/132", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Wrong returns of `SavingsAccountUtil.depositFromSavingsAccount()` can cause fund loss"}, {"title": "`SavingsAccount.sol` Wrong `amount` in `Transfer` events", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/130", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "`SavingsAccount.sol` Wrong `amount` in `Transfer` events"}, {"title": "Gas Optimization: Struct layout", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/129", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Gas Optimization: Struct layout"}, {"title": "`AaveYield.getTokensForShares()`, `AaveYield.getSharesForTokens()` Implementation can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/128", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "`AaveYield.getTokensForShares()`, `AaveYield.getSharesForTokens()` Implementation can be simpler and save some gas"}, {"title": "`Pool.sol#withdrawBorrowedAmount()` Validation of pool status can be done earlier to save gas", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/127", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "`Pool.sol#withdrawBorrowedAmount()` Validation of pool status can be done earlier to save gas"}, {"title": "`10**30` can be changed to `1e30` and save some gas", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/126", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "`10**30` can be changed to `1e30` and save some gas"}, {"title": "Inline unnecessary function can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/124", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "Inline unnecessary function can make the code simpler and save some gas"}, {"title": "Remove unused local variables", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/119", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Remove unused local variables"}, {"title": "Cache storage variables in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/117", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Cache storage variables in the stack can save gas"}, {"title": "Wrong implementation of `NoYield.sol#emergencyWithdraw()`", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/115", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Wrong implementation of `NoYield.sol#emergencyWithdraw()`"}, {"title": "Wrong usage of `OracleLibrary.getQuoteAtTick()` breaks `PriceOracle.sol`", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/114", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "Wrong usage of `OracleLibrary.getQuoteAtTick()` breaks `PriceOracle.sol`"}, {"title": "Remove unnecessary variables can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/112", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Remove unnecessary variables can make the code simpler and save some gas"}, {"title": "`Pool.sol` should use the Upgradeable variant of OpenZeppelin Contracts", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "`Pool.sol` should use the Upgradeable variant of OpenZeppelin Contracts"}, {"title": "`initializer` functions can be front run", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/106", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "`initializer` functions can be front run"}, {"title": "Best Practice: Contract file name should follow coding conventions", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/105", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Best Practice: Contract file name should follow coding conventions"}, {"title": "Missing timelock for critical contract setters of privileged roles (Price Oracles)", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/103", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Missing timelock for critical contract setters of privileged roles (Price Oracles)"}, {"title": "Use of _msgSender()", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Use of _msgSender()"}, {"title": "Unnecessary receive()", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/99", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Unnecessary receive()"}, {"title": "Missing approve(0)", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/97", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Missing approve(0)"}, {"title": "Anyone can liquidate credit line when autoLiquidation is false without supplying borrow tokens", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/96", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Anyone can liquidate credit line when autoLiquidation is false without supplying borrow tokens"}, {"title": "Two Steps Verification before Transferring Ownership", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/95", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Two Steps Verification before Transferring Ownership"}, {"title": "CreditLine.liquidate allows for price manipulated liquidation", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/94", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "CreditLine.liquidate allows for price manipulated liquidation"}, {"title": "Use one require instead of several", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/93", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "Use one require instead of several"}, {"title": "Redundant use safeMath", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/92", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Redundant use safeMath"}, {"title": "CreditLine.liquidate doesn't transfer borrowed ETH to a lender", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/90", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "CreditLine.liquidate doesn't transfer borrowed ETH to a lender"}, {"title": "calculateInterest() comments missing input parameter", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/87", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "calculateInterest() comments missing input parameter"}, {"title": "CreditLine.sol assumes 365 day year", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/86", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "CreditLine.sol assumes 365 day year"}, {"title": "No validation of protocol fee fraction", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/84", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "No validation of protocol fee fraction"}, {"title": "`delete` doesn\u2019t delete mapping in struct", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/83", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "`delete` doesn\u2019t delete mapping in struct"}, {"title": "Magic number 30 could be a constant", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/82", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Magic number 30 could be a constant"}, {"title": "SavingsAccount withdrawAll and switchStrategy can freeze user funds by ignoring possible strategy liquidity issues", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/80", "labels": ["bug", "3 (High Risk)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "SavingsAccount withdrawAll and switchStrategy can freeze user funds by ignoring possible strategy liquidity issues"}, {"title": "`idealCollateralRatio` is confusingly named", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/79", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "`idealCollateralRatio` is confusingly named"}, {"title": "CreditLine.borrow accepts ETH transfers", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/78", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "CreditLine.borrow accepts ETH transfers"}, {"title": "Credit Line acceptance logic can be simplified to avoid SLOAD in some cases", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/77", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Credit Line acceptance logic can be simplified to avoid SLOAD in some cases"}, {"title": "Argument order for SavingsAccount approval functions is odd", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/76", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Argument order for SavingsAccount approval functions is odd"}, {"title": "`getInterestOverdue` reverts rather than returning 0 when there is no overdue interest", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/74", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "`getInterestOverdue` reverts rather than returning 0 when there is no overdue interest"}, {"title": "LinkedAddress struct can be packed to save an SSTORE", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "LinkedAddress struct can be packed to save an SSTORE"}, {"title": "Contracts allow sending ETH on calls which does not expect it", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/71", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "Contracts allow sending ETH on calls which does not expect it"}, {"title": "Unnecessary zero approvals in yield contracts", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/70", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "Unnecessary zero approvals in yield contracts"}, {"title": "Duplicated code in Yield contracts", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/69", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "Duplicated code in Yield contracts"}, {"title": "`poolSizeLimit` does not account for differing unit values between borrow assets", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "`poolSizeLimit` does not account for differing unit values between borrow assets"}, {"title": "Typo in liquidateCancelPenalty natspec", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/67", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Typo in liquidateCancelPenalty natspec"}, {"title": "Check on `poolConstants.loanWithdrawalDeadline` for liquidation is unnecessary", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Check on `poolConstants.loanWithdrawalDeadline` for liquidation is unnecessary"}, {"title": "Repayments._transferTokens doesn't check msg.value in ETH case", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/61", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "Repayments._transferTokens doesn't check msg.value in ETH case"}, {"title": "Flattening nested mappings can save gas", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/59", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "Flattening nested mappings can save gas"}, {"title": "Overflow in _repay()", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/58", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Overflow in _repay()"}, {"title": "transferTokens should use _from instead of msg.sender", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/57", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "transferTokens should use _from instead of msg.sender"}, {"title": "Unlinked address can link immediately again", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/54", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Unlinked address can link immediately again"}, {"title": "PoolFactory and CreditLine updateSavingsAccount will break the system in production as savings account hold current user records", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/53", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "PoolFactory and CreditLine updateSavingsAccount will break the system in production as savings account hold current user records"}, {"title": "Unable To Call `emergencyWithdraw` ETH in `NoYield` Contract", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/52", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Unable To Call `emergencyWithdraw` ETH in `NoYield` Contract"}, {"title": "`PriceOracle` Does Not Filter Price Feed Outliers", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/51", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "`PriceOracle` Does Not Filter Price Feed Outliers"}, {"title": "Improper Validation Of Chainlink's `latestRoundData` Function", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "Improper Validation Of Chainlink's `latestRoundData` Function"}, {"title": "Natspec not matching function's logic", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/48", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "Natspec not matching function's logic"}, {"title": "Reduce length of require error messages to save in deployment costs", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/47", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Reduce length of require error messages to save in deployment costs"}, {"title": "Fix Unused Variables and Function Parameters", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/46", "labels": ["bug", "disagree with severity", "G (Gas Optimization)"], "target": "2021-12-sublime-findings", "body": "Fix Unused Variables and Function Parameters"}, {"title": "AaveYield: Misspelled external function name making functions fail", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/42", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "AaveYield: Misspelled external function name making functions fail"}, {"title": "Possibility to drain SavingsAccount contract assets", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/41", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "Possibility to drain SavingsAccount contract assets"}, {"title": "Gas: Inlining logic that's used only once in the contract", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/40", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Gas: Inlining logic that's used only once in the contract"}, {"title": "Gas: Upgrading solc version and removing SafeMath", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "Gas: Upgrading solc version and removing SafeMath"}, {"title": "Named return issue", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/38", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-12-sublime-findings", "body": "Named return issue"}, {"title": "Unnecessary uint zero initialization", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Unnecessary uint zero initialization"}, {"title": "Gas optimization", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Gas optimization"}, {"title": "Not verified function inputs of public / external functions", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/30", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2021-12-sublime-findings", "body": "Not verified function inputs of public / external functions"}, {"title": "Lack Of Precision", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/26", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-sublime-findings", "body": "Lack Of Precision"}, {"title": "Prefix increments are cheaper than postfix increments", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Prefix increments are cheaper than postfix increments"}, {"title": "Unnecessary array boundaries check when loading an array element twice", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/21", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2021-12-sublime-findings", "body": "Unnecessary array boundaries check when loading an array element twice"}, {"title": "Unnecessary Reentrancy Guards", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-sublime-findings", "body": "Unnecessary Reentrancy Guards"}, {"title": "Gas saving by struct reorganization", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/14", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Gas saving by struct reorganization"}, {"title": "Gas saving using delete", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/7", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Gas saving using delete"}, {"title": "Gas saving removing safe math", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Gas saving removing safe math"}, {"title": "Gas saving by duplicate check", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/5", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Gas saving by duplicate check"}, {"title": "Deprecated safeApprove() function", "html_url": "https://github.com/code-423n4/2021-12-sublime-findings/issues/2", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-sublime-findings", "body": "Deprecated safeApprove() function"}, {"title": "Comparison with literal boolean values", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/160", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Comparison with literal boolean values"}, {"title": "Unused local variables in requery (TRIBERagequit.sol)", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/159", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Unused local variables in requery (TRIBERagequit.sol)"}, {"title": "Assignment Of State Variables To Default ", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/157", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Assignment Of State Variables To Default "}, {"title": "unsafe cast", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/151", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "unsafe cast"}, {"title": "denial of service", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/150", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "denial of service"}, {"title": "PegExchanger expiry block must be set to at least `MIN_EXPIRY_WINDOW + 1` into the future", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/149", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "PegExchanger expiry block must be set to at least `MIN_EXPIRY_WINDOW + 1` into the future"}, {"title": "`preMergeCirculatingTribe` can be constant", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/147", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "`preMergeCirculatingTribe` can be constant"}, {"title": "No restriction for expiration block in TRIBERagequit.sol", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/144", "labels": ["bug", "duplicate", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "No restriction for expiration block in TRIBERagequit.sol"}, {"title": "Don't cache bool `check`", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/143", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-fei-findings", "body": "Don't cache bool `check`"}, {"title": "Not used return value at recalculate and requery in TRIBERagequit.sol", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/138", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-fei-findings", "body": "Not used return value at recalculate and requery in TRIBERagequit.sol"}, {"title": "Wrong comments about key in TRIBERagequit", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/135", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Wrong comments about key in TRIBERagequit"}, {"title": "Loops can be implemented more efficiently", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/134", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Loops can be implemented more efficiently"}, {"title": "In TRIBERagequit.sol, users can get frontrunned ", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/131", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "In TRIBERagequit.sol, users can get frontrunned "}, {"title": "Value of token1OutBase might became stale in TRIBERagequit.sol", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/126", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Value of token1OutBase might became stale in TRIBERagequit.sol"}, {"title": "Gas Optimization: Unchecked safe logic in TRIBERagequit.sol", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/124", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Gas Optimization: Unchecked safe logic in TRIBERagequit.sol"}, {"title": "Inaccurate revert reason in TRIBERagequit.sol", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/122", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "Inaccurate revert reason in TRIBERagequit.sol"}, {"title": "Wrong `preMergeCirculatingTribe` value", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/112", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Wrong `preMergeCirculatingTribe` value"}, {"title": "TRIBERageQuit: Redundant oracleAddress variable", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/108", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "TRIBERageQuit: Redundant oracleAddress variable"}, {"title": "TRIBERagequit: Make verifyClaim() public", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/107", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "TRIBERagequit: Make verifyClaim() public"}, {"title": "PegExchanger#giveTo(): Use transfer() method instead of transferFrom()", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/104", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "PegExchanger#giveTo(): Use transfer() method instead of transferFrom()"}, {"title": "Use `calldata` instead of `memory` for function parameters", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "Use `calldata` instead of `memory` for function parameters"}, {"title": "Gas Optimization On The 2^256-1", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/100", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Gas Optimization On The 2^256-1"}, {"title": "Remove unnecessary variables can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/99", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Remove unnecessary variables can make the code simpler and save some gas"}, {"title": "`++i` is more efficient than `i++`", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/98", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "`++i` is more efficient than `i++`"}, {"title": " `TribeRagequit.sol` minter role to FEI is unnecessary", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/94", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": " `TribeRagequit.sol` minter role to FEI is unnecessary"}, {"title": "Remove unnecessary function can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/88", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-fei-findings", "body": "Remove unnecessary function can make the code simpler and save some gas"}, {"title": "`PegExchanger.sol` unused tribe tokens can be frozen in the contract", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/87", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "`PegExchanger.sol` unused tribe tokens can be frozen in the contract"}, {"title": "Improve readability of constants", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/84", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-fei-findings", "body": "Improve readability of constants"}, {"title": "Consider change some constants into immutable variables for settings that can be configured at deploy time", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/83", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Consider change some constants into immutable variables for settings that can be configured at deploy time"}, {"title": "Code Style: constants should be named in all caps", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/79", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-fei-findings", "body": "Code Style: constants should be named in all caps"}, {"title": "Use short reason strings can save gas", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/78", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "Use short reason strings can save gas"}, {"title": "Use else if can save gas", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/74", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Use else if can save gas"}, {"title": "`PegExchanger.sol#exchange()` Redundant code", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/71", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "`PegExchanger.sol#exchange()` Redundant code"}, {"title": "Missing events for critical operations", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/68", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-fei-findings", "body": "Missing events for critical operations"}, {"title": "Outdated compiler version", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/66", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Outdated compiler version"}, {"title": "False information given to the user", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "False information given to the user"}, {"title": "Expiration time shift", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/61", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Expiration time shift"}, {"title": "Unnatural interface", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/57", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-fei-findings", "body": "Unnatural interface"}, {"title": "Ragequit function ngmi() Will Fail Even If Follow All Steps in Simulations", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/47", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Ragequit function ngmi() Will Fail Even If Follow All Steps in Simulations"}, {"title": "Avoid On Chain Computation That Have Known Answer to Save Gas", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/45", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Avoid On Chain Computation That Have Known Answer to Save Gas"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/31", "labels": ["bug", "0 (Non-critical)"], "target": "2021-11-fei-findings", "body": "Open TODOs"}, {"title": "Require with not comprehensive message", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/29", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Require with not comprehensive message"}, {"title": "Public functions to external", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "Public functions to external"}, {"title": "Internal functions to private", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "Internal functions to private"}, {"title": "Storage double reading. Could save SLOAD", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/25", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Storage double reading. Could save SLOAD"}, {"title": "Gas saving in ngmi(uint256,uint256,bytes32[])", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fei-findings", "body": "Gas saving in ngmi(uint256,uint256,bytes32[])"}, {"title": "constructor should be removed if not used", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/12", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "constructor should be removed if not used"}, {"title": "Testing for initial condition on oracle query last saves gas.", "html_url": "https://github.com/code-423n4/2021-11-fei-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fei-findings", "body": "Testing for initial condition on oracle query last saves gas."}, {"title": "Inline functions _updateClaimedEpoch and _isClaimedEpoch", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/144", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "Inline functions _updateClaimedEpoch and _isClaimedEpoch"}, {"title": "Transfer amounts not checked for > 0 ", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/137", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "Transfer amounts not checked for > 0 "}, {"title": "Implement _calculateRewardAmount more efficiently", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/134", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Implement _calculateRewardAmount more efficiently"}, {"title": "`_nextPromotionId/_latestPromotionId` calculation can be done more efficiently", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/133", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "`_nextPromotionId/_latestPromotionId` calculation can be done more efficiently"}, {"title": "event PromotionCancelled should also emit the _to address", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/127", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "event PromotionCancelled should also emit the _to address"}, {"title": "extendPromotion function should be access controlled by using onlyPromotionCreator", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/126", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "extendPromotion function should be access controlled by using onlyPromotionCreator"}, {"title": "Unsafe uint64 casting may overflow", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/123", "labels": ["bug", "2 (Med Risk)"], "target": "2021-12-pooltogether-findings", "body": "Unsafe uint64 casting may overflow"}, {"title": "_requirePromotionActive allows actions before the promotion is active", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/115", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "_requirePromotionActive allows actions before the promotion is active"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/111", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Adding unchecked directive can save gas"}, {"title": "`getCurrentEpochId()` Malfunction for ended promotions", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/109", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "`getCurrentEpochId()` Malfunction for ended promotions"}, {"title": "`createPromotion()` Lack of input validation for `_epochDuration` can potentially freeze promotion creator's funds", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/106", "labels": ["bug", "3 (High Risk)"], "target": "2021-12-pooltogether-findings", "body": "`createPromotion()` Lack of input validation for `_epochDuration` can potentially freeze promotion creator's funds"}, {"title": "`cancelPromotion()` Unable to cancel unstarted promotions", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/101", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "`cancelPromotion()` Unable to cancel unstarted promotions"}, {"title": "Avoid unnecessary dynamic size array `_averageTotalSupplies` can save gas", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Avoid unnecessary dynamic size array `_averageTotalSupplies` can save gas"}, {"title": "`_requireTicket()` Implementation can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/90", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "`_requireTicket()` Implementation can be simpler and save some gas"}, {"title": "`getRewardsAmount` might return wrong result", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/80", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "`getRewardsAmount` might return wrong result"}, {"title": "TwarbRewards: don't use the onlyPromotionCreator modifier to save gas", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/77", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "TwarbRewards: don't use the onlyPromotionCreator modifier to save gas"}, {"title": "Dust Token Balances Cannot Be Claimed By An `admin` Account", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/75", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Dust Token Balances Cannot Be Claimed By An `admin` Account"}, {"title": "Missing Check When Transferring Tokens Out For A Given Promotion", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/70", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "Missing Check When Transferring Tokens Out For A Given Promotion"}, {"title": "Anyone can claim rewards on behalf of someone", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "Anyone can claim rewards on behalf of someone"}, {"title": "uint256 types can be uint64", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/58", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "uint256 types can be uint64"}, {"title": "Inconsistent definition of when an epoch ends", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Inconsistent definition of when an epoch ends"}, {"title": "getRewardsAmount doesn't check epochs haven't been claimed", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/50", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "getRewardsAmount doesn't check epochs haven't been claimed"}, {"title": "cancelPromotion() Does Not Send Promotion Tokens Back to the Creator", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/36", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-pooltogether-findings", "body": "cancelPromotion() Does Not Send Promotion Tokens Back to the Creator"}, {"title": "Check Zero Address Before Function Call Can Save Gas", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/35", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Check Zero Address Before Function Call Can Save Gas"}, {"title": "Contract does not work with fee-on transfer tokens", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/30", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Contract does not work with fee-on transfer tokens"}, {"title": "No sanity checks for user supplied promotion values", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/29", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "No sanity checks for user supplied promotion values"}, {"title": "cancelPromotion is too rigorous", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/23", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "cancelPromotion is too rigorous"}, {"title": "Continue claiming reqrds after numberOfEpochs are over", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/20", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Continue claiming reqrds after numberOfEpochs are over"}, {"title": "simplify require in _requirePromotionActive()", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "simplify require in _requirePromotionActive()"}, {"title": "Prefix increments are cheaper than postfix increments", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "Prefix increments are cheaper than postfix increments"}, {"title": "Caching array length can save gas", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/16", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Caching array length can save gas"}, {"title": "Short the following require messages", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Short the following require messages"}, {"title": "Struct packing", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/12", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Struct packing"}, {"title": "User can fund other user promotion by mistake", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-pooltogether-findings", "body": "User can fund other user promotion by mistake"}, {"title": "Backdated _startTimestamp can lead to loss of funds", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/8", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Backdated _startTimestamp can lead to loss of funds"}, {"title": "Rewards can be claimed multiple times", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/3", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Rewards can be claimed multiple times"}, {"title": "_getPromotion() doesn't revert on invalid _promotionId", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/2", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "_getPromotion() doesn't revert on invalid _promotionId"}, {"title": "Malicious tickets can lead to the loss of all tokens", "html_url": "https://github.com/code-423n4/2021-12-pooltogether-findings/issues/1", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-pooltogether-findings", "body": "Malicious tickets can lead to the loss of all tokens"}, {"title": "Use of deprecated `safeApprove()` function", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/177", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Use of deprecated `safeApprove()` function"}, {"title": "Reentrancy vulnerability in `Basket` contract's `initialize()` method.", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/176", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "Reentrancy vulnerability in `Basket` contract's `initialize()` method."}, {"title": "Basket:handleFees(): fees are overcharged", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/170", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Basket:handleFees(): fees are overcharged"}, {"title": "Auction:bondBurn(): cache bondAmount", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/167", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Auction:bondBurn(): cache bondAmount"}, {"title": "Auction:bondForRebalance() store calculation of bondAmount in local variable", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/166", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Auction:bondForRebalance() store calculation of bondAmount in local variable"}, {"title": "Check for tokenAmount > 0 is missing in pushUnderlying function [basket.sol]", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/165", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Check for tokenAmount > 0 is missing in pushUnderlying function [basket.sol]"}, {"title": "Auction:settleAuction() cache address(basket)", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/164", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Auction:settleAuction() cache address(basket)"}, {"title": "Function changePublisher, changeLicenseFee, and setNewMaxSupply  can be refactored for efficiency and clarity", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/162", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Function changePublisher, changeLicenseFee, and setNewMaxSupply  can be refactored for efficiency and clarity"}, {"title": "Function handleFees #L148-L151 and updateIBRatio (Basket.sol) can be refactored for efficiency and clarity", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/161", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Function handleFees #L148-L151 and updateIBRatio (Basket.sol) can be refactored for efficiency and clarity"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/157", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Open TODOs"}, {"title": "Missing cap on LicenseFee", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/154", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Missing cap on LicenseFee"}, {"title": "Fee calculation is slightly off", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/152", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Fee calculation is slightly off"}, {"title": "Factory can block auctions", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/150", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Factory can block auctions"}, {"title": "Division with `BASE` twice can be optimized ", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/147", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Division with `BASE` twice can be optimized "}, {"title": "`maxSupply` can be exceeded", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/146", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "`maxSupply` can be exceeded"}, {"title": "Change in `auctionMultiplier/auctionDecrement` change profitability of auctions and factory can steal all tokens from a basket abusing it", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/145", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "Change in `auctionMultiplier/auctionDecrement` change profitability of auctions and factory can steal all tokens from a basket abusing it"}, {"title": "`Basket.sol#auctionBurn` calculates `ibRatio` wrong", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/144", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "`Basket.sol#auctionBurn` calculates `ibRatio` wrong"}, {"title": "`mintTo` has not an extra require statement", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/142", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`mintTo` has not an extra require statement"}, {"title": "Loops can be implemented more efficiently", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/140", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Loops can be implemented more efficiently"}, {"title": "For uint `> 0` can be replaced with ` != 0` for gas optimization", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/139", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "For uint `> 0` can be replaced with ` != 0` for gas optimization"}, {"title": "Use negate(!) rather than `== false`", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/138", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Use negate(!) rather than `== false`"}, {"title": "Extra payments for an auction gets stucks", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/137", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Extra payments for an auction gets stucks"}, {"title": "TODO comments should be resolved ", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/135", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "TODO comments should be resolved "}, {"title": "`BasketLicenseProposed` better emit proposal id", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/134", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "`BasketLicenseProposed` better emit proposal id"}, {"title": "Gas Optimization: Use calldata instead of memory", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/130", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Gas Optimization: Use calldata instead of memory"}, {"title": "Gas Optimization: Reorder storage layout", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/129", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Gas Optimization: Reorder storage layout"}, {"title": "`Auction.sol#initialize()` Use msg.sender rather than factory_ parameter can save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/126", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`Auction.sol#initialize()` Use msg.sender rather than factory_ parameter can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/123", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Cache external call results can save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/122", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Cache external call results can save gas"}, {"title": "Unnecessary checked arithmetic in for loops", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/121", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Unnecessary checked arithmetic in for loops"}, {"title": "`++i` is more efficient than `i++`", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/120", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`++i` is more efficient than `i++`"}, {"title": "`validateWeights()` Limit loop to a meaningful bound can save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/118", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`validateWeights()` Limit loop to a meaningful bound can save gas"}, {"title": "Use free functions to replace external calls can save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/117", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Use free functions to replace external calls can save gas"}, {"title": "`NewIndexSubmitted` event is not emitted in some case", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/115", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "`NewIndexSubmitted` event is not emitted in some case"}, {"title": "Useless imports", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/113", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Useless imports"}, {"title": "Critical operations should emit events", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/112", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Critical operations should emit events"}, {"title": "`Factory.sol` Lack of two-step procedure and/or input validation routines for critical operations leaves them error-prone", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/111", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "`Factory.sol` Lack of two-step procedure and/or input validation routines for critical operations leaves them error-prone"}, {"title": "`Basket.sol#handleFees()` Check if `timeDiff > 0` can save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/110", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`Basket.sol#handleFees()` Check if `timeDiff > 0` can save gas"}, {"title": "`Auction.sol#auctionOngoing` Switching between 1, 2 instead of true, false is more gas efficient", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/107", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`Auction.sol#auctionOngoing` Switching between 1, 2 instead of true, false is more gas efficient"}, {"title": "`Auction.sol#settleAuction()` Bonder may not be able to settle a bonded auction, leading to loss of funds", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/106", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "`Auction.sol#settleAuction()` Bonder may not be able to settle a bonded auction, leading to loss of funds"}, {"title": "`Basket.sol` should use the Upgradeable variant of OpenZeppelin Contracts", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/104", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "`Basket.sol` should use the Upgradeable variant of OpenZeppelin Contracts"}, {"title": "`Basket.sol` Pending licenseFee may unable to be canceled when current licenseFee is `0`", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/103", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-defiprotocol-findings", "body": "`Basket.sol` Pending licenseFee may unable to be canceled when current licenseFee is `0`"}, {"title": "`Basket.sol#approveUnderlying()` Cache and read storage variables from the stack can save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/100", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`Basket.sol#approveUnderlying()` Cache and read storage variables from the stack can save gas"}, {"title": "`Basket.sol#changeLicenseFee()` Unable to set `licenseFee` to 0", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/97", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "`Basket.sol#changeLicenseFee()` Unable to set `licenseFee` to 0"}, {"title": "Missing error messages in require statements", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/93", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Missing error messages in require statements"}, {"title": "`Basket.sol#initialize()` Remove redundant assertion can save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/92", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`Basket.sol#initialize()` Remove redundant assertion can save gas"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/91", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Unused imports"}, {"title": "Outdated compiler version", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/90", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Outdated compiler version"}, {"title": "Broken unit tests due to incorrect values", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/88", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Broken unit tests due to incorrect values"}, {"title": "Avoid Initialization of Loop Index If It Is 0 to Save Gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/84", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Avoid Initialization of Loop Index If It Is 0 to Save Gas"}, {"title": "setAuctionDecrement() Lack of Input Validation May Break Other Function", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/83", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "setAuctionDecrement() Lack of Input Validation May Break Other Function"}, {"title": "setAuctionMultiplier() Lack of Input Validation May Break Other Function", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/82", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "setAuctionMultiplier() Lack of Input Validation May Break Other Function"}, {"title": "Possible division by zero in `settleAuction`", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/77", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Possible division by zero in `settleAuction`"}, {"title": "Unnecessary variable initialization and TODO in code", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/76", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Unnecessary variable initialization and TODO in code"}, {"title": "Basket can be fully drained if the auction is settled within a specific block", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/74", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "Basket can be fully drained if the auction is settled within a specific block"}, {"title": "Wrong syntax in test leads to wrong test results", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/62", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Wrong syntax in test leads to wrong test results"}, {"title": "Lost fees due to precision loss in fees calculation", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/60", "labels": ["bug", "2 (Med Risk)"], "target": "2021-12-defiprotocol-findings", "body": "Lost fees due to precision loss in fees calculation"}, {"title": "Wrong fee calculation after totalSupply was 0", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/58", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "Wrong fee calculation after totalSupply was 0"}, {"title": "`auctionImpl` and `basketImpl` in factory can be made immutable for gas savings", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/57", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "`auctionImpl` and `basketImpl` in factory can be made immutable for gas savings"}, {"title": "Bonding doesn't seem to perform any meaningful role and leads to inefficient auctions", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/56", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Bonding doesn't seem to perform any meaningful role and leads to inefficient auctions"}, {"title": "Publisher can lock all user funds in the Basket in order to force a user to have their bond burned", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/53", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Publisher can lock all user funds in the Basket in order to force a user to have their bond burned"}, {"title": "Incorrent visibility for \"initialized\" variable", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/50", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "Incorrent visibility for \"initialized\" variable"}, {"title": "Basket:pushUnderlying()/pullUnderlying() cache ibRatio to save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/49", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Basket:pushUnderlying()/pullUnderlying() cache ibRatio to save gas"}, {"title": "Basket:handleFees() use unchecked to save gas", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/47", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Basket:handleFees() use unchecked to save gas"}, {"title": "Basket:initialize() reuse function argument instead of storage variable", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/46", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Basket:initialize() reuse function argument instead of storage variable"}, {"title": "Factory:constructor don't need to zero initialize storage variable", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/45", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Factory:constructor don't need to zero initialize storage variable"}, {"title": "Factory:setOwnerSplit owner fee split can be set to exactly 20%", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/44", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Factory:setOwnerSplit owner fee split can be set to exactly 20%"}, {"title": "Basket:handleFees fee calculation is wrong", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/43", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "Basket:handleFees fee calculation is wrong"}, {"title": "Publisher switch logic can be simplified", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/41", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Publisher switch logic can be simplified"}, {"title": "Excessive checking of basket totalsupply", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/38", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Excessive checking of basket totalsupply"}, {"title": "Auction.hasBonded variable is unnecessary", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/37", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Auction.hasBonded variable is unnecessary"}, {"title": "Auction.auctionOngoing variable is unnecessary", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/36", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Auction.auctionOngoing variable is unnecessary"}, {"title": "changeLicenseFee() and fees for previous period", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/33", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "changeLicenseFee() and fees for previous period"}, {"title": "Emit for publishNewIndex / killAuction part", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/32", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-defiprotocol-findings", "body": "Emit for publishNewIndex / killAuction part"}, {"title": "Missing Revert Messages", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/31", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Missing Revert Messages"}, {"title": "`Ownable` Contract Does Not Implement Two-Step Transfer Ownership Pattern", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/30", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "`Ownable` Contract Does Not Implement Two-Step Transfer Ownership Pattern"}, {"title": "Not verified function inputs of public / external functions", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/27", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-12-defiprotocol-findings", "body": "Not verified function inputs of public / external functions"}, {"title": "Storage double reading. Could save SLOAD", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/18", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Storage double reading. Could save SLOAD"}, {"title": "Lack of event indexing", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/15", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Lack of event indexing"}, {"title": "Remove override keyword from Basket", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/13", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Remove override keyword from Basket"}, {"title": "Remove override keyword from Auction", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/12", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Remove override keyword from Auction"}, {"title": "Use of Require statement without reason message", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/10", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Use of Require statement without reason message"}, {"title": "Remove override keyword", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/9", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Remove override keyword"}, {"title": "Lack of input verification", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/8", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Lack of input verification"}, {"title": "Gas: Redundant check in `setNewMaxSupply`", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/7", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Gas: Redundant check in `setNewMaxSupply`"}, {"title": "Lack of message in require statments", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/6", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Lack of message in require statments"}, {"title": "Lack of revert reason strings", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/5", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-defiprotocol-findings", "body": "Lack of revert reason strings"}, {"title": "Minted and Burned events are unnecessary", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/4", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Minted and Burned events are unnecessary"}, {"title": "Extra ERC20 approvals/transfers on Basket deployment", "html_url": "https://github.com/code-423n4/2021-12-defiprotocol-findings/issues/2", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-defiprotocol-findings", "body": "Extra ERC20 approvals/transfers on Basket deployment"}, {"title": "Missing return statements", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/301", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-yetifinance-findings", "body": "Missing return statements"}, {"title": "claimYeti inclusive check", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/300", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "claimYeti inclusive check"}, {"title": "Gas Optimization: Unnecessary variables", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/299", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Gas Optimization: Unnecessary variables"}, {"title": "_isBeforeFeeBootstrapPeriod inside the loop", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/296", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "_isBeforeFeeBootstrapPeriod inside the loop"}, {"title": "Cache repeated calculations", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/294", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Cache repeated calculations"}, {"title": "exists check passes when validCollateral length is 0", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/292", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "exists check passes when validCollateral length is 0"}, {"title": "`_redeemCaller` should not obtain rights to future rewards for the `WJLP` they redeemed", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/291", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "`_redeemCaller` should not obtain rights to future rewards for the `WJLP` they redeemed"}, {"title": "Attacker can steal future rewards of `WJLP` from other users", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/290", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Attacker can steal future rewards of `WJLP` from other users"}, {"title": "Cache storage variables in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/289", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Cache storage variables in the stack can save gas"}, {"title": "Infinite mint", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/287", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Infinite mint"}, {"title": "Unsafe approve in sYETIToken", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/286", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-yetifinance-findings", "body": "Unsafe approve in sYETIToken"}, {"title": "Liquidation can be escaped by depositing a WJLP with `_rewardOwner` != `_borrower`", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/284", "labels": ["bug", "3 (High Risk)"], "target": "2021-12-yetifinance-findings", "body": "Liquidation can be escaped by depositing a WJLP with `_rewardOwner` != `_borrower`"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/283", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Cache array length in for loops can save gas"}, {"title": "Only using `SafeMath` when necessary can save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/281", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Only using `SafeMath` when necessary can save gas"}, {"title": "Only use `amount` when needed can save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/279", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Only use `amount` when needed can save gas"}, {"title": "Inline unnecessary function can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/278", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Inline unnecessary function can make the code simpler and save some gas"}, {"title": "`HintHelpers.sol#setAddresses()` can be replaced with `constructor` and save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/277", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "`HintHelpers.sol#setAddresses()` can be replaced with `constructor` and save gas"}, {"title": "`10 ** 18` can be changed to `1e18` and save some gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/274", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "`10 ** 18` can be changed to `1e18` and save some gas"}, {"title": "Public functions not used by current contract should be external", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/270", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Public functions not used by current contract should be external"}, {"title": "Tokens with fee on transfer are not supported", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/268", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Tokens with fee on transfer are not supported"}, {"title": "Missing error messages in require statements", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/265", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-yetifinance-findings", "body": "Missing error messages in require statements"}, {"title": "TeamLockup releases more tokens that it should", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/263", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "TeamLockup releases more tokens that it should"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/261", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Adding unchecked directive can save gas"}, {"title": "`ERC20_8.sol` `totalSupply` should be increased on `mint` and decreased on `burn`", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/259", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-yetifinance-findings", "body": "`ERC20_8.sol` `totalSupply` should be increased on `mint` and decreased on `burn`"}, {"title": "Race condition on ERC20 approval", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/252", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-yetifinance-findings", "body": "Race condition on ERC20 approval"}, {"title": "`YetiFinanceTreasury.sol#updateTeamWallet()` should implement two-step transfer pattern", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/251", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-yetifinance-findings", "body": "`YetiFinanceTreasury.sol#updateTeamWallet()` should implement two-step transfer pattern"}, {"title": "Wrong vesting schedule for YETI mentioned in LockupContract", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/250", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Wrong vesting schedule for YETI mentioned in LockupContract"}, {"title": "SafeMath with Solidity 0.8", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/246", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "SafeMath with Solidity 0.8"}, {"title": "Deleting a mapping within a struct", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/245", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Deleting a mapping within a struct"}, {"title": "ecrecover 0 address", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/244", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "ecrecover 0 address"}, {"title": "Rescue assets in treasury contract", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/243", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Rescue assets in treasury contract"}, {"title": "setAddresses should only be callable once", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/240", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "setAddresses should only be callable once"}, {"title": "TODOs", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/238", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-yetifinance-findings", "body": "TODOs"}, {"title": "`WJLP.getPendingRewards()` should be aview function", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/233", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "`WJLP.getPendingRewards()` should be aview function"}, {"title": "CollSurplusPool doesn't verify that the passed `_whitelistAddress` is an actual contract addres", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/230", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "CollSurplusPool doesn't verify that the passed `_whitelistAddress` is an actual contract addres"}, {"title": "Ownable doesn't allow transferring ownership", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/228", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-12-yetifinance-findings", "body": "Ownable doesn't allow transferring ownership"}, {"title": "GAS: packing structs saves gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/224", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "GAS: packing structs saves gas"}, {"title": "Lack of precision", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/221", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Lack of precision"}, {"title": "No sanity check of safe ratio when adding collateral", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/217", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "No sanity check of safe ratio when adding collateral"}, {"title": "Gas: Unnecessary deadline increase", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/211", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Gas: Unnecessary deadline increase"}, {"title": "ActivePool unwraps but does not update user state in WJLP", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/209", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "ActivePool unwraps but does not update user state in WJLP"}, {"title": "Wrapped JLP can be stolen", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/208", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-12-yetifinance-findings", "body": "Wrapped JLP can be stolen"}, {"title": "Wrong `lastBuyBackPrice`", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/206", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Wrong `lastBuyBackPrice`"}, {"title": "sYETIToken does not emit Approval event in `transferFrom`", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/205", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "sYETIToken does not emit Approval event in `transferFrom`"}, {"title": "Fee not decayed if past `decayTime`", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/204", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Fee not decayed if past `decayTime`"}, {"title": "rong comment in `getFee`", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/203", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "rong comment in `getFee`"}, {"title": "`lastFeePercent` can be > 100%", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/202", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "`lastFeePercent` can be > 100%"}, {"title": "`lastFeeTime` can be reset", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/201", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "`lastFeeTime` can be reset"}, {"title": "Cannot use most piecewise linear functions with current implementation", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/200", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Cannot use most piecewise linear functions with current implementation"}, {"title": "Missing cutoff checks in `adjustParams`", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/199", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Missing cutoff checks in `adjustParams`"}, {"title": "Collateral parameters can be overwritten", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/198", "labels": ["bug", "2 (Med Risk)"], "target": "2021-12-yetifinance-findings", "body": "Collateral parameters can be overwritten"}, {"title": "Missing duplicate checks in `withdrawColl`", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/197", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-yetifinance-findings", "body": "Missing duplicate checks in `withdrawColl`"}, {"title": "contracts/Dependencies/CheckContract.sol has a potential gas optimization", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/189", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "contracts/Dependencies/CheckContract.sol has a potential gas optimization"}, {"title": "contracts/TroveManagerRedemptions.sol is missing inheritance", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/188", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "contracts/TroveManagerRedemptions.sol is missing inheritance"}, {"title": "contracts/TroveManagerLiquidations.sol is missing inheritance", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/187", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "contracts/TroveManagerLiquidations.sol is missing inheritance"}, {"title": "Reentrancy in contracts/BorrowerOperations.sol", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/183", "labels": ["bug", "2 (Med Risk)"], "target": "2021-12-yetifinance-findings", "body": "Reentrancy in contracts/BorrowerOperations.sol"}, {"title": "NamespaceCollision: Multiple SafeMath contracts", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/181", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "NamespaceCollision: Multiple SafeMath contracts"}, {"title": "Multiple contracts or interfaces with the same name", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/180", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Multiple contracts or interfaces with the same name"}, {"title": "\"constants\" expressions are expressions, not constants, so constant\u00a0`keccak`\u00a0variables results in extra hashing (and so gas).", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/175", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "\"constants\" expressions are expressions, not constants, so constant\u00a0`keccak`\u00a0variables results in extra hashing (and so gas)."}, {"title": "!= 0 costs less gass compared to > 0 for unsigned integer inside pure or view functions", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/173", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "!= 0 costs less gass compared to > 0 for unsigned integer inside pure or view functions"}, {"title": "Check if transfer amount > 0", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/171", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Check if transfer amount > 0"}, {"title": "Explicit initialization with zero not required", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/170", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Explicit initialization with zero not required"}, {"title": "Bytes constants are more efficient than string constants", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/169", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Bytes constants are more efficient than string constants"}, {"title": "Use of uint8 for counter in for loop increases gas costs", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/168", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Use of uint8 for counter in for loop increases gas costs"}, {"title": "Incompatibility With Rebasing/Deflationary/Inflationary tokens", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/167", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Incompatibility With Rebasing/Deflationary/Inflationary tokens"}, {"title": "Use `calldata` instead of `memory` for function parameters", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/164", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Use `calldata` instead of `memory` for function parameters"}, {"title": "Declare state variables as immutable", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/162", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Declare state variables as immutable"}, {"title": "Mixed compiler versions", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/158", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-yetifinance-findings", "body": "Mixed compiler versions"}, {"title": "Usage of assert() instead of require()", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/157", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Usage of assert() instead of require()"}, {"title": "Wrong assumption that wrapped asset holder is receiver of wrapped asset rewards", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/153", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Wrong assumption that wrapped asset holder is receiver of wrapped asset rewards"}, {"title": "StabilityPool does not update rewards when upwrapping wrapped asset", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/152", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "StabilityPool does not update rewards when upwrapping wrapped asset"}, {"title": "Out of gas.", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/151", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Out of gas."}, {"title": "ActivePool does not update rewards before unwrapping wrapped asset", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/150", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "ActivePool does not update rewards before unwrapping wrapped asset"}, {"title": "Gas saving", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/148", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Gas saving"}, {"title": "Unwhitelisted token can cause disaster", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/146", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Unwhitelisted token can cause disaster"}, {"title": "Target pool does not get updated due to receiveCollateral not being called", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/145", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Target pool does not get updated due to receiveCollateral not being called"}, {"title": "Deprecated collateral check is missing in sendCollaterals", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/144", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Deprecated collateral check is missing in sendCollaterals"}, {"title": "Gas savings: Require statement is not needed", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/143", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Gas savings: Require statement is not needed"}, {"title": "WJLP loses unclaimed rewards when updating user's rewards", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/141", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "WJLP loses unclaimed rewards when updating user's rewards"}, {"title": "Gas savings", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/139", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Gas savings"}, {"title": "Unused WJLP can't be simply unwrapped", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/138", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Unused WJLP can't be simply unwrapped"}, {"title": "Reward not transferred correctly", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/137", "labels": ["bug", "2 (Med Risk)", "disagree with severity"], "target": "2021-12-yetifinance-findings", "body": "Reward not transferred correctly"}, {"title": "WJLP will continue accruing rewards after user has unwrapped his tokens", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/136", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "WJLP will continue accruing rewards after user has unwrapped his tokens"}, {"title": "Gas saving in ShortLockupContract", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/133", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Gas saving in ShortLockupContract"}, {"title": "Use immutable", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/132", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Use immutable"}, {"title": "Less than 256 uints are not gas efficient", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/123", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Less than 256 uints are not gas efficient"}, {"title": "Yeti token rebase checks the additional token amount incorrectly", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/121", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Yeti token rebase checks the additional token amount incorrectly"}, {"title": "BorrowerOperations and StabilityPool trove status check depends on the enumeration order", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/120", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "BorrowerOperations and StabilityPool trove status check depends on the enumeration order"}, {"title": "WJLP contract doesn't check for JOE and JLP token transfers success", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/107", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "WJLP contract doesn't check for JOE and JLP token transfers success"}, {"title": "Debug code left over in WJLP.unwrapFor", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/106", "labels": ["bug", "disagree with severity", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Debug code left over in WJLP.unwrapFor"}, {"title": "WJLP setAddresses initialization can be front run", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/105", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "WJLP setAddresses initialization can be front run"}, {"title": "Checking zero address on msg.sender is impractical", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/103", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Checking zero address on msg.sender is impractical"}, {"title": "uint is always >= 0", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "uint is always >= 0"}, {"title": "sYETIToken rebase comment should be 'added is not more than repurchased'", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/100", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "sYETIToken rebase comment should be 'added is not more than repurchased'"}, {"title": "BorrowerOperations has unused pieces of functionality", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/99", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "BorrowerOperations has unused pieces of functionality"}, {"title": "User facing BorrowerOperations and TroveManager miss emergency lever", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/97", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "User facing BorrowerOperations and TroveManager miss emergency lever"}, {"title": "BorrowerOperations.withdrawColl doesn't check the length of the caller supplied arrays", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/96", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "BorrowerOperations.withdrawColl doesn't check the length of the caller supplied arrays"}, {"title": "Consider making some constants as non-public to save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Consider making some constants as non-public to save gas"}, {"title": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/94", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-yetifinance-findings", "body": "Use safeTransfer/safeTransferFrom consistently instead of transfer/transferFrom"}, {"title": "SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/91", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS"}, {"title": "Delete - ABI Coder V2 For Gas Optimization", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/89", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Delete - ABI Coder V2 For Gas Optimization"}, {"title": "A variable is being assigned its default value which is unnecessary.", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "A variable is being assigned its default value which is unnecessary."}, {"title": "Unipool's and Pool2Unipool's setParams can be run repeatedly", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/86", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Unipool's and Pool2Unipool's setParams can be run repeatedly"}, {"title": "Unnecessary use of Safemath", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/85", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Unnecessary use of Safemath"}, {"title": "Missing events in critical functions", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/84", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Missing events in critical functions"}, {"title": "Upgrading the solc compiler to >=0.8 may save gas ", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Upgrading the solc compiler to >=0.8 may save gas "}, {"title": "Avoid unnecessary storage read can save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/79", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Avoid unnecessary storage read can save gas"}, {"title": "TellorCaller.sol constructor does not guard against zero address", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/78", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "TellorCaller.sol constructor does not guard against zero address"}, {"title": "sendAllocatedYETI() can be called by anyone", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/75", "labels": ["bug", "invalid", "3 (High Risk)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "sendAllocatedYETI() can be called by anyone"}, {"title": "receiveCollateral() can be called by anyone", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/74", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "receiveCollateral() can be called by anyone"}, {"title": "Useless imports", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Useless imports"}, {"title": "Remove GasPool.sol since its not needed ", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/71", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-12-yetifinance-findings", "body": "Remove GasPool.sol since its not needed "}, {"title": "Caching variables", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/70", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Caching variables"}, {"title": "Wrapped Joe LP token Contract  JLP token variable is set on initialization, doesn't change afterwards and should be immutable", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/69", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Wrapped Joe LP token Contract  JLP token variable is set on initialization, doesn't change afterwards and should be immutable"}, {"title": "Consider removing BaseBoringBatchable.sol", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/68", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Consider removing BaseBoringBatchable.sol"}, {"title": "Long Revert Strings", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/66", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2021-12-yetifinance-findings", "body": "Long Revert Strings"}, {"title": "Use of Large Number Literals", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Use of Large Number Literals"}, {"title": "Unused functions can be removed to save gas", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/63", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Unused functions can be removed to save gas"}, {"title": "WJLP.sol does not make use of important events to emit ", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "WJLP.sol does not make use of important events to emit "}, {"title": "_from and _to can be the same address on wrap() function", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/58", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "_from and _to can be the same address on wrap() function"}, {"title": "Named return issue", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/24", "labels": ["bug", "disagree with severity", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Named return issue"}, {"title": "Must approve 0 first", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/18", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Must approve 0 first"}, {"title": "Unnecessary payable", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/15", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "Unnecessary payable"}, {"title": "Prefix increments are cheaper than postfix increments", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/12", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Prefix increments are cheaper than postfix increments"}, {"title": "Unnecessary array boundaries check when loading an array element twice", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/11", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Unnecessary array boundaries check when loading an array element twice"}, {"title": "State variables that could be set immutable", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/10", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-yetifinance-findings", "body": "State variables that could be set immutable"}, {"title": "Storage double reading. Could save SLOAD", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/8", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Storage double reading. Could save SLOAD"}, {"title": "Short the following require messages", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/7", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Short the following require messages"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-12-yetifinance-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-yetifinance-findings", "body": "Unused imports"}, {"title": "unsponsor, claimYield and withdraw might fail unexpectadly", "html_url": "https://github.com/code-423n4/2022-01-sandclock-findings/issues/76", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "sponsor vault"], "target": "2022-01-sandclock-findings", "body": "unsponsor, claimYield and withdraw might fail unexpectadly"}, {"title": "Users can be frontrunned with higher fees", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/296", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Users can be frontrunned with higher fees"}, {"title": "Missing zero address validation on setRebalanceManager function", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/295", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-amun-findings", "body": "Missing zero address validation on setRebalanceManager function"}, {"title": "token.approve() doesn\u2019t check return value", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/294", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "token.approve() doesn\u2019t check return value"}, {"title": "rounding error not in favor of the system", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/293", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "rounding error not in favor of the system"}, {"title": "Validate diamond implementation is not empty", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/292", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Validate diamond implementation is not empty"}, {"title": "_swapsV3 after the _swapsV2", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/291", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "_swapsV3 after the _swapsV2"}, {"title": "_maxApprove user input", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/289", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-amun-findings", "body": "_maxApprove user input"}, {"title": "It might not be possible to withdraw tokens from the basket", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/287", "labels": ["bug", "3 (High Risk)"], "target": "2021-12-amun-findings", "body": "It might not be possible to withdraw tokens from the basket"}, {"title": "uniSwapLikeRouter or swap.exchange", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/286", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "uniSwapLikeRouter or swap.exchange"}, {"title": "`totalSupply` may exceed `LibBasketStorage.basketStorage().maxCap`", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/283", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "`totalSupply` may exceed `LibBasketStorage.basketStorage().maxCap`"}, {"title": "Assigning keccak operations to constant variables results in extra gas costs", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/281", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Assigning keccak operations to constant variables results in extra gas costs"}, {"title": "Annualized fee APY dependence on the frequency of executing a function", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/280", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Annualized fee APY dependence on the frequency of executing a function"}, {"title": "Owner can add more tokens than `MAX_TOKENS` in `BasketFacet`", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/278", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-amun-findings", "body": "Owner can add more tokens than `MAX_TOKENS` in `BasketFacet`"}, {"title": "emit Transfer on withdraw", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/277", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "emit Transfer on withdraw"}, {"title": "It is possible to \"uninitialize\" `ERC20Facet` contract", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/276", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "It is possible to \"uninitialize\" `ERC20Facet` contract"}, {"title": "mint and burn of PolygonERC20Wrapper", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/275", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "mint and burn of PolygonERC20Wrapper"}, {"title": "Incorrect revert reason in `CallFacet::addCaller(...)`", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/273", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-12-amun-findings", "body": "Incorrect revert reason in `CallFacet::addCaller(...)`"}, {"title": "Division by `10 ** 18`", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/272", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Division by `10 ** 18`"}, {"title": "Redundant rewriting to memory", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/271", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Redundant rewriting to memory"}, {"title": "Call function internally instead of externally", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/270", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Call function internally instead of externally"}, {"title": "Approve 0 first", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/269", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "Approve 0 first"}, {"title": "Use id to manage itarable addresses", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/268", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Use id to manage itarable addresses"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/267", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Open TODOs"}, {"title": "Add `contractOwner` to `canCall` in `CallFacet`", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/266", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Add `contractOwner` to `canCall` in `CallFacet`"}, {"title": "Assigning local variables to unchanging storage variables", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/264", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Assigning local variables to unchanging storage variables"}, {"title": "10**18 = HUNDRED_PERCENT", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/262", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "10**18 = HUNDRED_PERCENT"}, {"title": "Pack structs tightly", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/260", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Pack structs tightly"}, {"title": "Not used variables", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/257", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-12-amun-findings", "body": "Not used variables"}, {"title": "Missing zero address check in setRebalanceManager", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/255", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Missing zero address check in setRebalanceManager"}, {"title": "ETH that is accidentally sent to a receive() function cannot be withdrawn", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/253", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "ETH that is accidentally sent to a receive() function cannot be withdrawn"}, {"title": "Loops can be implemented more efficiently", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/249", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Loops can be implemented more efficiently"}, {"title": "Due to lack of input validation , self transfer can happen", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/244", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-amun-findings", "body": "Due to lack of input validation , self transfer can happen"}, {"title": "No minimum fees is defined ", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/243", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-12-amun-findings", "body": "No minimum fees is defined "}, {"title": "Lack of access modifier in Initialize() ", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/241", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "Lack of access modifier in Initialize() "}, {"title": "Missing zero address check in setDefaultController", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/240", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Missing zero address check in setDefaultController"}, {"title": "Unchecked return value from  low-level call()", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/237", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Unchecked return value from  low-level call()"}, {"title": "Use of floating pragma", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/230", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Use of floating pragma"}, {"title": "Lack of zero-address checks", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/228", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Lack of zero-address checks"}, {"title": "Internal call is more efficient than external call", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/227", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Internal call is more efficient than external call"}, {"title": "`RebalanceManager.sol#setRebalanceManager()` should implement two-step transfer pattern", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/226", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "`RebalanceManager.sol#setRebalanceManager()` should implement two-step transfer pattern"}, {"title": "Avoid unnecessary external calls can save gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/225", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Avoid unnecessary external calls can save gas"}, {"title": "Tokens with fee on transfer are not supported", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/220", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "Tokens with fee on transfer are not supported"}, {"title": "`SingleTokenJoin#joinTokenSingle()` Change `inputAmount` to `maxInputAmount` can avoid dust INTERMEDIATE_TOKEN and save gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/215", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "`SingleTokenJoin#joinTokenSingle()` Change `inputAmount` to `maxInputAmount` can avoid dust INTERMEDIATE_TOKEN and save gas"}, {"title": "Remove unnecessary variables can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/214", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Remove unnecessary variables can make the code simpler and save some gas"}, {"title": "Reuse operation results can save gas ", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/213", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Reuse operation results can save gas "}, {"title": "PolygonERC20Wrapper does not need to be ERC20", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/211", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "PolygonERC20Wrapper does not need to be ERC20"}, {"title": "Use short circuiting can save gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/209", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Use short circuiting can save gas"}, {"title": "PolygonERC20Wrapper can emit burn event instead of calling ERC20 functions", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/208", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "PolygonERC20Wrapper can emit burn event instead of calling ERC20 functions"}, {"title": "Avoid unnecessary storage read can save gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/207", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Avoid unnecessary storage read can save gas"}, {"title": "Avoid repeated arithmetic operations in for loop can save gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/205", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Avoid repeated arithmetic operations in for loop can save gas"}, {"title": "`10 ** 18` can be changed to `1e18` and save some gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/203", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "`10 ** 18` can be changed to `1e18` and save some gas"}, {"title": "`ReentryProtection.sol` Switching between 1, 2 instead of increasing `lockCounter` is more gas efficient", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/202", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "`ReentryProtection.sol` Switching between 1, 2 instead of increasing `lockCounter` is more gas efficient"}, {"title": "Unused ERC20 tokens are not refunded, and can be stolen by attacker", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/201", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Unused ERC20 tokens are not refunded, and can be stolen by attacker"}, {"title": "input amount might be wrong", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/200", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "input amount might be wrong"}, {"title": "Intermediate max-input-amount check in `_joinTokenSingle` is unnecessary", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/196", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Intermediate max-input-amount check in `_joinTokenSingle` is unnecessary"}, {"title": "Gas: Intermediate min-return check in `_joinTokenSingle` is unnecessary", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/195", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Gas: Intermediate min-return check in `_joinTokenSingle` is unnecessary"}, {"title": "`_joinTokenSingle` can easily fail", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/194", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "`_joinTokenSingle` can easily fail"}, {"title": "ERC20 return values not checked", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/192", "labels": ["bug", "2 (Med Risk)"], "target": "2021-12-amun-findings", "body": "ERC20 return values not checked"}, {"title": "Wrapped native token is assumed as the `INTERMEDIATE_TOKEN`", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/190", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "Wrapped native token is assumed as the `INTERMEDIATE_TOKEN`"}, {"title": "Same facet can be added several times", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/189", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "Same facet can be added several times"}, {"title": "Rebalance manager can steal tokens", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/186", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-12-amun-findings", "body": "Rebalance manager can steal tokens"}, {"title": "`initialize` functions can be frontrun", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/185", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "`initialize` functions can be frontrun"}, {"title": "Use `IWrappedNativeToken.deposit()` can save some gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/184", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Use `IWrappedNativeToken.deposit()` can save some gas"}, {"title": "Unnecessary struct in SingleNativeTokenExitV2", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/177", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Unnecessary struct in SingleNativeTokenExitV2"}, {"title": "SingleNativeTokenExitV2 assumes first exchange holds the outputToken", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/176", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "SingleNativeTokenExitV2 assumes first exchange holds the outputToken"}, {"title": "Don't use transfer()", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/175", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Don't use transfer()"}, {"title": "Change function visibility from public to external", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/174", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Change function visibility from public to external"}, {"title": "Only pass lockBlock as parameter instead of LibBasketStorage.basketStorage()", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/171", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Only pass lockBlock as parameter instead of LibBasketStorage.basketStorage()"}, {"title": "pointless amountOutMin", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/167", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "pointless amountOutMin"}, {"title": "Basket might be unusable after initialization due to _initialSupply = 0", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/159", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Basket might be unusable after initialization due to _initialSupply = 0"}, {"title": "Lost annualized fees due to early division", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/155", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Lost annualized fees due to early division"}, {"title": "Consider making some constants as non-public to save gas", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/152", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Consider making some constants as non-public to save gas"}, {"title": "Gas saving", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/145", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Gas saving"}, {"title": "Gas can be saved  in the `calcTokensForAmount()` loop", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/141", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Gas can be saved  in the `calcTokensForAmount()` loop"}, {"title": "Locking logic in Rebalancers can be changed to avoid SSTOREs.", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/140", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Locking logic in Rebalancers can be changed to avoid SSTOREs."}, {"title": "Unused state variables in MintableERC20", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/139", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Unused state variables in MintableERC20"}, {"title": "Unlocked compiler version", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/138", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Unlocked compiler version"}, {"title": "Typo in event name", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/137", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Typo in event name"}, {"title": "Lacking zero address checks", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/136", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Lacking zero address checks"}, {"title": "Zero transfers", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/129", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Zero transfers"}, {"title": "Missing validation of address argument could indefinitely lock RebalanceManager contracts", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/125", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Missing validation of address argument could indefinitely lock RebalanceManager contracts"}, {"title": "Missing checks if pairs equal tokens", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/124", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Missing checks if pairs equal tokens"}, {"title": "Less than 256 uints are not gas efficient", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/120", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Less than 256 uints are not gas efficient"}, {"title": "Use a constant instead of block.timestamp for the deadline", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/117", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Use a constant instead of block.timestamp for the deadline"}, {"title": "Possible Re-entrancy", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/116", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Possible Re-entrancy"}, {"title": "Revert String Size Optimization", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/111", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Revert String Size Optimization"}, {"title": "++i is more gas efficient than i++ in loops forwarding", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/108", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "++i is more gas efficient than i++ in loops forwarding"}, {"title": "Delete - ABI Coder V2 For Gas Optimization", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/107", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Delete - ABI Coder V2 For Gas Optimization"}, {"title": "Upgrade pragma to at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/106", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Upgrade pragma to at least 0.8.4"}, {"title": "Use of _msgSender()", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/105", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Use of _msgSender()"}, {"title": "Gas savings", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/92", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Gas savings"}, {"title": "Add zero-address check in `setRebalanceManager()`", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/91", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "Add zero-address check in `setRebalanceManager()`"}, {"title": "In my opinion in the future, hopefully there will be improvements in ui/ux, for the features to be divided into several parts, for example home, swap, leverage and also stake/farm are separated so that it is convenient to use, and will be more detailed because of the separation. This feature is very meaningful to make it easier for users", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/90", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "In my opinion in the future, hopefully there will be improvements in ui/ux, for the features to be divided into several parts, for example home, swap, leverage and also stake/farm are separated so that it is convenient to use, and will be more detailed because of the separation. This feature is very meaningful to make it easier for users"}, {"title": " Unnecessary explicit returns (BaskerFacet)", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/88", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": " Unnecessary explicit returns (BaskerFacet)"}, {"title": "Removing redundant code can save gas (RebalanceManager V2 V3, BaskerFacet)", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-12-amun-findings", "body": "Removing redundant code can save gas (RebalanceManager V2 V3, BaskerFacet)"}, {"title": "Don't initialize variables with default value", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/85", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Don't initialize variables with default value"}, {"title": "Function `joinTokenSingle` in `SingleTokenJoin.sol` and `SingleTokenJoinV2.sol` can be made to fail", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/81", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Function `joinTokenSingle` in `SingleTokenJoin.sol` and `SingleTokenJoinV2.sol` can be made to fail"}, {"title": "Subtraction in `ERC20Facet::decreaseApproval` could be \"unchecked\"", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/80", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-12-amun-findings", "body": "Subtraction in `ERC20Facet::decreaseApproval` could be \"unchecked\""}, {"title": "Incorrect comment in `LibBasketStorage.sol`", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/79", "labels": ["bug", "1 (Low Risk)"], "target": "2021-12-amun-findings", "body": "Incorrect comment in `LibBasketStorage.sol`"}, {"title": "Failed transfer with low level call could be overlooked", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/78", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-12-amun-findings", "body": "Failed transfer with low level call could be overlooked"}, {"title": "high centralization", "html_url": "https://github.com/code-423n4/2021-12-amun-findings/issues/75", "labels": ["bug", "0 (Non-critical)"], "target": "2021-12-amun-findings", "body": "high centralization"}]