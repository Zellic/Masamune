[{"title": "Unnecessary checked arithmetic in for loops", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-10-tally-findings", "body": "Unnecessary checked arithmetic in for loops"}, {"title": "Unnecessary array boundaries check when loading an array element twice", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Unnecessary array boundaries check when loading an array element twice"}, {"title": "Prefix increaments are cheaper than postfix increaments", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/71", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Prefix increaments are cheaper than postfix increaments"}, {"title": "`internal` functions can be `private`", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/70", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "`internal` functions can be `private`"}, {"title": "Users can avoid paying fees for ETH swaps", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/68", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Users can avoid paying fees for ETH swaps"}, {"title": "`Swap.setFeeRecipient()` emits a `NewFeeRecipient` when the fee recipient hasn't changed", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/67", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "`Swap.setFeeRecipient()` emits a `NewFeeRecipient` when the fee recipient hasn't changed"}, {"title": "`Swap.setSwapFee()` emits a `NewSwapFee` when the swap fee hasn't changed", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/66", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "`Swap.setSwapFee()` emits a `NewSwapFee` when the swap fee hasn't changed"}, {"title": "Cache or use existing memory versions of state variables (feeRecipient, swapFee)", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Cache or use existing memory versions of state variables (feeRecipient, swapFee)"}, {"title": "Unnecessary `SLOAD` in `Swap.setSwapFee()`", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/63", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Unnecessary `SLOAD` in `Swap.setSwapFee()`"}, {"title": "Unnecessary require statement in `Swap`'s constructor", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Unnecessary require statement in `Swap`'s constructor"}, {"title": "Unnecessary `SLOAD`s in `EmergencyGovernable.onlyTimelockOrEmergencyGovernance()`", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/61", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Unnecessary `SLOAD`s in `EmergencyGovernable.onlyTimelockOrEmergencyGovernance()`"}, {"title": "Inclusive check", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/49", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Inclusive check"}, {"title": "use of floating pragma", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/46", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "use of floating pragma"}, {"title": "Gas: Math library could be \"unchecked\"", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Gas: Math library could be \"unchecked\""}, {"title": "Gas: SafeMath is not needed when using Solidity version 0.8", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Gas: SafeMath is not needed when using Solidity version 0.8"}, {"title": "Gas: minReceived check can be simplified", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Gas: minReceived check can be simplified"}, {"title": "Contract does not work well with fee-on transfer tokens", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/40", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Contract does not work well with fee-on transfer tokens"}, {"title": "Arbitrary contract call allows attackers to steal ERC20 from users' wallets", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/37", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Arbitrary contract call allows attackers to steal ERC20 from users' wallets"}, {"title": "Unused ERC20 tokens are not refunded", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/36", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Unused ERC20 tokens are not refunded"}, {"title": "Consider removing `Math.sol`", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Consider removing `Math.sol`"}, {"title": "Wrong calculation of `erc20Delta` and `ethDelta`", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/34", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Wrong calculation of `erc20Delta` and `ethDelta`"}, {"title": "Check if `boughtETHAmount > 0` can save gas", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Check if `boughtETHAmount > 0` can save gas"}, {"title": "Wrong value for `SwappedTokens` event parameter", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Wrong value for `SwappedTokens` event parameter"}, {"title": "Insufficient input validation", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/25", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Insufficient input validation"}, {"title": "Upgrade pragma to at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/23", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Upgrade pragma to at least 0.8.4"}, {"title": "Events not indexed", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/22", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Events not indexed"}, {"title": "Incorrect FeesSwept amount being emitted in sweepFees function", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/21", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-tally-findings", "body": "Incorrect FeesSwept amount being emitted in sweepFees function"}, {"title": "Swap.sol implements potentially dangerous transfer ", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/20", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Swap.sol implements potentially dangerous transfer "}, {"title": "Emit feeRecipient_ (memory) instead of feeRecipient (storage)", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Emit feeRecipient_ (memory) instead of feeRecipient (storage)"}, {"title": "Remove duplicate reads of storage variables", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Remove duplicate reads of storage variables"}, {"title": "frontrun swapByQuote or abuse high allowance - replacement", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "frontrun swapByQuote or abuse high allowance - replacement"}, {"title": "double reading calldata variable inside a loop ", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "double reading calldata variable inside a loop "}, {"title": "Swap fee can be set to 100%", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/10", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Swap fee can be set to 100%"}, {"title": "Use of uint8 for counter in for loop increases gas costs", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/7", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Use of uint8 for counter in for loop increases gas costs"}, {"title": "Gas Optimization: Reduce the size of error messages.", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/5", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-tally-findings", "body": "Gas Optimization: Reduce the size of error messages."}, {"title": "Unnecessary conditions causing Over Gas consumption", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-tally-findings", "body": "Unnecessary conditions causing Over Gas consumption"}, {"title": "Unnecessary conditions cause Gas wastage", "html_url": "https://github.com/code-423n4/2021-10-tally-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-10-tally-findings", "body": "Unnecessary conditions cause Gas wastage"}, {"title": "`MochiVault.flashFee()` May Truncate Result", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/171", "labels": ["bug", "1 (Low Risk)"], "target": "2021-10-mochi-findings", "body": "`MochiVault.flashFee()` May Truncate Result"}, {"title": "`flashLoan()` is Lacking Protections Against Reentrancy", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/170", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-mochi-findings", "body": "`flashLoan()` is Lacking Protections Against Reentrancy"}, {"title": "`MochiTreasuryV0.sol` Is Unusable In Its Current State", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/168", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`MochiTreasuryV0.sol` Is Unusable In Its Current State"}, {"title": "Mochi Protocol Is Lacking Extensive Test Coverage", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/167", "labels": ["0 (Non-critical)", "disagree with severity"], "target": "2021-10-mochi-findings", "body": "Mochi Protocol Is Lacking Extensive Test Coverage"}, {"title": "`MochiTreasuryV0.claimOperationCost()` Writes State Variable After An External Call Is Made", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/163", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-mochi-findings", "body": "`MochiTreasuryV0.claimOperationCost()` Writes State Variable After An External Call Is Made"}, {"title": "`MochiTreasuryV0.sol` Implements `receive()` Function With No Withdraw Mechanism", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/162", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`MochiTreasuryV0.sol` Implements `receive()` Function With No Withdraw Mechanism"}, {"title": "`MochiTreasuryV0.withdrawLock()` Is Callable When Locking Has Been Toggled", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/161", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`MochiTreasuryV0.withdrawLock()` Is Callable When Locking Has Been Toggled"}, {"title": "debts <= _amount", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/159", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-mochi-findings", "body": "debts <= _amount"}, {"title": "Duplicate math operations", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/158", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-mochi-findings", "body": "Duplicate math operations"}, {"title": "Unchecked math", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/156", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-mochi-findings", "body": "Unchecked math"}, {"title": "Improper Validation Of `create2` Return Value", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/155", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Improper Validation Of `create2` Return Value"}, {"title": "Useless imports", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/154", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Useless imports"}, {"title": "Pack structs tightly", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/153", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Pack structs tightly"}, {"title": "Cache the results of duplicate external calls", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/152", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-mochi-findings", "body": "Cache the results of duplicate external calls"}, {"title": "Improve precision and gas costs in_shareMochi", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/150", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Improve precision and gas costs in_shareMochi"}, {"title": "Open TODOs/questions", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/139", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Open TODOs/questions"}, {"title": "UniswapV2/SushiwapLPAdapter update the wrong token", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/134", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "UniswapV2/SushiwapLPAdapter update the wrong token"}, {"title": "Changing engine.nft contract breaks vaults", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/130", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Changing engine.nft contract breaks vaults"}, {"title": "Debt accrual is path-dependant and inaccurate", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/129", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Debt accrual is path-dependant and inaccurate"}, {"title": "A malicious user can potentially escape liquidation by creating a dust amount position and trigger the liquidation by themself", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/127", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "A malicious user can potentially escape liquidation by creating a dust amount position and trigger the liquidation by themself"}, {"title": "liquidation factor < collateral factor for Sigma type", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/126", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "liquidation factor < collateral factor for Sigma type"}, {"title": "Flashloan fee griefing attack for existing approvals", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/124", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Flashloan fee griefing attack for existing approvals"}, {"title": "Key currencies can be double counted", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/122", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-mochi-findings", "body": "Key currencies can be double counted"}, {"title": "Declaring unnecessary immutable variables as constant can save gas", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/117", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Declaring unnecessary immutable variables as constant can save gas"}, {"title": "Simplify `sqrt()` can save gas", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/115", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Simplify `sqrt()` can save gas"}, {"title": "`FeePoolV0.sol#distributeMochi()` will unexpectedly flush `treasuryShare`, causing the protocol fee cannot be properly accounted for and collected", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/114", "labels": ["bug", "duplicate", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`FeePoolV0.sol#distributeMochi()` will unexpectedly flush `treasuryShare`, causing the protocol fee cannot be properly accounted for and collected"}, {"title": "`FeePoolV0.sol` Lack of input validation", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/106", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`FeePoolV0.sol` Lack of input validation"}, {"title": "Minor precision loss", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/105", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Minor precision loss"}, {"title": "`DutchAuctionLiquidator.sol#triggerLiquidation()` Adding precondition check can save gas", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/104", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`DutchAuctionLiquidator.sol#triggerLiquidation()` Adding precondition check can save gas"}, {"title": "`VestedRewardPool.sol#checkClaimable()` Add `vesting[recipient].ends > 0` to the condition can save gas", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`VestedRewardPool.sol#checkClaimable()` Add `vesting[recipient].ends > 0` to the condition can save gas"}, {"title": "`ReferralFeePoolV0.sol#claimRewardAsMochi()` Array out of bound exception", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/97", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`ReferralFeePoolV0.sol#claimRewardAsMochi()` Array out of bound exception"}, {"title": "Tokens Can Be Stolen By Frontrunning `VestedRewardPool.vest()` and `VestedRewardPool.lock()`", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/92", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Tokens Can Be Stolen By Frontrunning `VestedRewardPool.vest()` and `VestedRewardPool.lock()`"}, {"title": "`treasuryShare` is Overwritten in `FeePoolV0._shareMochi()`", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/89", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "`treasuryShare` is Overwritten in `FeePoolV0._shareMochi()`"}, {"title": "Variable `liquidated` in MochiVault is never used", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/88", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-mochi-findings", "body": "Variable `liquidated` in MochiVault is never used"}, {"title": "Chainlink's `latestRoundData` might return stale or incorrect results", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/87", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Chainlink's `latestRoundData` might return stale or incorrect results"}, {"title": "Save Gas With The Unchecked Keyword (MochiVault.sol)", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/82", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Save Gas With The Unchecked Keyword (MochiVault.sol)"}, {"title": "anyone can create a vault by directly calling the factory", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/80", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "anyone can create a vault by directly calling the factory"}, {"title": "Remove extra calls in updateReserve (FeePoolV0.sol)", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/79", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Remove extra calls in updateReserve (FeePoolV0.sol)"}, {"title": "Unchecked low level call", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/76", "labels": ["bug", "1 (Low Risk)"], "target": "2021-10-mochi-findings", "body": "Unchecked low level call"}, {"title": "Unlocked pragma version", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/74", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-mochi-findings", "body": "Unlocked pragma version"}, {"title": "Unnecessary require in settleLiquidation ", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/71", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Unnecessary require in settleLiquidation "}, {"title": "Liquidation will never work with non-zero discounts", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/66", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Liquidation will never work with non-zero discounts"}, {"title": "feePool is vulnerable to sandwich attack.", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/65", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-10-mochi-findings", "body": "feePool is vulnerable to sandwich attack."}, {"title": "Cached length of arrays to avoid loading them repeadetly", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Cached length of arrays to avoid loading them repeadetly"}, {"title": "Changing NFT contract in the MochiEngine would break the protocol", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/63", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Changing NFT contract in the MochiEngine would break the protocol"}, {"title": "regerralFeePool is vulnerable to MEV searcher", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/62", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "regerralFeePool is vulnerable to MEV searcher"}, {"title": "treasury is vulnerable to sandwich attack", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/60", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "treasury is vulnerable to sandwich attack"}, {"title": "borrow function will underflow when total debt > creditCap", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-10-mochi-findings", "body": "borrow function will underflow when total debt > creditCap"}, {"title": "Referrer can drain ReferralFeePoolV0", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/55", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Referrer can drain ReferralFeePoolV0"}, {"title": "Gas optimization: Struct layout in DutchAuctionLiquidator.sol", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/54", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Gas optimization: Struct layout in DutchAuctionLiquidator.sol"}, {"title": "Vault status is not set to Liquidated after liquidation", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/51", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Vault status is not set to Liquidated after liquidation"}, {"title": "borrow function will borrow max cf when trying to borrow > cf", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/45", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-mochi-findings", "body": "borrow function will borrow max cf when trying to borrow > cf"}, {"title": "Reduce State Variable Use in VestedRewardPool.sol", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Reduce State Variable Use in VestedRewardPool.sol"}, {"title": "Long Revert Strings", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-mochi-findings", "body": "Long Revert Strings"}, {"title": "Gas Optimization on the Public Function", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Gas Optimization on the Public Function"}, {"title": "FRONT-RUNNABLE INITIALIZERS", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/37", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-mochi-findings", "body": "FRONT-RUNNABLE INITIALIZERS"}, {"title": "ERC20 approve method missing return value check", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/36", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-mochi-findings", "body": "ERC20 approve method missing return value check"}, {"title": "Upgrade pragma to at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/34", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-mochi-findings", "body": "Upgrade pragma to at least 0.8.4"}, {"title": "Missing events for governor only functions that change critical parameters", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/32", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-10-mochi-findings", "body": "Missing events for governor only functions that change critical parameters"}, {"title": "Lack of input validation of arrays", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/31", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-mochi-findings", "body": "Lack of input validation of arrays"}, {"title": "Gas optimization: Struct layout", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/30", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Gas optimization: Struct layout"}, {"title": "Gas optimization: Placement of require statements in MochiVault.sol", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "Gas optimization: Placement of require statements in MochiVault.sol"}, {"title": "Not all functions of DutchAuctionLiquidator.sol check the auction state", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/26", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-10-mochi-findings", "body": "Not all functions of DutchAuctionLiquidator.sol check the auction state"}, {"title": "debts calculation is not accurate", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/25", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "debts calculation is not accurate"}, {"title": "griefing attack to block withdraws", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/21", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-mochi-findings", "body": "griefing attack to block withdraws"}, {"title": "flashFee lack of precision", "html_url": "https://github.com/code-423n4/2021-10-mochi-findings/issues/2", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-mochi-findings", "body": "flashFee lack of precision"}, {"title": "Move Function _stake Validator Declaration", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/89", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Move Function _stake Validator Declaration"}, {"title": "Change lines to save gas", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/75", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Change lines to save gas"}, {"title": "Change order of lines to save gas in setAllocatedTokensPerEpoch", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-covalent-findings", "body": "Change order of lines to save gas in setAllocatedTokensPerEpoch"}, {"title": "Inconsistent definition of integer sizes in function `getDelegatorDetails()`", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/70", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Inconsistent definition of integer sizes in function `getDelegatorDetails()`"}, {"title": "Unclear definition of `validatorId`'s integer size", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/68", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Unclear definition of `validatorId`'s integer size"}, {"title": "Declare variable `CQT` as constant", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/67", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Declare variable `CQT` as constant"}, {"title": "Validator can fail to receive commission reward in `redeemAllRewards`", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/65", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-covalent-findings", "body": "Validator can fail to receive commission reward in `redeemAllRewards`"}, {"title": "unnecessary assert when dealing with CQT", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/63", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-10-covalent-findings", "body": "unnecessary assert when dealing with CQT"}, {"title": "Misleading parameter name", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Misleading parameter name"}, {"title": "Unbounded iteration over validators array", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/59", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-covalent-findings", "body": "Unbounded iteration over validators array"}, {"title": "`unstake` should update exchange rates first", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/57", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "`unstake` should update exchange rates first"}, {"title": "Code Style: private/internal function names should be prefixed with `_`", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/55", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Code Style: private/internal function names should be prefixed with `_`"}, {"title": "Cache storage variables in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/53", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Cache storage variables in the stack can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/52", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Check `validatorId < validatorsN` can be done earlier", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-10-covalent-findings", "body": "Check `validatorId < validatorsN` can be done earlier"}, {"title": "Avoid unnecessary storage read can save gas", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Avoid unnecessary storage read can save gas"}, {"title": "Code duplication", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/46", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Code duplication"}, {"title": "Usage of an incorrect version of `Ownbale` library can potentially malfunction all `onlyOwner` functions", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/45", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Usage of an incorrect version of `Ownbale` library can potentially malfunction all `onlyOwner` functions"}, {"title": "Typos", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/42", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Typos"}, {"title": "getDelegatorDetails declaration inside a loop", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "getDelegatorDetails declaration inside a loop"}, {"title": "++i is more gas efficient than i++ in loops forwarding", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "++i is more gas efficient than i++ in loops forwarding"}, {"title": "Line 127 lack of precision", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/36", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Line 127 lack of precision"}, {"title": "addValidatior doesn't check new validator address != 0", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-covalent-findings", "body": "addValidatior doesn't check new validator address != 0"}, {"title": "emit staked should be at stake function and not _stake.", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/34", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-10-covalent-findings", "body": "emit staked should be at stake function and not _stake."}, {"title": "emit initialize", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/33", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "emit initialize"}, {"title": "delegatorCoolDown ", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-10-covalent-findings", "body": "delegatorCoolDown "}, {"title": "state variable divider could be set immutable.", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "state variable divider could be set immutable."}, {"title": "takeOutRewardTokens(): Optimise epochs calculation and comparison ", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "takeOutRewardTokens(): Optimise epochs calculation and comparison "}, {"title": "Make more data accessible", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/22", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-covalent-findings", "body": "Make more data accessible"}, {"title": "addValidator(): Validator's commission rate should be checked to not exceed divider", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/20", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "addValidator(): Validator's commission rate should be checked to not exceed divider"}, {"title": "Long Revert Strings", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Long Revert Strings"}, {"title": "Incorrect updateGlobalExchangeRate implementation", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/17", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "resolved", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Incorrect updateGlobalExchangeRate implementation"}, {"title": "reset rewardsLocked to 0 when no longer used", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "reset rewardsLocked to 0 when no longer used"}, {"title": "reward tokens could get lost due to rounding down", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/10", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "reward tokens could get lost due to rounding down"}, {"title": "getValidatorsDetails is getting disabled validators as well", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/9", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-covalent-findings", "body": "getValidatorsDetails is getting disabled validators as well"}, {"title": "Unnecessary require checker", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/3", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Unnecessary require checker"}, {"title": "Update function access", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-covalent-findings", "body": "Update function access"}, {"title": "Recommend to use OZ SafeERC20 library", "html_url": "https://github.com/code-423n4/2021-10-covalent-findings/issues/1", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2021-10-covalent-findings", "body": "Recommend to use OZ SafeERC20 library"}, {"title": "WadRayMath state variables", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/110", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "WadRayMath state variables"}, {"title": "Lack of precision in wadDiv ", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/109", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "Lack of precision in wadDiv "}, {"title": "caching multiple used variables", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/106", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "caching multiple used variables"}, {"title": "Gas efficiency suggestions", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/105", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Gas efficiency suggestions"}, {"title": "double reading from memory inside a for loop.", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/103", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "double reading from memory inside a for loop."}, {"title": "--j is more gas efficient than j--.", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "--j is more gas efficient than j--."}, {"title": "More efficient loops", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/100", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "More efficient loops"}, {"title": "UToken.uErc20 field could be immutable ", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/98", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UToken.uErc20 field could be immutable "}, {"title": "UToken.__UToken_init can be frontrun", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/97", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "UToken.__UToken_init can be frontrun"}, {"title": "UToken.sol _redeemFresh could be set private instead internal", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "UToken.sol _redeemFresh could be set private instead internal"}, {"title": "Open TODOs in `Treasury.sol`", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/94", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Open TODOs in `Treasury.sol`"}, {"title": "Unchecked math operations", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/93", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Unchecked math operations"}, {"title": ".length in a loop", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/92", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": ".length in a loop"}, {"title": "Zero transfers", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "Zero transfers"}, {"title": "Pre-calculate known values", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/90", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Pre-calculate known values"}, {"title": "list of _admins", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/89", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "list of _admins"}, {"title": "Struct with only 1 element", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/88", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Struct with only 1 element"}, {"title": "Immutable variables", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/87", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Immutable variables"}, {"title": "getSupply and getSupplyView are identical", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/86", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "getSupply and getSupplyView are identical"}, {"title": "Two-step change of a critical parameter", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/84", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Two-step change of a critical parameter"}, {"title": "deposit onlyAssetManager", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/83", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "deposit onlyAssetManager"}, {"title": "Wrong implementation of `CreditLimitByMedian.sol#getLockedAmount()` will lock a much bigger total amount of staked tokens than expected", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/81", "labels": ["bug", "2 (Med Risk)"], "target": "2021-10-union-findings", "body": "Wrong implementation of `CreditLimitByMedian.sol#getLockedAmount()` will lock a much bigger total amount of staked tokens than expected"}, {"title": "Wrong implementation of `CreditLimitByMedian.sol#getLockedAmount()` makes it unable to unlock `lockedAmount` in `CreditLimitByMedian` model", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/80", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "Wrong implementation of `CreditLimitByMedian.sol#getLockedAmount()` makes it unable to unlock `lockedAmount` in `CreditLimitByMedian` model"}, {"title": "Comptroller rewards can be artificially inflated and drained by manipulating [totalStaked - totalFrozen] (or: wrong rewards calculation)", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/78", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Comptroller rewards can be artificially inflated and drained by manipulating [totalStaked - totalFrozen] (or: wrong rewards calculation)"}, {"title": "`UToken.sol` should inherits and complies with `IUToken.sol`", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/77", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "`UToken.sol` should inherits and complies with `IUToken.sol`"}, {"title": "Gas: Explicit overflow checks even though solidity 0.8 is used (2)", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/75", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Gas: Explicit overflow checks even though solidity 0.8 is used (2)"}, {"title": "Gas: Explicit overflow checks even though solidity 0.8 is used (1)", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/74", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Gas: Explicit overflow checks even though solidity 0.8 is used (1)"}, {"title": "Gas: `AssetManager.getMoneyMarket` use assignment", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/72", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Gas: `AssetManager.getMoneyMarket` use assignment"}, {"title": "Gas: `AssetManager.rebalance` cache last market", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/71", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Gas: `AssetManager.rebalance` cache last market"}, {"title": "`UnionToken` should check whitelist on `from`?", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/69", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "`UnionToken` should check whitelist on `from`?"}, {"title": "`withdrawRewards` should send remaining balance", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "`withdrawRewards` should send remaining balance"}, {"title": "`repayBorrowWithPermit` is missing `nonReentrant`", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/67", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "`repayBorrowWithPermit` is missing `nonReentrant`"}, {"title": "`borrow` must `accrueInterest` first", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/66", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "`borrow` must `accrueInterest` first"}, {"title": "Unbounded iteration in `deleteMarket`", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Unbounded iteration in `deleteMarket`"}, {"title": "Rebalance will fail due to low precision of percentages", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/64", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Rebalance will fail due to low precision of percentages"}, {"title": "Rebalance will fail if a market has high utilization", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/63", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "Rebalance will fail if a market has high utilization"}, {"title": "`withdrawSeq` might not be set", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/62", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "`withdrawSeq` might not be set"}, {"title": "Code Style: constants should be named in all caps", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/61", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "Code Style: constants should be named in all caps"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/60", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Cache array length in for loops can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/58", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Cache and read storage variables from the stack can save gas", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/57", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Cache and read storage variables from the stack can save gas"}, {"title": "Avoid unnecessary code execution can save some gas in edge cases", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/56", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Avoid unnecessary code execution can save some gas in edge cases"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/55", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "Unused imports"}, {"title": "Code Style: consistency", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/52", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "Code Style: consistency"}, {"title": "Use short circuiting can save gas", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/51", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Use short circuiting can save gas"}, {"title": "UserManager: totalStaked \u2265 totalFrozen should be checked before and after totalFrozen is updated", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/47", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "UserManager: totalStaked \u2265 totalFrozen should be checked before and after totalFrozen is updated"}, {"title": "UserManager: _getFrozenCoinAge is not used", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/46", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "UserManager: _getFrozenCoinAge is not used"}, {"title": "AssetManager: getLoanableAmount() can be made more readable", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/45", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "AssetManager: getLoanableAmount() can be made more readable"}, {"title": "UserManager: debtWriteOff() doesn't need if borrower has sufficient assets frozen before subtracting", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/44", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UserManager: debtWriteOff() doesn't need if borrower has sufficient assets frozen before subtracting"}, {"title": "UserManager: _updateTotalFrozen can be optimized further", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/43", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UserManager: _updateTotalFrozen can be optimized further"}, {"title": "UserManager: registerMember() can be optimized further", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/41", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UserManager: registerMember() can be optimized further"}, {"title": "UserManager: cancelVouch() should break from loop when address is found.", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/40", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UserManager: cancelVouch() should break from loop when address is found."}, {"title": "UserManager: use mapping to avoid iteration", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/39", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UserManager: use mapping to avoid iteration"}, {"title": "UserManager: addMember() contains redundant require check", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/38", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UserManager: addMember() contains redundant require check"}, {"title": "UserManager: getCreditLimit() can be optimized further", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/37", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UserManager: getCreditLimit() can be optimized further"}, {"title": "UserManager: getTotalLockedStake() redundant assignment", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/36", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UserManager: getTotalLockedStake() redundant assignment"}, {"title": "CreditLimitByMedian: getLockedAmount() can be optimized further.", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/34", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "CreditLimitByMedian: getLockedAmount() can be optimized further."}, {"title": "UToken: revert on over/underflow checks in addReserve() and removeReserve() are unnecessary", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/33", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UToken: revert on over/underflow checks in addReserve() and removeReserve() are unnecessary"}, {"title": "UToken: _repayBorrowFresh() function can be optimized further", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/31", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "UToken: _repayBorrowFresh() function can be optimized further"}, {"title": "AssetManager: Deposit() function has redundant continue statement.", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/29", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "AssetManager: Deposit() function has redundant continue statement."}, {"title": "debtWriteOff updates totalFrozen immaturely, thereby losing staker rewards", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/28", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "debtWriteOff updates totalFrozen immaturely, thereby losing staker rewards"}, {"title": "For Loops Need Break Statements (UserManager.sol)", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "For Loops Need Break Statements (UserManager.sol)"}, {"title": "Function getFrozenCoinAge Can Be Made More Efficient (UserManager.sol)", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "Function getFrozenCoinAge Can Be Made More Efficient (UserManager.sol)"}, {"title": "stake function in UserManager checks for allowance, which is also done in ERC20 transferFrom", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/24", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "stake function in UserManager checks for allowance, which is also done in ERC20 transferFrom"}, {"title": "Function checkIsOverDue Can Be Made More Efficient (UToken.sol)", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/23", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Function checkIsOverDue Can Be Made More Efficient (UToken.sol)"}, {"title": "Functions TotalSupplyView/TotalSupply Can Be Made More Efficient (AssetManager.sol)", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/22", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Functions TotalSupplyView/TotalSupply Can Be Made More Efficient (AssetManager.sol)"}, {"title": "Change in interest rate can disable repay of loan", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/21", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Change in interest rate can disable repay of loan"}, {"title": "Inconsistent use of `UToken::getLastRepay()`", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/20", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "Inconsistent use of `UToken::getLastRepay()`"}, {"title": "Inconsistent use of `UToken::getBorrowed()`", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/19", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "Inconsistent use of `UToken::getBorrowed()`"}, {"title": "Unneeded Named Returns (UToken.sol)", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/18", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-union-findings", "body": "Unneeded Named Returns (UToken.sol)"}, {"title": "Long Revert Strings", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/17", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "Long Revert Strings"}, {"title": "Tautologies in require statements", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/16", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Tautologies in require statements"}, {"title": "Missing events for owner only functions that change critical parameters", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/14", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Missing events for owner only functions that change critical parameters"}, {"title": "Improper Upper Bound Definition on the New Member Fee ", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/13", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-10-union-findings", "body": "Improper Upper Bound Definition on the New Member Fee "}, {"title": "User Fund loss in case of Unsupported Market token deposit", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/9", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "User Fund loss in case of Unsupported Market token deposit"}, {"title": "Duplicate utoken and usermanager can be added which cannot be deleted", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/8", "labels": ["bug", "2 (Med Risk)"], "target": "2021-10-union-findings", "body": "Duplicate utoken and usermanager can be added which cannot be deleted"}, {"title": "Overusage of gas due to non needed loop", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/7", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-union-findings", "body": "Overusage of gas due to non needed loop"}, {"title": "setHalfDecayPoint check allowed values", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/6", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "setHalfDecayPoint check allowed values"}, {"title": "MAX_TRUST_LIMIT might be too high", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/5", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-10-union-findings", "body": "MAX_TRUST_LIMIT might be too high"}, {"title": "Zero-address checks are missing", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/3", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-union-findings", "body": "Zero-address checks are missing"}, {"title": "Governor contract is not matching Contract source", "html_url": "https://github.com/code-423n4/2021-10-union-findings/issues/2", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-10-union-findings", "body": "Governor contract is not matching Contract source"}, {"title": "Use Minimal Interface for gas optimizations", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "resolved"], "target": "2021-10-badgerdao-findings", "body": "Use Minimal Interface for gas optimizations"}, {"title": "Null check in pricePerShare", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/90", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Null check in pricePerShare"}, {"title": "WrappedIbbtc and WrappedIbbtcEth contracts do not filter out price feed outliers", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/87", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "WrappedIbbtc and WrappedIbbtcEth contracts do not filter out price feed outliers"}, {"title": "WrappedIbbtcEth contract will use stalled price for mint/burn if updatePricePerShare wasn't run properly", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/86", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "WrappedIbbtcEth contract will use stalled price for mint/burn if updatePricePerShare wasn't run properly"}, {"title": "In updatePricePerShare() no value is returned", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/85", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-badgerdao-findings", "body": "In updatePricePerShare() no value is returned"}, {"title": "use of depreciated \"now\" ", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/83", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "use of depreciated \"now\" "}, {"title": "Check if amount is not zero", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/82", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Check if amount is not zero"}, {"title": "Immutable variable", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/81", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-badgerdao-findings", "body": "Immutable variable"}, {"title": "onlyOracle never used", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/80", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "onlyOracle never used"}, {"title": "ICore import", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/79", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "ICore import"}, {"title": " modified _balances in OZ contract ", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/78", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-10-badgerdao-findings", "body": " modified _balances in OZ contract "}, {"title": "Consider making contracts Pausable", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/76", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Consider making contracts Pausable"}, {"title": "pendingGovernance and  Governace address can be same", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/74", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "pendingGovernance and  Governace address can be same"}, {"title": "use of floating pragma", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "use of floating pragma"}, {"title": "PREVENT DIV BY 0", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/70", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "PREVENT DIV BY 0"}, {"title": "Deprecated Function Usage", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/69", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Deprecated Function Usage"}, {"title": "No sanity check on pricePerShare might lead to lost value", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/68", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "No sanity check on pricePerShare might lead to lost value"}, {"title": "The design of `wibBTC` is not fully compatible with the current Curve StableSwap pool", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/65", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "The design of `wibBTC` is not fully compatible with the current Curve StableSwap pool"}, {"title": "Redundant use of `virtual`", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/64", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Redundant use of `virtual`"}, {"title": "The `value` parameter of the `Transfer` event is wrong", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/62", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-10-badgerdao-findings", "body": "The `value` parameter of the `Transfer` event is wrong"}, {"title": "`updatePricePerShare` should be run atomically with `setCore()` to make sure `pricePerShare` is up-to-date with the new Core", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/61", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "`updatePricePerShare` should be run atomically with `setCore()` to make sure `pricePerShare` is up-to-date with the new Core"}, {"title": "Critical changes should use two-step procedure", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-badgerdao-findings", "body": "Critical changes should use two-step procedure"}, {"title": "Avoid unnecessary external calls and storage writes can save gas", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/58", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Avoid unnecessary external calls and storage writes can save gas"}, {"title": "Constants are not explicitly declared", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/57", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Constants are not explicitly declared"}, {"title": "Consider removing `ICore.sol`", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Consider removing `ICore.sol`"}, {"title": "Consider caching `pricePerShare` for `WrappedIbbtc.sol` to save gas", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/55", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Consider caching `pricePerShare` for `WrappedIbbtc.sol` to save gas"}, {"title": "Inconsistent use of `_msgSender()`", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/54", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Inconsistent use of `_msgSender()`"}, {"title": "Missing error messages in require statements", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/52", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-badgerdao-findings", "body": "Missing error messages in require statements"}, {"title": "Cache external call result in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Cache external call result in the stack can save gas"}, {"title": "Outdated versions of OpenZeppelin library", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/50", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-badgerdao-findings", "body": "Outdated versions of OpenZeppelin library"}, {"title": "Outdated compiler version", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/49", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-badgerdao-findings", "body": "Outdated compiler version"}, {"title": "Avoid unnecessary storage read can save gas", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/48", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-badgerdao-findings", "body": "Avoid unnecessary storage read can save gas"}, {"title": "Events are emitting storage vars instead of user/system values", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/46", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-badgerdao-findings", "body": "Events are emitting storage vars instead of user/system values"}, {"title": "Gas: Event parameters read from storage", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/45", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-badgerdao-findings", "body": "Gas: Event parameters read from storage"}, {"title": "Approved spender can spend too many tokens", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/43", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Approved spender can spend too many tokens"}, {"title": "Pending governance is not cleared", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/42", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Pending governance is not cleared"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Missing parameter validation"}, {"title": "`initialize` functions can be frontrun", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/40", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-badgerdao-findings", "body": "`initialize` functions can be frontrun"}, {"title": "Add zero address validation in the setPendingGovernance function", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Add zero address validation in the setPendingGovernance function"}, {"title": "Upgrade pragma to at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-badgerdao-findings", "body": "Upgrade pragma to at least 0.8.4"}, {"title": "`WrappedIbbtc.sol` implements, but does not inherit, the `ICoreOracle` interface", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/28", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-badgerdao-findings", "body": "`WrappedIbbtc.sol` implements, but does not inherit, the `ICoreOracle` interface"}, {"title": "Remove unused functions in dependencys", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/27", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-badgerdao-findings", "body": "Remove unused functions in dependencys"}, {"title": "Lack of `address(0)` check", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/26", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Lack of `address(0)` check"}, {"title": "hard to clear balance", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/24", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "hard to clear balance"}, {"title": "No Initial Ownership Event  (WrappedIbbtcEth.sol, WrappedIbbtcEth.sol)", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/22", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "No Initial Ownership Event  (WrappedIbbtcEth.sol, WrappedIbbtcEth.sol)"}, {"title": "Use existing memory value of state variable (setPendingGovernance)", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/21", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-badgerdao-findings", "body": "Use existing memory value of state variable (setPendingGovernance)"}, {"title": "Unable to transfer WrappedIbbtc if Oracle go down", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/20", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "Unable to transfer WrappedIbbtc if Oracle go down"}, {"title": "Gas Optimization: Retrieve internal variables directly ", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/19", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-badgerdao-findings", "body": "Gas Optimization: Retrieve internal variables directly "}, {"title": "use safeTransfer instead of transfer of ibbtc", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/11", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "use safeTransfer instead of transfer of ibbtc"}, {"title": "missing zero-address check ", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/5", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-badgerdao-findings", "body": "missing zero-address check "}, {"title": "Gas Saving by changing the visibility of initialize function from public to external", "html_url": "https://github.com/code-423n4/2021-10-badgerdao-findings/issues/3", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-badgerdao-findings", "body": "Gas Saving by changing the visibility of initialize function from public to external"}, {"title": "receive function", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/94", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "receive function"}, {"title": "Small gas improvement", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/90", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Small gas improvement"}, {"title": "ConcatStrings prependNumber is not used", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/88", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-slingshot-findings", "body": "ConcatStrings prependNumber is not used"}, {"title": "Confusing comment in CurveModule", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/85", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-10-slingshot-findings", "body": "Confusing comment in CurveModule"}, {"title": "Confusing comment on IUniswapModule", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/84", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-10-slingshot-findings", "body": "Confusing comment on IUniswapModule"}, {"title": "Gas: Use a constant instead of `block.timestamp` for the deadline", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/83", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Gas: Use a constant instead of `block.timestamp` for the deadline"}, {"title": "Left-over tokens can be stolen", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/82", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Left-over tokens can be stolen"}, {"title": "`LibERC20Token.approveIfBelow` should approve(0) first", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/81", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "`LibERC20Token.approveIfBelow` should approve(0) first"}, {"title": "`Slingshot._sendFunds` function not used and wrong", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/80", "labels": ["bug", "0 (Non-critical)"], "target": "2021-10-slingshot-findings", "body": "`Slingshot._sendFunds` function not used and wrong"}, {"title": "Trades where toToken is feeOnTransferToken might send user less tokens than finalAmountMin", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/77", "labels": ["bug", "2 (Med Risk)", "disagree with severity"], "target": "2021-10-slingshot-findings", "body": "Trades where toToken is feeOnTransferToken might send user less tokens than finalAmountMin"}, {"title": "Combine external calls into one can save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "Combine external calls into one can save gas"}, {"title": "Typos", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "Typos"}, {"title": "Outdated compiler version", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/70", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Outdated compiler version"}, {"title": "Avoid unnecessary storage read can save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/69", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Avoid unnecessary storage read can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/68", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-slingshot-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Code Style: consistency", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/67", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "Code Style: consistency"}, {"title": "`SlingshotI` is unnecessary", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/66", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "`SlingshotI` is unnecessary"}, {"title": "Code Style: Abstract contracts should not be prefixed by `I`", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/65", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Code Style: Abstract contracts should not be prefixed by `I`"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/63", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "Cache array length in for loops can save gas"}, {"title": "Remove redundant access control checks can save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/62", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2021-10-slingshot-findings", "body": "Remove redundant access control checks can save gas"}, {"title": "`IUniswapModule.sol` use an immutable variable `router` can save gas and simplify implementation", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/61", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "`IUniswapModule.sol` use an immutable variable `router` can save gas and simplify implementation"}, {"title": "`initialBalance` for native token is wrong", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/59", "labels": ["bug", "2 (Med Risk)", "disagree with severity"], "target": "2021-10-slingshot-findings", "body": "`initialBalance` for native token is wrong"}, {"title": "Avoid unnecessary code execution can save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/57", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Avoid unnecessary code execution can save gas"}, {"title": "`CurveModule.sol#swap()` Unused parameter", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "`CurveModule.sol#swap()` Unused parameter"}, {"title": "Redundant code", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/55", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Redundant code"}, {"title": "Function documentation incorrect for `Slingshot::_transferFromOrWrap`", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/53", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-10-slingshot-findings", "body": "Function documentation incorrect for `Slingshot::_transferFromOrWrap`"}, {"title": "`Adminable::setupAdmin` uses deprecated function", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/50", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "`Adminable::setupAdmin` uses deprecated function"}, {"title": "Error messages in `ModuleRegistry.sol` inconsistent to the rest of the project", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/49", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Error messages in `ModuleRegistry.sol` inconsistent to the rest of the project"}, {"title": "Inconsistent naming for functions in `ConcatStrings.sol`", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/48", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Inconsistent naming for functions in `ConcatStrings.sol`"}, {"title": "Function documentation incorrect for `ConcatStrings::appendUint`", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/47", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "Function documentation incorrect for `ConcatStrings::appendUint`"}, {"title": "Slingshot: Unnecessary receive()", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/46", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-10-slingshot-findings", "body": "Slingshot: Unnecessary receive()"}, {"title": "Slingshot: Index fromToken and toToken for Trade event", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Slingshot: Index fromToken and toToken for Trade event"}, {"title": "Slingshot: Incorrect comment for rescueTokensFromExecutioner()", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/43", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Slingshot: Incorrect comment for rescueTokensFromExecutioner()"}, {"title": "ModuleRegistry: Rename modulesIndex \u2192 isModule", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "ModuleRegistry: Rename modulesIndex \u2192 isModule"}, {"title": "Executioner: Restrict funds receivable to be only from wrapped native token", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/40", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "Executioner: Restrict funds receivable to be only from wrapped native token"}, {"title": "CurveModule: Redundant jToken", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "CurveModule: Redundant jToken"}, {"title": "BalancerV2ModuleMatic: Ensure tokenOut is not native token", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/38", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "BalancerV2ModuleMatic: Ensure tokenOut is not native token"}, {"title": "String concatenation in revert messages results in increased gas costs + code complexity", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/37", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "String concatenation in revert messages results in increased gas costs + code complexity"}, {"title": "`> 0` can be replaced with ` != 0` for gas optimisation", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/35", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "`> 0` can be replaced with ` != 0` for gas optimisation"}, {"title": "Long Revert Strings", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/32", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2021-10-slingshot-findings", "body": "Long Revert Strings"}, {"title": "Unused Named Returns (ConcatStrings.sol)", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Unused Named Returns (ConcatStrings.sol)"}, {"title": "Inaccurate comment (rescueTokensFromExecutioner)", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/30", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-10-slingshot-findings", "body": "Inaccurate comment (rescueTokensFromExecutioner)"}, {"title": "Redundant Code Statement", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "Redundant Code Statement"}, {"title": "Unnecessary and risky `payable` annotation in swap() functions", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/25", "labels": ["bug", "1 (Low Risk)"], "target": "2021-10-slingshot-findings", "body": "Unnecessary and risky `payable` annotation in swap() functions"}, {"title": "Flaws in Slingshot._sendFunds()", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/24", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Flaws in Slingshot._sendFunds()"}, {"title": "Unnecessary Use of _msgSender()", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Unnecessary Use of _msgSender()"}, {"title": "getRouter methods could be set external instead public", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/16", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "getRouter methods could be set external instead public"}, {"title": "nonReentrant modifier isn't necessary for executeTrades function", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/15", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "nonReentrant modifier isn't necessary for executeTrades function"}, {"title": "A more efficient for loop index proceeding", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/9", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-slingshot-findings", "body": "A more efficient for loop index proceeding"}, {"title": "The function _sendFunds could be set private to save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/7", "labels": ["bug", "question", "G (Gas Optimization)"], "target": "2021-10-slingshot-findings", "body": "The function _sendFunds could be set private to save gas"}, {"title": "The function _getTokenBalance could be set private to save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "The function _getTokenBalance could be set private to save gas"}, {"title": "_transferFromOrWrap could be set private to save gas", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/5", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "_transferFromOrWrap could be set private to save gas"}, {"title": "Use of constant `keccak` variables results in extra hashing (and so gas).", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-10-slingshot-findings", "body": "Use of constant `keccak` variables results in extra hashing (and so gas)."}, {"title": "Malicious governance can abuse approvals to ApprovalHandler", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/2", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "Malicious governance can abuse approvals to ApprovalHandler"}, {"title": "ModuleRegistry doesn't need to know address of Slingshot.sol", "html_url": "https://github.com/code-423n4/2021-10-slingshot-findings/issues/1", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-10-slingshot-findings", "body": "ModuleRegistry doesn't need to know address of Slingshot.sol"}, {"title": "OverlayV1Governance.setEverything does unnecessary function calls", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/141", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "OverlayV1Governance.setEverything does unnecessary function calls"}, {"title": "OverlayV1OVLCollateral.liquidate storage pos.market variable is read up to three times, can be saved to memory", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/138", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "OverlayV1OVLCollateral.liquidate storage pos.market variable is read up to three times, can be saved to memory"}, {"title": "OVL token shouldn't be available for substitution, needs to be set only once", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/135", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "OVL token shouldn't be available for substitution, needs to be set only once"}, {"title": "Fee double counting for underwater positions", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/134", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Fee double counting for underwater positions"}, {"title": "_rewardsTo not empty", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/133", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "_rewardsTo not empty"}, {"title": "Cached version of ovl may be outdated", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/129", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Cached version of ovl may be outdated"}, {"title": "OZ ERC1155Supply vulnerability", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/127", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "OZ ERC1155Supply vulnerability"}, {"title": "Pack structs tightly", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/126", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Pack structs tightly"}, {"title": "Eliminate subtraction", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/125", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Eliminate subtraction"}, {"title": "Eliminate duplicate math operations", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/124", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Eliminate duplicate math operations"}, {"title": "Cache storage access", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/123", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "Cache storage access"}, {"title": "Dead code", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/122", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Dead code"}, {"title": "Timelock and events for governor functions", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/120", "labels": ["bug", "2 (Med Risk)"], "target": "2021-11-overlay-findings", "body": "Timelock and events for governor functions"}, {"title": "Discrepancies between the interface and implementation", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/119", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Discrepancies between the interface and implementation"}, {"title": "Context and msg.sender", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/118", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Context and msg.sender"}, {"title": "Open TODOs in Codebase", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/116", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Open TODOs in Codebase"}, {"title": "`> 0` can be replaced with `!= 0` for gas optimization", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/113", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "`> 0` can be replaced with `!= 0` for gas optimization"}, {"title": "Use of constant keccak variables results in extra hashing (and so gas).", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/111", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Use of constant keccak variables results in extra hashing (and so gas)."}, {"title": "At `OverlayV1Comptroller.sol`, `_roller.time` shouldn't be cached", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/105", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "At `OverlayV1Comptroller.sol`, `_roller.time` shouldn't be cached"}, {"title": "State variables can be `immutable`s", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "State variables can be `immutable`s"}, {"title": " approve function is vulnerable", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/94", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": " approve function is vulnerable"}, {"title": " require should come first", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/93", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": " require should come first"}, {"title": "Unnecessary castings in `OverlayV1UniswapV3Market.fetchPricePoint()`", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Unnecessary castings in `OverlayV1UniswapV3Market.fetchPricePoint()`"}, {"title": "Cache storage variables in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/88", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Cache storage variables in the stack can save gas"}, {"title": "`OverlayV1Market.sol#lock()` Switching between 1, 2 instead of 0, 1 is more gas efficient", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/86", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "`OverlayV1Market.sol#lock()` Switching between 1, 2 instead of 0, 1 is more gas efficient"}, {"title": "Change unnecessary storage variables to constants can save gas", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/85", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Change unnecessary storage variables to constants can save gas"}, {"title": "Missing setter function for `OverlayV1Mothership#marginBurnRate`", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/84", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Missing setter function for `OverlayV1Mothership#marginBurnRate`"}, {"title": "`OverlayV1UniswapV3Market` computes wrong market liquidity", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/83", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "`OverlayV1UniswapV3Market` computes wrong market liquidity"}, {"title": "Missing `macroWindow > microWindow` check", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/80", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Missing `macroWindow > microWindow` check"}, {"title": "`OverlayV1UniswapV3Market` assumes one of the tokens is ETH", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/79", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "`OverlayV1UniswapV3Market` assumes one of the tokens is ETH"}, {"title": "Use _userOiShares everywhere in unwind()", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/78", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Use _userOiShares everywhere in unwind()"}, {"title": "Improper Upper Bound Definition on the Fee", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/77", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Improper Upper Bound Definition on the Fee"}, {"title": "Check for liquidation in value() ", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/76", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Check for liquidation in value() "}, {"title": "Avoiding external calls can save gas", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/74", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Avoiding external calls can save gas"}, {"title": "`OverlayToken.sol` Insufficient input validation", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/73", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "`OverlayToken.sol` Insufficient input validation"}, {"title": "No user friendly error message when _leverage==0", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/71", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "No user friendly error message when _leverage==0"}, {"title": "Use _brrrrdExpected everywhere in oiCap() ", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/69", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Use _brrrrdExpected everywhere in oiCap() "}, {"title": "Simplify function roll()", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/68", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Simplify function roll()"}, {"title": "`OverlayToken.sol` Check of allowance can be done earlier to save gas", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "`OverlayToken.sol` Check of allowance can be done earlier to save gas"}, {"title": "Use short reason strings can save gas", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/65", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Use short reason strings can save gas"}, {"title": "Missing events for critical operations", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Missing events for critical operations"}, {"title": "contract OverlayV1OI isn't abstract", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/62", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "contract OverlayV1OI isn't abstract"}, {"title": "Use `transferBurn` can save gas", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/61", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Use `transferBurn` can save gas"}, {"title": "Redundant code", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Redundant code"}, {"title": "_totalSupply not updated in _transferMint() and _transferBurn() ", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/59", "labels": ["bug", "question", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "_totalSupply not updated in _transferMint() and _transferBurn() "}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/56", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Can't enableCollateral after a disableCollateral ", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/55", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Can't enableCollateral after a disableCollateral "}, {"title": "pow() is missing check on input parameters with 0 value", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/54", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "pow() is missing check on input parameters with 0 value"}, {"title": "isUnderwater returns opposite boolean for short positions", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/53", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "isUnderwater returns opposite boolean for short positions"}, {"title": "Commented out code (no explanation) ", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/51", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Commented out code (no explanation) "}, {"title": "Typos ", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/50", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Typos "}, {"title": "Incorrect comments ", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/49", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Incorrect comments "}, {"title": "All overflow/underflow checks are automatic in Solidity 0.8", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/48", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "All overflow/underflow checks are automatic in Solidity 0.8"}, {"title": "Unneeded variable and code in enterOI (OverlayV1Market.sol)", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/44", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Unneeded variable and code in enterOI (OverlayV1Market.sol)"}, {"title": "Unused Named Returns", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Unused Named Returns"}, {"title": "Use msg.sender Rather Than _msgSender() to Save Gas", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/38", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-overlay-findings", "body": "Use msg.sender Rather Than _msgSender() to Save Gas"}, {"title": "Constructor Lack of Input Validation for _compoundingPeriod", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/33", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "Constructor Lack of Input Validation for _compoundingPeriod"}, {"title": "Constructor Does Not Check for Zero Addresses", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "Constructor Does Not Check for Zero Addresses"}, {"title": "OverlayV1Market.update function is public function", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/30", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "OverlayV1Market.update function is public function"}, {"title": "Incorrect position indexing", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-11-overlay-findings", "body": "Incorrect position indexing"}, {"title": "Incorrect naming issue", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/26", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-overlay-findings", "body": "Incorrect naming issue"}, {"title": "Use `external` keyword instead of `public` for some functions", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/25", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-11-overlay-findings", "body": "Use `external` keyword instead of `public` for some functions"}, {"title": "_beforeTokenTransfer and _afterTokenTransfer functions are empty", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/23", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "_beforeTokenTransfer and _afterTokenTransfer functions are empty"}, {"title": "OverlayToken.burn function could burn tokens of any user", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/22", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "OverlayToken.burn function could burn tokens of any user"}, {"title": "`OverlayV1PricePoint.sol#pricePoints` can be implemented more efficiently", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "`OverlayV1PricePoint.sol#pricePoints` can be implemented more efficiently"}, {"title": "`_fundingFactor` at `OverlayV1Ol#computeFunding` can be calculated cheaper", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/17", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "`_fundingFactor` at `OverlayV1Ol#computeFunding` can be calculated cheaper"}, {"title": "Optimize `OverlayV10l#_oi`", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/16", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Optimize `OverlayV10l#_oi`"}, {"title": "Should add reentrancy guard modifiers ", "html_url": "https://github.com/code-423n4/2021-11-overlay-findings/issues/3", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-overlay-findings", "body": "Should add reentrancy guard modifiers "}, {"title": "Improper Validation Of Chainlink `latestRoundData()` Function", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/106", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-11-fairside-findings", "body": "Improper Validation Of Chainlink `latestRoundData()` Function"}, {"title": "`FSDNetwork.getFSDPrice()` Is Vulnerable To Flash Loan Attacks", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/105", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-11-fairside-findings", "body": "`FSDNetwork.getFSDPrice()` Is Vulnerable To Flash Loan Attacks"}, {"title": "`TributeAccrual.availableTribute()` & `TributeAccrual.availableGovernanceTribute()` Distributes Tributes Unfairly", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/104", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged", "sponsor disputed"], "target": "2021-11-fairside-findings", "body": "`TributeAccrual.availableTribute()` & `TributeAccrual.availableGovernanceTribute()` Distributes Tributes Unfairly"}, {"title": "Anyone Can Arbitrarily Call `FSDVesting.updateVestedTokens()`", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/101", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Anyone Can Arbitrarily Call `FSDVesting.updateVestedTokens()`"}, {"title": "Various typos", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/99", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Various typos"}, {"title": "Incorrect comment in function rmul (DSMath.sol)", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/98", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Incorrect comment in function rmul (DSMath.sol)"}, {"title": "FSD.mintBeta function has potentially blocking condition unrelated with documented logic", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/96", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "FSD.mintBeta function has potentially blocking condition unrelated with documented logic"}, {"title": "Possible DOS by 1 of 3 assessors by replay attack", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/94", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-11-fairside-findings", "body": "Possible DOS by 1 of 3 assessors by replay attack"}, {"title": "Using ++i consumes less gas than i++", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/89", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Using ++i consumes less gas than i++"}, {"title": "Several public functions can be declared as external", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/88", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Several public functions can be declared as external"}, {"title": "does not check the existence of address while using it in low level call", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/86", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-11-fairside-findings", "body": "does not check the existence of address while using it in low level call"}, {"title": "The function `propose(FairSideDAO.sol)` can be optimized", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "The function `propose(FairSideDAO.sol)` can be optimized"}, {"title": "`_calculateDeltaOfFSD(ABC.sol)` can be optimized", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/79", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "`_calculateDeltaOfFSD(ABC.sol)` can be optimized"}, {"title": "Calling require on a tautology", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/78", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Calling require on a tautology"}, {"title": "`!= 0` costs less gass compared to ` > 0` for unsigned integer", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/77", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "`!= 0` costs less gass compared to ` > 0` for unsigned integer"}, {"title": "Gas: Reorder conditions in `claimGovernanceTribute`", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/76", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Gas: Reorder conditions in `claimGovernanceTribute`"}, {"title": "Missing SafeMath & SafeCasts", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/71", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Missing SafeMath & SafeCasts"}, {"title": "Underflow in `ERC20ConvictionScore._writeCheckpoint`", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/70", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Underflow in `ERC20ConvictionScore._writeCheckpoint`"}, {"title": "ERC20ConvictionScore._writeCheckpoint` does not write to storage on same block", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/69", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "ERC20ConvictionScore._writeCheckpoint` does not write to storage on same block"}, {"title": "`FairSideDAO.SECS_PER_BLOCK` is inaccurate", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/68", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "`FairSideDAO.SECS_PER_BLOCK` is inaccurate"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/67", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Missing parameter validation"}, {"title": "Avoid unnecessary storage reads in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Avoid unnecessary storage reads in for loops can save gas"}, {"title": "Beneficiary cant get `fairSideConviction` NFT unless they only claim once, and only after it's fully vested", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/62", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Beneficiary cant get `fairSideConviction` NFT unless they only claim once, and only after it's fully vested"}, {"title": "`user.creation` is updated incorrectly when the user tries to extend membership", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/61", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "`user.creation` is updated incorrectly when the user tries to extend membership"}, {"title": "Use `else if` in for loops can save gas and simplify code", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Use `else if` in for loops can save gas and simplify code"}, {"title": "Using fixed length array as parameter type can avoid checks to save gas and improve consistency", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/59", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Using fixed length array as parameter type can avoid checks to save gas and improve consistency"}, {"title": "Missing events for critical operations", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/57", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Missing events for critical operations"}, {"title": "Remove redundant check can save gas", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/56", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Remove redundant check can save gas"}, {"title": "Avoid unnecessary external calls can save gas", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/55", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Avoid unnecessary external calls can save gas"}, {"title": "Faulty comments in `dao/FairSideDAO.sol` ", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/54", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Faulty comments in `dao/FairSideDAO.sol` "}, {"title": "`FSDNetwork` should inherit from interface `IFSDNetwork`", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/52", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "`FSDNetwork` should inherit from interface `IFSDNetwork`"}, {"title": "Use of transfer function for transferring NFTs", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/48", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-11-fairside-findings", "body": "Use of transfer function for transferring NFTs"}, {"title": "FSD.sol does not implement transfer-accept ownership pattern", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "FSD.sol does not implement transfer-accept ownership pattern"}, {"title": "Use existing memory version of state variables (Timelock.sol)", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/44", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Use existing memory version of state variables (Timelock.sol)"}, {"title": "Long revert strings", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "Long revert strings"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Open TODOs"}, {"title": "Double update on storage pointer can lead to massive gas consumption", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Double update on storage pointer can lead to massive gas consumption"}, {"title": "FSDVesting: Redundant _start input parameter in initiateVesting()", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "FSDVesting: Redundant _start input parameter in initiateVesting()"}, {"title": "FSDVesting: Optimise updateVestedTokens()", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "FSDVesting: Optimise updateVestedTokens()"}, {"title": "FSDVesting: Define new constant LINEAR_VEST_AFTER_CLIFF", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/30", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "FSDVesting: Define new constant LINEAR_VEST_AFTER_CLIFF"}, {"title": "FSDVesting: Constants can be made internal / private", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "FSDVesting: Constants can be made internal / private"}, {"title": "FSDVesting: Claiming tributes should call FSD token's corresponding functions", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/28", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "FSDVesting: Claiming tributes should call FSD token's corresponding functions"}, {"title": "redundant named return issue", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-fairside-findings", "body": "redundant named return issue"}, {"title": "safeApprove is deprecated.", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "sponsor disputed"], "target": "2021-11-fairside-findings", "body": "safeApprove is deprecated."}, {"title": "Offchain voting can't be renabled in DAO", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/6", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Offchain voting can't be renabled in DAO"}, {"title": "Assigning keccak operations to constant variables results in extra gas costs", "html_url": "https://github.com/code-423n4/2021-11-fairside-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-11-fairside-findings", "body": "Assigning keccak operations to constant variables results in extra gas costs"}, {"title": "Unused imported contract in xVader", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/269", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed", "XVader"], "target": "2021-11-vader-findings", "body": "Unused imported contract in xVader"}, {"title": "inconsistent use of msg.sender and _msgSender()", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/267", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "Vader"], "target": "2021-11-vader-findings", "body": "inconsistent use of msg.sender and _msgSender()"}, {"title": "setComponents function specs and logic mismatch", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/262", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-11-vader-findings", "body": "setComponents function specs and logic mismatch"}, {"title": "Users Can Reset Bond Depositor's Vesting Period", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/259", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged", "VaderBond"], "target": "2021-11-vader-findings", "body": "Users Can Reset Bond Depositor's Vesting Period"}, {"title": "Mixing different types of LP shares can lead to losses for Synth holders", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/257", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "VaderPoolV2", "BasePoolV2"], "target": "2021-11-vader-findings", "body": "Mixing different types of LP shares can lead to losses for Synth holders"}, {"title": "Covering impermanent loss allows profiting off asymmetric liquidity provision at expense of reserve holdings", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/255", "labels": ["bug", "duplicate", "3 (High Risk)", "VaderPoolV2", "BasePoolV2", "VaderRouterV2", "VaderReserve", "VaderMath"], "target": "2021-11-vader-findings", "body": "Covering impermanent loss allows profiting off asymmetric liquidity provision at expense of reserve holdings"}, {"title": "Unused slippage params", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/253", "labels": ["bug", "3 (High Risk)", "sponsor disputed", "VaderRouter"], "target": "2021-11-vader-findings", "body": "Unused slippage params"}, {"title": "VaderPoolV2.rescue results in loss of funds rather than recoverability", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/251", "labels": ["bug", "2 (Med Risk)", "VaderPoolV2"], "target": "2021-11-vader-findings", "body": "VaderPoolV2.rescue results in loss of funds rather than recoverability"}, {"title": "Add method to migrate from fungible to nonfungible liquidity", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/237", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "VaderPoolV2"], "target": "2021-11-vader-findings", "body": "Add method to migrate from fungible to nonfungible liquidity"}, {"title": "safe transfer of tokens", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/234", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2021-11-vader-findings", "body": "safe transfer of tokens"}, {"title": "block times 13s -> 12s", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/231", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "VaderBond"], "target": "2021-11-vader-findings", "body": "block times 13s -> 12s"}, {"title": "Unsupported tokens can be given fungible LP support", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/230", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "VaderPoolV2"], "target": "2021-11-vader-findings", "body": "Unsupported tokens can be given fungible LP support"}, {"title": "Contracts VaderPoolFactory and VaderReserve can be initialized multiple times", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/228", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-11-vader-findings", "body": "Contracts VaderPoolFactory and VaderReserve can be initialized multiple times"}, {"title": "`LinearVesting` missing events", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/225", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "LinearVesting"], "target": "2021-11-vader-findings", "body": "`LinearVesting` missing events"}, {"title": "Store VaderPoolV2 address as immutable in LPWrapper", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/224", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "LPWrapper"], "target": "2021-11-vader-findings", "body": "Store VaderPoolV2 address as immutable in LPWrapper"}, {"title": "Disregarding Check Effects in `VaderBond.redeem()` ", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/219", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "VaderBond"], "target": "2021-11-vader-findings", "body": "Disregarding Check Effects in `VaderBond.redeem()` "}, {"title": "Missing events for critical operations", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/214", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "VaderPoolV2"], "target": "2021-11-vader-findings", "body": "Missing events for critical operations"}, {"title": "Wrong design of `swap()` results in unexpected and unfavorable outputs", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/213", "labels": ["bug", "question", "3 (High Risk)", "sponsor disputed", "VaderMath"], "target": "2021-11-vader-findings", "body": "Wrong design of `swap()` results in unexpected and unfavorable outputs"}, {"title": "Wrong design/implementation of `addLiquidity()` allows attacker to steal funds from the liquidity pool", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/212", "labels": ["bug", "question", "3 (High Risk)", "sponsor disputed", "VaderPoolV2"], "target": "2021-11-vader-findings", "body": "Wrong design/implementation of `addLiquidity()` allows attacker to steal funds from the liquidity pool"}, {"title": "`mintSynth()` and `burnSynth()` can be front run", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/209", "labels": ["bug", "3 (High Risk)", "VaderPoolV2"], "target": "2021-11-vader-findings", "body": "`mintSynth()` and `burnSynth()` can be front run"}, {"title": "Changing function visibility from public to external can save gas", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/207", "labels": ["bug", "G (Gas Optimization)", "Timelock"], "target": "2021-11-vader-findings", "body": "Changing function visibility from public to external can save gas"}, {"title": "`SwapQueue.sol` Incomplete implementation", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/206", "labels": ["bug", "0 (Non-critical)", "SwapQueue"], "target": "2021-11-vader-findings", "body": "`SwapQueue.sol` Incomplete implementation"}, {"title": "`USDV.sol` Incomplete implementation", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/205", "labels": ["bug", "0 (Non-critical)", "USDV"], "target": "2021-11-vader-findings", "body": "`USDV.sol` Incomplete implementation"}, {"title": "Lack of access control allow attacker to `mintFungible()` and `mintSynth()` with other user's wallet balance", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/204", "labels": ["bug", "3 (High Risk)", "VaderPoolV2"], "target": "2021-11-vader-findings", "body": "Lack of access control allow attacker to `mintFungible()` and `mintSynth()` with other user's wallet balance"}, {"title": "VaderBond insufficient validation of max payout may prevent redeeming valid payout ", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/202", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "VaderBond"], "target": "2021-11-vader-findings", "body": "VaderBond insufficient validation of max payout may prevent redeeming valid payout "}, {"title": "`Router#initialize()` Lack of input validation for `reserve` asset", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/199", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "VaderReserve"], "target": "2021-11-vader-findings", "body": "`Router#initialize()` Lack of input validation for `reserve` asset"}, {"title": "Possibility of reducing the maxSupply of Vader", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/198", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "Vader"], "target": "2021-11-vader-findings", "body": "Possibility of reducing the maxSupply of Vader"}, {"title": "Unsafe type casting", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/195", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "LinearVesting"], "target": "2021-11-vader-findings", "body": "Unsafe type casting"}, {"title": "Tokens with fee on transfer are not supported", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/193", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "BasePoolV2"], "target": "2021-11-vader-findings", "body": "Tokens with fee on transfer are not supported"}, {"title": "`BasePoolV2#rescue()` should be `nonReentrant`", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/191", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "BasePoolV2"], "target": "2021-11-vader-findings", "body": "`BasePoolV2#rescue()` should be `nonReentrant`"}, {"title": "`VaderRouterV2#addLiquidity()` is not compatible with the interface of UniswapV2Router02#addliquidity()", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/190", "labels": ["bug", "1 (Low Risk)", "VaderRouterV2"], "target": "2021-11-vader-findings", "body": "`VaderRouterV2#addLiquidity()` is not compatible with the interface of UniswapV2Router02#addliquidity()"}, {"title": "Early user can break `addLiquidity`", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/189", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged", "BasePool"], "target": "2021-11-vader-findings", "body": "Early user can break `addLiquidity`"}, {"title": "Governance veto can be bypassed", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/186", "labels": ["bug", "3 (High Risk)", "GovernorAlpha"], "target": "2021-11-vader-findings", "body": "Governance veto can be bypassed"}, {"title": "Gas Optimization: Simplify Math", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/184", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "VaderMath"], "target": "2021-11-vader-findings", "body": "Gas Optimization: Simplify Math"}, {"title": "Gas Optimization: Inline instead of modifier", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/183", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-11-vader-findings", "body": "Gas Optimization: Inline instead of modifier"}, {"title": "Attacker can claim more IL by manipulating pool price then `removeLiquidity` ", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/182", "labels": ["bug", "3 (High Risk)", "VaderRouterV2"], "target": "2021-11-vader-findings", "body": "Attacker can claim more IL by manipulating pool price then `removeLiquidity` "}, {"title": "Use safeTransfer instead of transfer", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/181", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed", "VaderBond"], "target": "2021-11-vader-findings", "body": "Use safeTransfer instead of transfer"}, {"title": "block.chainid may change in case of a hardfork", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/178", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "UniswapV2ERC20"], "target": "2021-11-vader-findings", "body": "block.chainid may change in case of a hardfork"}, {"title": "No Transfer Ownership Pattern", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/175", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "VaderReserve", "VaderPoolFactory", "Treasury"], "target": "2021-11-vader-findings", "body": "No Transfer Ownership Pattern"}, {"title": "Governor's veto protection can be exploited", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/167", "labels": ["bug", "2 (Med Risk)", "GovernorAlpha"], "target": "2021-11-vader-findings", "body": "Governor's veto protection can be exploited"}, {"title": "Governor average block time is not up-to-date", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/166", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "GovernorAlpha"], "target": "2021-11-vader-findings", "body": "Governor average block time is not up-to-date"}, {"title": "`VaderRouter.calculateOutGivenIn` calculates wrong swap", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/162", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "VaderRouter"], "target": "2021-11-vader-findings", "body": "`VaderRouter.calculateOutGivenIn` calculates wrong swap"}, {"title": "`VaderRouter._swap` performs wrong swap", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/161", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "VaderRouter"], "target": "2021-11-vader-findings", "body": "`VaderRouter._swap` performs wrong swap"}, {"title": "setRewardsDuration() Lack of Input Validation May Break notifyRewardAmount()", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/156", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "StakingRewards"], "target": "2021-11-vader-findings", "body": "setRewardsDuration() Lack of Input Validation May Break notifyRewardAmount()"}, {"title": "Use bytes32 Rather Than String", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/153", "labels": ["bug", "G (Gas Optimization)", "GovernorAlpha"], "target": "2021-11-vader-findings", "body": "Use bytes32 Rather Than String"}, {"title": "`Converter.convert()` Proofs Can Be Replayed On Other Chains", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/150", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "Converter"], "target": "2021-11-vader-findings", "body": "`Converter.convert()` Proofs Can Be Replayed On Other Chains"}, {"title": "`BasePool.swap()` Is Callable By Anyone", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/149", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "VaderRouter", "BasePool"], "target": "2021-11-vader-findings", "body": "`BasePool.swap()` Is Callable By Anyone"}, {"title": "`BasePool.mint()` Is Callable By Anyone", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/148", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "VaderRouter", "BasePool"], "target": "2021-11-vader-findings", "body": "`BasePool.mint()` Is Callable By Anyone"}, {"title": "Anyone Can Arbitrarily Mint Synthetic Assets In `VaderPoolV2.mintSynth()`", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/146", "labels": ["bug", "3 (High Risk)", "VaderPoolV2"], "target": "2021-11-vader-findings", "body": "Anyone Can Arbitrarily Mint Synthetic Assets In `VaderPoolV2.mintSynth()`"}, {"title": "`Converter::constructor` ignores return value from function call", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/145", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "Converter"], "target": "2021-11-vader-findings", "body": "`Converter::constructor` ignores return value from function call"}, {"title": "Use constant `_INITIAL_EMISSION_CURVE` in `Vader.sol`", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/144", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "Vader"], "target": "2021-11-vader-findings", "body": "Use constant `_INITIAL_EMISSION_CURVE` in `Vader.sol`"}, {"title": "Function AdjustMaxSupply is incorrect (or at least confusing)", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/143", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "Vader"], "target": "2021-11-vader-findings", "body": "Function AdjustMaxSupply is incorrect (or at least confusing)"}, {"title": "Incorrect comments (technical issues)", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/141", "labels": ["bug", "1 (Low Risk)", "GovernorAlpha"], "target": "2021-11-vader-findings", "body": "Incorrect comments (technical issues)"}, {"title": "`StakingRewards.sol#updateReward` can be split to two modifiers to save gas", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/139", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "StakingRewards"], "target": "2021-11-vader-findings", "body": "`StakingRewards.sol#updateReward` can be split to two modifiers to save gas"}, {"title": "Missing duplicate veto check", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/137", "labels": ["bug", "duplicate", "2 (Med Risk)", "GovernorAlpha"], "target": "2021-11-vader-findings", "body": "Missing duplicate veto check"}, {"title": "might not check current block when casting vote", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/135", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "XVader", "GovernorAlpha"], "target": "2021-11-vader-findings", "body": "might not check current block when casting vote"}, {"title": "calldata vs memory in solidity gas usage", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/131", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "LinearVesting"], "target": "2021-11-vader-findings", "body": "calldata vs memory in solidity gas usage"}, {"title": "unessesary safe math in UniSwapV2Pair.sol line 120", "html_url": "https://github.com/code-423n4/2021-11-vader-findings/issues/127", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "UniswapV2Pair"], "target": "2021-11-vader-findings", "body": "unessesary safe math in UniSwapV2Pair.sol line 120"}]