[{"title": "`L1LPTGateway`, `L2LPTGateway` should start off paused after deployed", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/203", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "`L1LPTGateway`, `L2LPTGateway` should start off paused after deployed"}, {"title": "[WP-M4] Unable to use `L2GatewayRouter` to withdraw LPT from L2 to L1, as `L2LPTGateway` does not implement `L2GatewayRouter` expected method", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/202", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "[WP-M4] Unable to use `L2GatewayRouter` to withdraw LPT from L2 to L1, as `L2LPTGateway` does not implement `L2GatewayRouter` expected method"}, {"title": "The    initialize    function   does   not   check   for   non-zero   address and emit event", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/200", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "The    initialize    function   does   not   check   for   non-zero   address and emit event"}, {"title": "[WP-H3] `L1Migrator.sol#migrateETH()` Improper implementation of `L1Migrator` causing `migrateETH()` always reverts, can lead to ETH in `BridgeMinter` getting stuck in the contract", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/198", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "[WP-H3] `L1Migrator.sol#migrateETH()` Improper implementation of `L1Migrator` causing `migrateETH()` always reverts, can lead to ETH in `BridgeMinter` getting stuck in the contract"}, {"title": "Remove redundant `_setRoleAdmin()` can save gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/196", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Remove redundant `_setRoleAdmin()` can save gas"}, {"title": "[WP-M2] `DEFAULT_ADMIN_ROLE` can approve arbitrary address to spend any amount from the `L1Escrow` contract", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/195", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "[WP-M2] `DEFAULT_ADMIN_ROLE` can approve arbitrary address to spend any amount from the `L1Escrow` contract"}, {"title": "[WP-M1] `BURNER_ROLE` can burn any amount of L2LivepeerToken from an arbitrary address", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/194", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "[WP-M1] `BURNER_ROLE` can burn any amount of L2LivepeerToken from an arbitrary address"}, {"title": "[WP-M0] `MINTER_ROLE` can be granted by the deployer of L2LivepeerToken and mint arbitrary amount of tokens", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/193", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "[WP-M0] `MINTER_ROLE` can be granted by the deployer of L2LivepeerToken and mint arbitrary amount of tokens"}, {"title": "redundant function argument", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/192", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "redundant function argument"}, {"title": "`DelegatorPool.sol#claim()` Inaccurate check of `claimedInitialStake < initialStake`", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/190", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "`DelegatorPool.sol#claim()` Inaccurate check of `claimedInitialStake < initialStake`"}, {"title": "Cache and read storage variables from the stack can save gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/184", "labels": ["bug", "G (Gas Optimization)", "resolved"], "target": "2022-01-livepeer-findings", "body": "Cache and read storage variables from the stack can save gas"}, {"title": "Using immutable variables rather than local variables is cheaper", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/180", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2022-01-livepeer-findings", "body": "Using immutable variables rather than local variables is cheaper"}, {"title": "Save Gas With The Unchecked Keyword (L2LPTDataCache.sol)", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/173", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Save Gas With The Unchecked Keyword (L2LPTDataCache.sol)"}, {"title": "Constant variables using keccak can be immutable", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/172", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Constant variables using keccak can be immutable"}, {"title": "Missing setter function for l2MigratorAddr", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/167", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Missing setter function for l2MigratorAddr"}, {"title": "Admin can rug L2 Escrow tokens leading to reputation risk", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/165", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Admin can rug L2 Escrow tokens leading to reputation risk"}, {"title": "Gas: Mark functions as payable when users can't mistakenly send ETH", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/163", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Gas: Mark functions as payable when users can't mistakenly send ETH"}, {"title": "L2LPTGateway descriptions to be corrected", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/157", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "L2LPTGateway descriptions to be corrected"}, {"title": "MixinWrappers.batchRedeemWinningTickets doesn't check for supplied arrays length", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/155", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "MixinWrappers.batchRedeemWinningTickets doesn't check for supplied arrays length"}, {"title": "DelegatorPool.claim subtraction can be unchecked and done once", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/154", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "DelegatorPool.claim subtraction can be unchecked and done once"}, {"title": "L2Migrator.claimStake attempts fee transfer without checking its possibility", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/153", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "L2Migrator.claimStake attempts fee transfer without checking its possibility"}, {"title": "Gas: `L2LPTDataCache.sol:l1CirculatingSupply()`, Storage variables should be cached", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/151", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Gas: `L2LPTDataCache.sol:l1CirculatingSupply()`, Storage variables should be cached"}, {"title": "Gas: `L2LPTDataCache.sol:l1CirculatingSupply()`, strict comparison can avoid expensive operation", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/150", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Gas: `L2LPTDataCache.sol:l1CirculatingSupply()`, strict comparison can avoid expensive operation"}, {"title": "In `L2Migrator.sol:finalizeMigrateDelegator()`, Account `l2Addr`'s existence should be checked before call", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/149", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "In `L2Migrator.sol:finalizeMigrateDelegator()`, Account `l2Addr`'s existence should be checked before call"}, {"title": "Gas: `DelegatorPool.sol:claim()`, a repetitive arithmetic operation should be cached", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/146", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Gas: `DelegatorPool.sol:claim()`, a repetitive arithmetic operation should be cached"}, {"title": "`Manager.sol:setController()` should be a two-step process", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/143", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "`Manager.sol:setController()` should be a two-step process"}, {"title": "Signature authentication bypass for ZERO address", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/142", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Signature authentication bypass for ZERO address"}, {"title": "Gas: Missing checks for non-zero transfer value calls", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/141", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Gas: Missing checks for non-zero transfer value calls"}, {"title": "Missing `_from` param comment on `LivepeerToken.sol:burn()`", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/140", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Missing `_from` param comment on `LivepeerToken.sol:burn()`"}, {"title": "Group related data into separate structs", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/138", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Group related data into separate structs"}, {"title": "Gas: Control flow optimization in `L2LPTDataCache.sol:decreaseL2SupplyFromL1()`", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/137", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Gas: Control flow optimization in `L2LPTDataCache.sol:decreaseL2SupplyFromL1()`"}, {"title": "Avoiding unnecessary repeated account balance read can save gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/135", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Avoiding unnecessary repeated account balance read can save gas"}, {"title": "Inline unnecessary internal function can make the code simpler and save some gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/133", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Inline unnecessary internal function can make the code simpler and save some gas"}, {"title": "`DelegatorPool.sol#claim()` Use inline expression can save gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/131", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "`DelegatorPool.sol#claim()` Use inline expression can save gas"}, {"title": "Changing bool to uint256 can save gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/129", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Changing bool to uint256 can save gas"}, {"title": "Check of `!migratedDelegators[delegator]` can be done earlier to save gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/127", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Check of `!migratedDelegators[delegator]` can be done earlier to save gas"}, {"title": "Setting `uint256` variables to `0` is redundant", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/124", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Setting `uint256` variables to `0` is redundant"}, {"title": "`BridgeMinter.sol:migrateToNewMinter()`'s `transferOwnership` should be a two-step process", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/122", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "`BridgeMinter.sol:migrateToNewMinter()`'s `transferOwnership` should be a two-step process"}, {"title": "No checks around poll voting mechanism", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/121", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "No checks around poll voting mechanism"}, {"title": "Name reuse", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/119", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Name reuse"}, {"title": "EIP2612 in token problematic", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/118", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "EIP2612 in token problematic"}, {"title": "Custom GOVERNOR_ROLE unnecessary", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/116", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Custom GOVERNOR_ROLE unnecessary"}, {"title": "Revert string > 32 bytes", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/115", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Revert string > 32 bytes"}, {"title": "`initialize` function can be called by everyone and front-run in `DelegatorPool.sol`", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/112", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "`initialize` function can be called by everyone and front-run in `DelegatorPool.sol`"}, {"title": "Prevent accidentally burning tokens", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/111", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Prevent accidentally burning tokens"}, {"title": "Missing event & timelock for critical only* functions", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/107", "labels": ["bug", "0 (Non-critical)", "resolved"], "target": "2022-01-livepeer-findings", "body": "Missing event & timelock for critical only* functions"}, {"title": "Drop the token parameter from since it can only be the same value", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/103", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Drop the token parameter from since it can only be the same value"}, {"title": "L1Migrator.migrateLPT` can be used to take away protocol's access to LPT tokens in BridgeMinter", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/97", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "L1Migrator.migrateLPT` can be used to take away protocol's access to LPT tokens in BridgeMinter"}, {"title": "Gas optimization - remove method in DelegatorPool", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/92", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Gas optimization - remove method in DelegatorPool"}, {"title": "Front running in LivepeerToken", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/91", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Front running in LivepeerToken"}, {"title": "Possible frozen gateway", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/87", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Possible frozen gateway"}, {"title": "ERC20 Approval Race Condition", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/85", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "ERC20 Approval Race Condition"}, {"title": "Lack of event", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/83", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Lack of event"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/77", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Cache array length in for loops can save gas"}, {"title": "Gas: Consider making some constants as non-public to save gas", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/63", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Gas: Consider making some constants as non-public to save gas"}, {"title": "Gas: Internal functions can be private if the contract is not herited", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Gas: Internal functions can be private if the contract is not herited"}, {"title": "Gas: Use `calldata` instead of `memory` for external functions where the function argument is read-only.", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/61", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Gas: Use `calldata` instead of `memory` for external functions where the function argument is read-only."}, {"title": "double storage call in function decreaseL2SupplyFromL1", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "double storage call in function decreaseL2SupplyFromL1"}, {"title": "Protocol uses floating pragmas ", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Protocol uses floating pragmas "}, {"title": "no check that _amount arg is greater than 0 in outboundTransfer() function ", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/44", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "no check that _amount arg is greater than 0 in outboundTransfer() function "}, {"title": "L1Escrow.approve should be called before calling L1LPTGateway.finalizeInboundTransfer", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/40", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "L1Escrow.approve should be called before calling L1LPTGateway.finalizeInboundTransfer"}, {"title": "_token arg should be from a whitelisted group to avoid use of malicious tokens", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/38", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "_token arg should be from a whitelisted group to avoid use of malicious tokens"}, {"title": "using empty String which is already default 0x", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/30", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "using empty String which is already default 0x"}, {"title": "value argument in approve() function not required to be greater than 0", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/27", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "value argument in approve() function not required to be greater than 0"}, {"title": "burn() function does not check that _amount is larger than 0", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/25", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "burn() function does not check that _amount is larger than 0"}, {"title": "Public functions to external", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Public functions to external"}, {"title": "Prefix increments are cheaper than postfix increments", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Prefix increments are cheaper than postfix increments"}, {"title": "Upgrade pragma to at least 0.8.4", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/14", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Upgrade pragma to at least 0.8.4"}, {"title": "Solidity compiler versions mismatch", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Solidity compiler versions mismatch"}, {"title": "Not verified function inputs of public / external functions", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Not verified function inputs of public / external functions"}, {"title": "Named return issue", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-livepeer-findings", "body": "Named return issue"}, {"title": "Missing 0 address check", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/4", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "Missing 0 address check"}, {"title": "No check that the amount arg that is being minted is larger than 0", "html_url": "https://github.com/code-423n4/2022-01-livepeer-findings/issues/2", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-livepeer-findings", "body": "No check that the amount arg that is being minted is larger than 0"}, {"title": "Manipulation of the Y State Results in Interest Rate Manipulation", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/187", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Manipulation of the Y State Results in Interest Rate Manipulation"}, {"title": "Adding Unchecked Directive will Save Gas for BurnMath.sol#getAsset and BurnMath.sol#getCollateral functions", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/183", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Adding Unchecked Directive will Save Gas for BurnMath.sol#getAsset and BurnMath.sol#getCollateral functions"}, {"title": "`10 ** 9` can be changed to `1e9` and save some gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/177", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`10 ** 9` can be changed to `1e9` and save some gas"}, {"title": "`SquareRoot#sqrtUp()` Wrong implementation", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/176", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`SquareRoot#sqrtUp()` Wrong implementation"}, {"title": "Simplify `SquareRoot#sqrt()` can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/174", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Simplify `SquareRoot#sqrt()` can save gas"}, {"title": "`SafeCast.sol#toUint128()` Validation of input value can be done earlier to save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/173", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`SafeCast.sol#toUint128()` Validation of input value can be done earlier to save gas"}, {"title": "For uint `> 0` can be replaced with ` != 0` for gas optimization", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/172", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "For uint `> 0` can be replaced with ` != 0` for gas optimization"}, {"title": "Use short reason strings can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/171", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Use short reason strings can save gas"}, {"title": "Unnecessary checked arithmetic in for loops", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/170", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Unnecessary checked arithmetic in for loops"}, {"title": "`TimeswapConvenience.sol#borrowGivenDebt()` Attacker can increase `state.y` to an extremely large value with a dust amount of `assetOut`", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/169", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`TimeswapConvenience.sol#borrowGivenDebt()` Attacker can increase `state.y` to an extremely large value with a dust amount of `assetOut`"}, {"title": "Race condition on ERC20 approval", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/168", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Race condition on ERC20 approval"}, {"title": "`TimeswapPair.sol#mint()` Malicious user/attacker can mint new liquidity with an extremely small amount of `yIncrease` and malfunction the pair with the maturity", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/165", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`TimeswapPair.sol#mint()` Malicious user/attacker can mint new liquidity with an extremely small amount of `yIncrease` and malfunction the pair with the maturity"}, {"title": "Inline unnecessary internal function can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/163", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Inline unnecessary internal function can save gas"}, {"title": "`TimeswapPair.sol#borrow()` Improper implementation allows attacker to increase `pool.state.z` to a large value", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/162", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`TimeswapPair.sol#borrow()` Improper implementation allows attacker to increase `pool.state.z` to a large value"}, {"title": "Remove unnecessary variables can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/161", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Remove unnecessary variables can save gas"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/159", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Unused imports"}, {"title": "`NFTTokenURIScaffold.sol#_isLtoStringTrimmedeapYear()` Check of `flag == 0` can be done earlier", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/157", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`NFTTokenURIScaffold.sol#_isLtoStringTrimmedeapYear()` Check of `flag == 0` can be done earlier"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/156", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Adding unchecked directive can save gas"}, {"title": "`TimeswapPair.sol#mint()` Avoiding unnecessary code execution using checks can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/155", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`TimeswapPair.sol#mint()` Avoiding unnecessary code execution using checks can save gas"}, {"title": "`TimeswapPair.sol#mint()` Implementation can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/154", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`TimeswapPair.sol#mint()` Implementation can be simpler and save some gas"}, {"title": "Avoid unnecessary storage read can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/153", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Avoid unnecessary storage read can save gas"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/151", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Cache array length in for loops can save gas"}, {"title": "no contract check in function createPair ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/145", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "no contract check in function createPair "}, {"title": "can reduce gas in function createPair by replacing interface with address", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/144", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "can reduce gas in function createPair by replacing interface with address"}, {"title": "Gas Optimization: Cache result of `BlockNumber.get()`", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/142", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2022-01-timeswap-findings", "body": "Gas Optimization: Cache result of `BlockNumber.get()`"}, {"title": "using storage instead of memory to declare struct variable inside the function", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/141", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "using storage instead of memory to declare struct variable inside the function"}, {"title": "Open TODOs", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/138", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Open TODOs"}, {"title": "Missing input validation on array lengths (PayMath.sol)", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/137", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Missing input validation on array lengths (PayMath.sol)"}, {"title": "Use assignment not += in function mint (TimeswapPair.sol)", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/136", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Use assignment not += in function mint (TimeswapPair.sol)"}, {"title": "Typos", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/135", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Typos"}, {"title": "Outdated OpenZeppelin dependency", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/132", "labels": ["bug", "0 (Non-critical)"], "target": "2022-01-timeswap-findings", "body": "Outdated OpenZeppelin dependency"}, {"title": "XSS via SVG Construction contract", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/131", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "XSS via SVG Construction contract"}, {"title": "Gas: Break out of loop to save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/130", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2022-01-timeswap-findings", "body": "Gas: Break out of loop to save gas"}, {"title": "messing with the dues ids for victim user ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/129", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "messing with the dues ids for victim user "}, {"title": "calculate a condition before the loop instead of calculating it in every iteration", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/126", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "calculate a condition before the loop instead of calculating it in every iteration"}, {"title": "subtract values in the if statement to avoid a useless operation", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/124", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "subtract values in the if statement to avoid a useless operation"}, {"title": "Gas: No need to initialize variables with default values", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/120", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Gas: No need to initialize variables with default values"}, {"title": "frontrun Temporary Dos attack", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/119", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "frontrun Temporary Dos attack"}, {"title": "`safeSymbol()` can revert causing DoS", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/114", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`safeSymbol()` can revert causing DoS"}, {"title": "`safeName()` can revert causing DoS", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/113", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`safeName()` can revert causing DoS"}, {"title": "safeDecimals can revert causing DoS", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/112", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "safeDecimals can revert causing DoS"}, {"title": "`burn()` doesn't call ERC721 `_burn()`", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/111", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "`burn()` doesn't call ERC721 `_burn()`"}, {"title": "Remove salt from createPair()", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/109", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Remove salt from createPair()"}, {"title": "Incorrect Q in comment", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Incorrect Q in comment"}, {"title": "Caching weth in timeswapMintCallback can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/107", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Caching weth in timeswapMintCallback can save gas"}, {"title": "Caching pair in timeswapPayCallback can save gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/106", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Caching pair in timeswapPayCallback can save gas"}, {"title": "Constructor Does Not Check for Zero Addresses for _factory and _weth", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/104", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Constructor Does Not Check for Zero Addresses for _factory and _weth"}, {"title": "Less than 256 uints are not gas efficient", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Less than 256 uints are not gas efficient"}, {"title": "WETH9 example uses payable.transfer", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/98", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "WETH9 example uses payable.transfer"}, {"title": "TimeswapPair.pay doesn't check for non-existent debt owner", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/97", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "TimeswapPair.pay doesn't check for non-existent debt owner"}, {"title": "Borrowing of the whole asset supply can yield a low-level division revert", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/96", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Borrowing of the whole asset supply can yield a low-level division revert"}, {"title": "WithdrawMath.getCollateral reads storage repetitively for the same state variables that don\u2019t change", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "WithdrawMath.getCollateral reads storage repetitively for the same state variables that don\u2019t change"}, {"title": "TimeswapPair's burn miss current pool liquidity check", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/94", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "TimeswapPair's burn miss current pool liquidity check"}, {"title": "Convenience contract fails to function if asset or collateral is an ERC20 token with fees", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/93", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Convenience contract fails to function if asset or collateral is an ERC20 token with fees"}, {"title": "more efficient gas usage by removing && operator", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/89", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "more efficient gas usage by removing && operator"}, {"title": "TimeswapConvenience params structure components are not validated before usage", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/88", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "TimeswapConvenience params structure components are not validated before usage"}, {"title": "TimeswapPair.sol modifier lock: Switching between 1, 2 instead of 0, 1 is more gas efficient", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "TimeswapPair.sol modifier lock: Switching between 1, 2 instead of 0, 1 is more gas efficient"}, {"title": "DOS pay function", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/86", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "DOS pay function"}, {"title": "`pendingOwner` should be reset to `address(0)` after `acceptOwner()` is successfully called", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/83", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "`pendingOwner` should be reset to `address(0)` after `acceptOwner()` is successfully called"}, {"title": "Unused Named Returns", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Unused Named Returns"}, {"title": "Gas optimization: Placement of require statements in `TimeswapPair:pay()`", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/80", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Gas optimization: Placement of require statements in `TimeswapPair:pay()`"}, {"title": "users might pay enormous amouts of gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/74", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "users might pay enormous amouts of gas"}, {"title": "Wrong Safe implementation", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/69", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Wrong Safe implementation"}, {"title": "\"constants\" expressions are expressions, not constants. Use \"immutable\" instead.", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "\"constants\" expressions are expressions, not constants. Use \"immutable\" instead."}, {"title": "Use Custom Errors instead of Revert Strings to save Gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/61", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Use Custom Errors instead of Revert Strings to save Gas"}, {"title": "Mint library uses wrong error code for max collateral check", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/56", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Mint library uses wrong error code for max collateral check"}, {"title": "Gas saving", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Gas saving"}, {"title": "A more efficient for loop index proceeding", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "A more efficient for loop index proceeding"}, {"title": "No check that _factory and _weth are different addresses in constructor ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/45", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "No check that _factory and _weth are different addresses in constructor "}, {"title": "no reentrancy guard on mint() function that has a callback ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/43", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "no reentrancy guard on mint() function that has a callback "}, {"title": "Insurance.sol constructor doesn't check if addresses passed are unique ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/42", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Insurance.sol constructor doesn't check if addresses passed are unique "}, {"title": "Liquidity constructor doesn't check that addresses are unique ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/39", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Liquidity constructor doesn't check that addresses are unique "}, {"title": "waste of gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "waste of gas"}, {"title": "gas", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "gas"}, {"title": "dangerous receive function", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "dangerous receive function"}, {"title": "Core configuration variables aren't checked for operational mistakes on construction", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/34", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Core configuration variables aren't checked for operational mistakes on construction"}, {"title": "Improper Upper Bound Definition on the Fee", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/33", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-timeswap-findings", "body": "Improper Upper Bound Definition on the Fee"}, {"title": "Use `calldata` instead of `memory` for function parameters", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-timeswap-findings", "body": "Use `calldata` instead of `memory` for function parameters"}, {"title": "Named return issue", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/24", "labels": ["bug", "1 (Low Risk)"], "target": "2022-01-timeswap-findings", "body": "Named return issue"}, {"title": "Not verified function inputs of public / external functions", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/23", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-timeswap-findings", "body": "Not verified function inputs of public / external functions"}, {"title": "Public functions to external", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/16", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Public functions to external"}, {"title": "SafeTransfer library called from pay() function is not needed ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/11", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "SafeTransfer library called from pay() function is not needed "}, {"title": "missing check  in constructor ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-timeswap-findings", "body": "missing check  in constructor "}, {"title": "pay() function has callback to msg.sender before important state updates ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/7", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "pay() function has callback to msg.sender before important state updates "}, {"title": "borrow() function has state updates after a callback to msg.sender ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/6", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "borrow() function has state updates after a callback to msg.sender "}, {"title": "In the lend() function state updates are made after the callback ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/5", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "In the lend() function state updates are made after the callback "}, {"title": "Important state updates are made after the callback in the mint() function ", "html_url": "https://github.com/code-423n4/2022-01-timeswap-findings/issues/4", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-timeswap-findings", "body": "Important state updates are made after the callback in the mint() function "}, {"title": "Repeated calls", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/178", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Repeated calls"}, {"title": "Unchecked maths", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/177", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Unchecked maths"}, {"title": "quoteTokenQtyToReturn = internalBalances.quoteTokenReserveQty", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/176", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "quoteTokenQtyToReturn = internalBalances.quoteTokenReserveQty"}, {"title": "Inclusive conditions", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/175", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Inclusive conditions"}, {"title": "Redundant code", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/173", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Redundant code"}, {"title": "Revert when K >= 2^256", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/172", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2022-01-elasticswap-findings", "body": "Revert when K >= 2^256"}, {"title": "saving gas by not returning the variables that was declared to be returned", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/171", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "saving gas by not returning the variables that was declared to be returned"}, {"title": "inlining a function to save gas", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/169", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "inlining a function to save gas"}, {"title": "Gas Optimization: float multiplication optimization", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/167", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "Gas Optimization: float multiplication optimization"}, {"title": "Gas Optimization: Use deterministic contract address", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/163", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "Gas Optimization: Use deterministic contract address"}, {"title": "Gas Optimization: `> 0` is less efficient than `!= 0` for uint in require condition", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/161", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Gas Optimization: `> 0` is less efficient than `!= 0` for uint in require condition"}, {"title": "swapBaseTokenForQuoteToken and swapQuoteTokenForBaseToken do not check output quantities to be achievable", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/160", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "swapBaseTokenForQuoteToken and swapQuoteTokenForBaseToken do not check output quantities to be achievable"}, {"title": "Custom Errors", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/159", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "Custom Errors"}, {"title": "Initialize to default state is redundant", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/158", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Initialize to default state is redundant"}, {"title": "Remove unused code can save gas", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/157", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "Remove unused code can save gas"}, {"title": "Cache and read storage variables from the stack can save gas", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/156", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Cache and read storage variables from the stack can save gas"}, {"title": " Outdated versions of OpenZeppelin library", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/155", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": " Outdated versions of OpenZeppelin library"}, {"title": "Incorrect implementation of `_quoteTokenQtyMin`, `_baseTokenQtyMin`", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/153", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor disputed"], "target": "2022-01-elasticswap-findings", "body": "Incorrect implementation of `_quoteTokenQtyMin`, `_baseTokenQtyMin`"}, {"title": "Redundant `return` for named returns", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/151", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Redundant `return` for named returns"}, {"title": "Simplify `MathLib#sqrt()` can save gas", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/147", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Simplify `MathLib#sqrt()` can save gas"}, {"title": "[WP-H2] Transferring `quoteToken` to the exchange pool contract will cause future liquidity providers to lose funds", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/146", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "[WP-H2] Transferring `quoteToken` to the exchange pool contract will cause future liquidity providers to lose funds"}, {"title": "[WP-H1] The value of LP token can be manipulated by the first minister, which allows the attacker to dilute future liquidity providers' shares", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/145", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "[WP-H1] The value of LP token can be manipulated by the first minister, which allows the attacker to dilute future liquidity providers' shares"}, {"title": "[WP-H0] In the case of Single Asset Entry, new liquidity providers will suffer fund loss due to wrong formula of \u0394Ro", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/144", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "[WP-H0] In the case of Single Asset Entry, new liquidity providers will suffer fund loss due to wrong formula of \u0394Ro"}, {"title": "Making the MathLib internal", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/141", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Making the MathLib internal"}, {"title": "Leftover tokens will be stuck in the contract with no ways to recover", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/136", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-elasticswap-findings", "body": "Leftover tokens will be stuck in the contract with no ways to recover"}, {"title": "10 ** 18 can be changed to 1e18 ", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/134", "labels": ["bug", "0 (Non-critical)"], "target": "2022-01-elasticswap-findings", "body": "10 ** 18 can be changed to 1e18 "}, {"title": "Exchange.sol is not Pausable", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/124", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "Exchange.sol is not Pausable"}, {"title": "Fee-on-transfer check can be avoided", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/119", "labels": ["bug", "duplicate", "1 (Low Risk)", "disagree with severity"], "target": "2022-01-elasticswap-findings", "body": "Fee-on-transfer check can be avoided"}, {"title": "Comment missing function parameter", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/114", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Comment missing function parameter"}, {"title": "Base token properties not verified", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/111", "labels": ["bug", "duplicate", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-elasticswap-findings", "body": "Base token properties not verified"}, {"title": "Users can grief name and symbol for a market, DAO unable to change", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/110", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Users can grief name and symbol for a market, DAO unable to change"}, {"title": "Math base functions can be made internal", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/107", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "Math base functions can be made internal"}, {"title": "Shift Right instead of Dividing by 2", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/100", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "Shift Right instead of Dividing by 2"}, {"title": "`removeLiquidity.sol#baseTokenQtyToRemoveFromInternalAccounting` should not be cached", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/94", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "`removeLiquidity.sol#baseTokenQtyToRemoveFromInternalAccounting` should not be cached"}, {"title": "Description of `_expirationTimestamp` is not exact", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/93", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2022-01-elasticswap-findings", "body": "Description of `_expirationTimestamp` is not exact"}, {"title": "removeLiquidity() _tokenRecipient Lack of Zero Address Check May Cause User Lose Fund Permanently", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/87", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2022-01-elasticswap-findings", "body": "removeLiquidity() _tokenRecipient Lack of Zero Address Check May Cause User Lose Fund Permanently"}, {"title": "createNewExchange() Possible to Add Elastic Token as Quote Token Due to No Validation", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/84", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-elasticswap-findings", "body": "createNewExchange() Possible to Add Elastic Token as Quote Token Due to No Validation"}, {"title": "`ExchangeFactory.sol`'s `transferOwnership` should be a two-step process", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/81", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "`ExchangeFactory.sol`'s `transferOwnership` should be a two-step process"}, {"title": "using modifier instead of function can save gas", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/77", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2022-01-elasticswap-findings", "body": "using modifier instead of function can save gas"}, {"title": "Gas in `MathLib.sol:calculateQuoteTokenQty()`: SLOADs minimization", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/63", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-elasticswap-findings", "body": "Gas in `MathLib.sol:calculateQuoteTokenQty()`: SLOADs minimization"}, {"title": "`internalBalance` state variable is read and written multiple times within a single transaction", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/55", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "`internalBalance` state variable is read and written multiple times within a single transaction"}, {"title": "Gas in `MathLib.sol:calculateQtyToReturnAfterFees()`: Avoid expensive calculation by checking if `_tokenASwapQty == 0 || _tokenBReserveQty == 0`", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/48", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Gas in `MathLib.sol:calculateQtyToReturnAfterFees()`: Avoid expensive calculation by checking if `_tokenASwapQty == 0 || _tokenBReserveQty == 0`"}, {"title": "Gas: Mark `ExchangeFactory.sol:setFeeAddress()` as payable", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-elasticswap-findings", "body": "Gas: Mark `ExchangeFactory.sol:setFeeAddress()` as payable"}, {"title": "Gas: `MathLib.sol` is importing `Exchange.sol`", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-elasticswap-findings", "body": "Gas: `MathLib.sol` is importing `Exchange.sol`"}, {"title": "Gas: Reorder require statements `MathLib.sol:calculateAddLiquidityQuantities()` to save gas on revert", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Gas: Reorder require statements `MathLib.sol:calculateAddLiquidityQuantities()` to save gas on revert"}, {"title": "Gas: Reorder require statements `Exchange.sol:removeLiquidity()` to save gas on revert", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/33", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-elasticswap-findings", "body": "Gas: Reorder require statements `Exchange.sol:removeLiquidity()` to save gas on revert"}, {"title": "Gas: Conditional flow optimization in `Exchange.sol:removeLiquidity()`", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/28", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Gas: Conditional flow optimization in `Exchange.sol:removeLiquidity()`"}, {"title": "Gas: `ExchangeFactory.feeAddress()` should be declared external", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/26", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2022-01-elasticswap-findings", "body": "Gas: `ExchangeFactory.feeAddress()` should be declared external"}, {"title": "Use of Similar variable names", "html_url": "https://github.com/code-423n4/2022-01-elasticswap-findings/issues/20", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-elasticswap-findings", "body": "Use of Similar variable names"}, {"title": "Event for merge", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/197", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Event for merge"}, {"title": "Improper event declaration", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/196", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Improper event declaration"}, {"title": "\"Safe\" ERC20 functions for XDEFI?", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/194", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "\"Safe\" ERC20 functions for XDEFI?"}, {"title": "Possible profitability manipulations", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/193", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Possible profitability manipulations"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/185", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Adding unchecked directive can save gas"}, {"title": "No option to unlock funds before set duration", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/183", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "No option to unlock funds before set duration"}, {"title": "Unnecessary require statement", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/179", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Unnecessary require statement"}, {"title": "Wrong revert message", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/171", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Wrong revert message"}, {"title": "Malicious early user/attacker can malfunction the contract and even freeze users' funds in edge cases", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/156", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Malicious early user/attacker can malfunction the contract and even freeze users' funds in edge cases"}, {"title": "`XDEFIDistribution.sol#_updateXDEFIBalance()` Avoiding unnecessary storage writes can save gas", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/151", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "`XDEFIDistribution.sol#_updateXDEFIBalance()` Avoiding unnecessary storage writes can save gas"}, {"title": "Unsafe type casting", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/142", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2022-01-xdefi-findings", "body": "Unsafe type casting"}, {"title": "`_zeroDurationPointBase` can potentially be exploited to get more scores", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/139", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "`_zeroDurationPointBase` can potentially be exploited to get more scores"}, {"title": "Avoid inline code for better readibility", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/136", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-xdefi-findings", "body": "Avoid inline code for better readibility"}, {"title": "Implicit casts should be explicit as per the global code style", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/129", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Implicit casts should be explicit as per the global code style"}, {"title": "&& operator can use more gas", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/128", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "&& operator can use more gas"}, {"title": "`XDEFIDistribution.sol#relock()` Implementation can be simpler and save some gas", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/123", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "`XDEFIDistribution.sol#relock()` Implementation can be simpler and save some gas"}, {"title": "Gas optimization in XDEFIDistribution.sol - shifting instead of multiplying or dividing by power of 2", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/122", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Gas optimization in XDEFIDistribution.sol - shifting instead of multiplying or dividing by power of 2"}, {"title": "Gas optimization in XDEFIDistribution.sol - inlining some functions", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/121", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-xdefi-findings", "body": "Gas optimization in XDEFIDistribution.sol - inlining some functions"}, {"title": "Gas optimization in XDEFIDistribution.sol - variable that is not used", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/120", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Gas optimization in XDEFIDistribution.sol - variable that is not used"}, {"title": "Sub-optimal calls should be allowed instead of reverted as resending the transaction will cost more gas", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/116", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Sub-optimal calls should be allowed instead of reverted as resending the transaction will cost more gas"}, {"title": "Constants are not explicitly declared", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/115", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Constants are not explicitly declared"}, {"title": "gas optimization", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/103", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "gas optimization"}, {"title": "Field bonusMultiplier of struct Position can be removed", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/101", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Field bonusMultiplier of struct Position can be removed"}, {"title": "XDEFIDistribution: _unlock function should only be called with tokenId_ parameter", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/98", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-xdefi-findings", "body": "XDEFIDistribution: _unlock function should only be called with tokenId_ parameter"}, {"title": "Less than 256 uints are not gas efficient", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/97", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Less than 256 uints are not gas efficient"}, {"title": "in function setLockPeriods, multiplier can be set to lower than 100", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/96", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "in function setLockPeriods, multiplier can be set to lower than 100"}, {"title": "`> 0 can be replaced with != 0 for gas optimization`", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/88", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-xdefi-findings", "body": "`> 0 can be replaced with != 0 for gas optimization`"}, {"title": "`pointCorrection` can be stored in a uint256 rather than int256 to save gas from casting.", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "`pointCorrection` can be stored in a uint256 rather than int256 to save gas from casting."}, {"title": "Various Non-Conformance to Solidity naming conventions", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Various Non-Conformance to Solidity naming conventions"}, {"title": "Gas Optimization: Tight variable packing in `XDEFIDistribution.sol`", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/54", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-xdefi-findings", "body": "Gas Optimization: Tight variable packing in `XDEFIDistribution.sol`"}, {"title": "Owner can steal XDEFI without any capital risk", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/52", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Owner can steal XDEFI without any capital risk"}, {"title": "Gas: avoid unnecessary SSTORE on `proposeOwnership`", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-xdefi-findings", "body": "Gas: avoid unnecessary SSTORE on `proposeOwnership`"}, {"title": "Gas: `XDEFIDistribution.sol`'s `withdrawAmount` substraction can be unchecked", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Gas: `XDEFIDistribution.sol`'s `withdrawAmount` substraction can be unchecked"}, {"title": "XDEFIDistribution: lock should be reused in lockWithPermit", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/47", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "XDEFIDistribution: lock should be reused in lockWithPermit"}, {"title": "setLockPeriods function lack of input validation", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/38", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "setLockPeriods function lack of input validation"}, {"title": "MAX_TOTAL_XDEFI_SUPPLY should be constant", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "MAX_TOTAL_XDEFI_SUPPLY should be constant"}, {"title": "Distribution Updates Can Be Gamed", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/30", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-xdefi-findings", "body": "Distribution Updates Can Be Gamed"}, {"title": "Use `calldata` instead of `memory` for external functions where the function argument is read-only.", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Use `calldata` instead of `memory` for external functions where the function argument is read-only."}, {"title": "\"constants\" expressions are expressions, not constants. Use \"immutable\" instead.", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2022-01-xdefi-findings", "body": "\"constants\" expressions are expressions, not constants. Use \"immutable\" instead."}, {"title": "The reentrancy vulnerability in _safeMint can allow an attacker to steal all rewards", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/25", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "The reentrancy vulnerability in _safeMint can allow an attacker to steal all rewards"}, {"title": "Use Custom Errors to save Gas", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Use Custom Errors to save Gas"}, {"title": "`_safeMint` Will Fail Due To An Edge Case In Calculating `tokenId` Using The `_generateNewTokenId` Function", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/17", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "`_safeMint` Will Fail Due To An Edge Case In Calculating `tokenId` Using The `_generateNewTokenId` Function"}, {"title": "Missing event for admin function setBaseURI", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Missing event for admin function setBaseURI"}, {"title": "Assert instead require to validate user inputs", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/14", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Assert instead require to validate user inputs"}, {"title": "Require with not comprehensive message", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Require with not comprehensive message"}, {"title": "Prefix increments are cheaper than postfix increments", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/9", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Prefix increments are cheaper than postfix increments"}, {"title": "Unnecessary array boundaries check when loading an array element twice", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/8", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Unnecessary array boundaries check when loading an array element twice"}, {"title": "Public functions to external", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Public functions to external"}, {"title": "Unneccessary check on total supply of XDEFI token", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Unneccessary check on total supply of XDEFI token"}, {"title": "Use of return value from assignment hampers readability", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/2", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Use of return value from assignment hampers readability"}, {"title": "Usage of zero storage for reentrancy guard increases chance that gas refund is capped", "html_url": "https://github.com/code-423n4/2022-01-xdefi-findings/issues/1", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-xdefi-findings", "body": "Usage of zero storage for reentrancy guard increases chance that gas refund is capped"}, {"title": "missing whenNotPaused", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/280", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-sherlock-findings", "body": "missing whenNotPaused"}, {"title": "debt = balance", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/276", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "debt = balance"}, {"title": "Re-entrancy protection", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/274", "labels": ["bug", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "Re-entrancy protection"}, {"title": "Pausable paused() is not enforced to be present", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/273", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-sherlock-findings", "body": "Pausable paused() is not enforced to be present"}, {"title": "Claim SHER on behalf of others", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/271", "labels": ["bug", "help wanted", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Claim SHER on behalf of others"}, {"title": "Slippage parameter for SherBuy", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/270", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Slippage parameter for SherBuy"}, {"title": "safeApprove will fail if the current approval is not 0", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/269", "labels": ["bug", "1 (Low Risk)"], "target": "2022-01-sherlock-findings", "body": "safeApprove will fail if the current approval is not 0"}, {"title": "Withrawals will fail if the market has high utilization", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/267", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Withrawals will fail if the market has high utilization"}, {"title": "cheaper to calculate stakeShares first then do the transfer", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/256", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "cheaper to calculate stakeShares first then do the transfer"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/253", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Cheaper to use calldata than memory", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/249", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Cheaper to use calldata than memory"}, {"title": "Unnecessary typcasting", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/245", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-sherlock-findings", "body": "Unnecessary typcasting"}, {"title": "Name collision in `SherlockProtocolManager`", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/239", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Name collision in `SherlockProtocolManager`"}, {"title": "Gas Optimization: Struct layout", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/236", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Gas Optimization: Struct layout"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/231", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Cache array length in for loops can save gas"}, {"title": "SherlockClaimManager: Incorrect amounts needed and paid for escalated claims ", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/230", "labels": ["bug", "documentation", "2 (Med Risk)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "SherlockClaimManager: Incorrect amounts needed and paid for escalated claims "}, {"title": "ISherlockClaimManager: Outdated example on claims process", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/229", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "ISherlockClaimManager: Outdated example on claims process"}, {"title": "SherlockClaimManager: Confusing comment on BOND", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/228", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "SherlockClaimManager: Confusing comment on BOND"}, {"title": "SherlockClaimManager: startClaim() has outdated comment", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/226", "labels": ["bug", "documentation", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "SherlockClaimManager: startClaim() has outdated comment"}, {"title": "Sherlock: Revert for non-existent ID in viewRewardForArbRestake", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/225", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-sherlock-findings", "body": "Sherlock: Revert for non-existent ID in viewRewardForArbRestake"}, {"title": "SherBuy: SHER and USDC token addresses should be derived from _sherlockPosition", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/222", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-sherlock-findings", "body": "SherBuy: SHER and USDC token addresses should be derived from _sherlockPosition"}, {"title": "SherlockClaimManager: Clarify why sherlockCore is used as proposer in UMA.requestAndProposePriceFor()", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/220", "labels": ["bug", "documentation", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "SherlockClaimManager: Clarify why sherlockCore is used as proposer in UMA.requestAndProposePriceFor()"}, {"title": "Grammar", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/219", "labels": ["bug", "documentation", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "Grammar"}, {"title": "Inconsistent Acronym of UmaHaltOperator", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/218", "labels": ["bug", "documentation", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "Inconsistent Acronym of UmaHaltOperator"}, {"title": "SherlockClaimManager: reentrancy comment for priceProposed() and priceDisputed() can be phrased better", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/217", "labels": ["bug", "documentation", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "SherlockClaimManager: reentrancy comment for priceProposed() and priceDisputed() can be phrased better"}, {"title": "Spelling Errors", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/216", "labels": ["bug", "documentation", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "Spelling Errors"}, {"title": "SherDistributionManager: Cheaper to assign than add _tvl", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/215", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "SherDistributionManager: Cheaper to assign than add _tvl"}, {"title": "Manager: Check non-zero ETH balance before sending", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/211", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Manager: Check non-zero ETH balance before sending"}, {"title": "Updating Manager contract could destruct Sherlock core functionalities   ", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/201", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Updating Manager contract could destruct Sherlock core functionalities   "}, {"title": "Saving gas by used length", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/200", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Saving gas by used length"}, {"title": "Gas: Non-strict inequalities are cheaper than strict ones", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/193", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Gas: Non-strict inequalities are cheaper than strict ones"}, {"title": "`SherlockProtocolManager.sol`: `setMinActiveBalance()` and `forceRemoveByActiveBalance()` should be put behind a timelock", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/191", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "`SherlockProtocolManager.sol`: `setMinActiveBalance()` and `forceRemoveByActiveBalance()` should be put behind a timelock"}, {"title": "USDC is upgradeable: received amount should be calculated", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/188", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-sherlock-findings", "body": "USDC is upgradeable: received amount should be calculated"}, {"title": "10 ** 18 can be changed to 1e18 and save some gas", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/185", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "10 ** 18 can be changed to 1e18 and save some gas"}, {"title": "There is a deviation in the parameter value setting.", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/174", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "There is a deviation in the parameter value setting."}, {"title": "Many `protocolUpdate()` calls erase historic previousCoverage", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/171", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Many `protocolUpdate()` calls erase historic previousCoverage"}, {"title": "Incorrect comment about callback call", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/169", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Incorrect comment about callback call"}, {"title": "Bond price not controlled by Sherlock", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/166", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Bond price not controlled by Sherlock"}, {"title": "Implementation is not align with documentation #2", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/154", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Implementation is not align with documentation #2"}, {"title": "Gas in `SherlockClaimManager.sol:priceDisputed():`: a value used only once shouldn't get cached", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/146", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Gas in `SherlockClaimManager.sol:priceDisputed():`: a value used only once shouldn't get cached"}, {"title": "saving gas on reverted transactions", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/142", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "saving gas on reverted transactions"}, {"title": "yieldStrategyDeposit doesn't check that there is enough USDC to deposit", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/141", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "yieldStrategyDeposit doesn't check that there is enough USDC to deposit"}, {"title": "Gas: Using the logical NOT operator `!` is cheaper than a comparison to the constant boolean value `false`", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/132", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Gas: Using the logical NOT operator `!` is cheaper than a comparison to the constant boolean value `false`"}, {"title": "If condition can be removed from SherlockClaimManager.cleanUp function", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/130", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "If condition can be removed from SherlockClaimManager.cleanUp function"}, {"title": "Missing parameter check or confusing comment in function protocolRemove (SherlockProtocolManager.sol)", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/123", "labels": ["bug", "help wanted", "1 (Low Risk)"], "target": "2022-01-sherlock-findings", "body": "Missing parameter check or confusing comment in function protocolRemove (SherlockProtocolManager.sol)"}, {"title": "Gas: Consider making some constants as non-public to save gas", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/116", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Gas: Consider making some constants as non-public to save gas"}, {"title": "Gas: \"constants\" expressions are expressions, not constants. Use \"immutable\" instead.", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/113", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Gas: \"constants\" expressions are expressions, not constants. Use \"immutable\" instead."}, {"title": "Wrong user input check of incoming USDC when escalating claim", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/112", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Wrong user input check of incoming USDC when escalating claim"}, {"title": "Gas: `++i` costs less gas compared to `i++`", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/111", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Gas: `++i` costs less gas compared to `i++`"}, {"title": "Use of the reserved keyword `error` as a variable name", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/110", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Use of the reserved keyword `error` as a variable name"}, {"title": "tokenBalanceOfAddress of nftOwner becomes permanently incorrect after arbRestake", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/109", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-sherlock-findings", "body": "tokenBalanceOfAddress of nftOwner becomes permanently incorrect after arbRestake"}, {"title": "No Transfer Ownership Pattern", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/100", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2022-01-sherlock-findings", "body": "No Transfer Ownership Pattern"}, {"title": "_isEscalateState Comment Improvement", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/95", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "_isEscalateState Comment Improvement"}, {"title": "Incorrect comparison for prevCoverage in startClaim()", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/94", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Incorrect comparison for prevCoverage in startClaim()"}, {"title": "Pause/unpause functions descriptions aren't fully correct ", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/90", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Pause/unpause functions descriptions aren't fully correct "}, {"title": "Implementation is not align with documentation", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/88", "labels": ["bug", "documentation", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "Implementation is not align with documentation"}, {"title": "Use return value of assignments to save gas", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/78", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Use return value of assignments to save gas"}, {"title": "Avoid unneeded SLOADs by caching values in memory", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/77", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Avoid unneeded SLOADs by caching values in memory"}, {"title": "updateYieldStrategy will freeze some funds with the old Strategy if yieldStrategy fails to withdraw all the funds because of liquidity issues", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/76", "labels": ["bug", "enhancement", "2 (Med Risk)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "updateYieldStrategy will freeze some funds with the old Strategy if yieldStrategy fails to withdraw all the funds because of liquidity issues"}, {"title": "Use structs instead of three mappings in Sherlock.sol", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/69", "labels": ["bug", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "Use structs instead of three mappings in Sherlock.sol"}, {"title": "Hardhat references in Manager.sol code", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/67", "labels": ["bug", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "Hardhat references in Manager.sol code"}, {"title": "Never-used ETH transfers in _sweep", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/66", "labels": ["bug", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "Never-used ETH transfers in _sweep"}, {"title": "Reenterancy in `_sendSherRewardsToOwner()`", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/60", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-sherlock-findings", "body": "Reenterancy in `_sendSherRewardsToOwner()`"}, {"title": "ISherlockGov.removeSherDistributionManager description is incorrect", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/56", "labels": ["bug", "documentation", "0 (Non-critical)"], "target": "2022-01-sherlock-findings", "body": "ISherlockGov.removeSherDistributionManager description is incorrect"}, {"title": "Function call can be done after required check.", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/54", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "Function call can be done after required check."}, {"title": "addressShares introduction made further shares accounting error prone", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/53", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-sherlock-findings", "body": "addressShares introduction made further shares accounting error prone"}, {"title": "`Sherlock.sol#_beforeTokenTransfer()` has not needed if statements", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/48", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "`Sherlock.sol#_beforeTokenTransfer()` has not needed if statements"}, {"title": "`SherDistributionManager.sol#slopeRewardsAvailable` can be calculated later to save gas", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/44", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "`SherDistributionManager.sol#slopeRewardsAvailable` can be calculated later to save gas"}, {"title": "first user can steal everyone else's tokens", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/39", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-sherlock-findings", "body": "first user can steal everyone else's tokens"}, {"title": "gas saving III", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/31", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-sherlock-findings", "body": "gas saving III"}, {"title": "safeApprove of openZeppelin is deprecated", "html_url": "https://github.com/code-423n4/2022-01-sherlock-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-sherlock-findings", "body": "safeApprove of openZeppelin is deprecated"}, {"title": "Gas in `FlashGovernanceArbiter.assertGovernanceApproved()`: `flashGovernanceConfig.asset` and `flashGovernanceConfig.amount` should get cached", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/336", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Gas in `FlashGovernanceArbiter.assertGovernanceApproved()`: `flashGovernanceConfig.asset` and `flashGovernanceConfig.amount` should get cached"}, {"title": "All the scxMinted is at risk of being burnt.(Limbo.sol)", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/335", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "All the scxMinted is at risk of being burnt.(Limbo.sol)"}, {"title": "Gas in `LimboDAO.seed()`: Avoiding a 2N for-loop for a N one", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/309", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Gas in `LimboDAO.seed()`: Avoiding a 2N for-loop for a N one"}, {"title": "Logic error in `burnFlashGovernanceAsset` can cause locked assets to be stolen", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/305", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Logic error in `burnFlashGovernanceAsset` can cause locked assets to be stolen"}, {"title": "LP pricing formula is vulnerable to flashloan manipulation", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/304", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "LP pricing formula is vulnerable to flashloan manipulation"}, {"title": "Lack of access control on `assertGovernanceApproved` can cause funds to be locked", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/300", "labels": ["bug", "3 (High Risk)", "resolved"], "target": "2022-01-behodler-findings", "body": "Lack of access control on `assertGovernanceApproved` can cause funds to be locked"}, {"title": "Lack of access control in the `parameterize` function of proposal contracts", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/296", "labels": ["bug", "duplicate", "2 (Med Risk)", "resolved"], "target": "2022-01-behodler-findings", "body": "Lack of access control in the `parameterize` function of proposal contracts"}, {"title": "Gas in `TransferHelper.ERC20NetTransfer`: check if amount != 0 before transfer", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/290", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Gas in `TransferHelper.ERC20NetTransfer`: check if amount != 0 before transfer"}, {"title": "use multiple require() instead of &&", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/282", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor disputed"], "target": "2022-01-behodler-findings", "body": "use multiple require() instead of &&"}, {"title": "Immutable variables", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/270", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Immutable variables"}, {"title": "Gas in `FlashGovernanceArbiter.enforceTolerance()`: substractions that can't underflow should be unchecked", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/265", "labels": ["bug", "duplicate", "G (Gas Optimization)", "resolved"], "target": "2022-01-behodler-findings", "body": "Gas in `FlashGovernanceArbiter.enforceTolerance()`: substractions that can't underflow should be unchecked"}, {"title": "Gas in `UniswapHelper.configure()`: require statements should be reordered to save gas on revert", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/256", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Gas in `UniswapHelper.configure()`: require statements should be reordered to save gas on revert"}, {"title": "Limbo, LimboDAO and FlashGovernanceArbiter events aren't indexed", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/249", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Limbo, LimboDAO and FlashGovernanceArbiter events aren't indexed"}, {"title": "dai already update on constructor", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/246", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "dai already update on constructor"}, {"title": "Use of _msgSender()", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/242", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Use of _msgSender()"}, {"title": "Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/237", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Consistently check account balance before and after transfers for Fee-On-Transfer discrepencies"}, {"title": "UniswapHelper is open to manipulations on all chains whose id isn't 1", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/236", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor disputed"], "target": "2022-01-behodler-findings", "body": "UniswapHelper is open to manipulations on all chains whose id isn't 1"}, {"title": "Loss of precision in `purchasePyroFlan()`", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/232", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Loss of precision in `purchasePyroFlan()`"}, {"title": "Flash loan price manipulation in `purchasePyroFlan()`", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/231", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Flash loan price manipulation in `purchasePyroFlan()`"}, {"title": "UniswapHelper.buyFlanAndBurn is a subject to sandwich attacks", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/230", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "UniswapHelper.buyFlanAndBurn is a subject to sandwich attacks"}, {"title": "Incorrect unlockTime can DOS withdrawGovernanceAsset", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/228", "labels": ["bug", "duplicate", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Incorrect unlockTime can DOS withdrawGovernanceAsset"}, {"title": "Gas Optimization: Struct layout", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/222", "labels": ["bug", "duplicate", "G (Gas Optimization)", "resolved"], "target": "2022-01-behodler-findings", "body": "Gas Optimization: Struct layout"}, {"title": "Gas savings", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/217", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Gas savings"}, {"title": "Incorrect require statement", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/213", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Incorrect require statement"}, {"title": "Unstake wont work if pending reward is 0", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/210", "labels": ["bug", "duplicate", "1 (Low Risk)", "resolved"], "target": "2022-01-behodler-findings", "body": "Unstake wont work if pending reward is 0"}, {"title": "Gas: \"constants\" expressions are expressions, not constants.", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/197", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Gas: \"constants\" expressions are expressions, not constants."}, {"title": "Proposal cost doesn't use votingDuration", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/189", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Proposal cost doesn't use votingDuration"}, {"title": "Wrong units in `convertFateToFlan()`", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/188", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Wrong units in `convertFateToFlan()`"}, {"title": "transferFrom gas improvement", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/187", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "transferFrom gas improvement"}, {"title": "Revert string > 32 bytes", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/185", "labels": ["bug", "G (Gas Optimization)", "resolved"], "target": "2022-01-behodler-findings", "body": "Revert string > 32 bytes"}, {"title": "Using type(uint).max is cheaper than using calculation.", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/173", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor disputed"], "target": "2022-01-behodler-findings", "body": "Using type(uint).max is cheaper than using calculation."}, {"title": "`LimboDAO.seed`: Wrong error message", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/167", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "`LimboDAO.seed`: Wrong error message"}, {"title": "`Limbo.sol` Does Not Implement `WithdrawERC20Proposal` Functionality", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/165", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "`Limbo.sol` Does Not Implement `WithdrawERC20Proposal` Functionality"}, {"title": "flan can't be transferred unless the flan contract has flan balance greater than the amount we want to transfer", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/160", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "flan can't be transferred unless the flan contract has flan balance greater than the amount we want to transfer"}, {"title": "Insufficient Validation of `burnFlashGovernanceAsset()` Parameters", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/158", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Insufficient Validation of `burnFlashGovernanceAsset()` Parameters"}, {"title": "Burning a User's Tokens for a Flash Proposal will not Deduct Their Balance", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/157", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Burning a User's Tokens for a Flash Proposal will not Deduct Their Balance"}, {"title": "Loss Of Flash Governance Tokens If They Are Not Withdrawn Before The Next Request", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/156", "labels": ["bug", "3 (High Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Loss Of Flash Governance Tokens If They Are Not Withdrawn Before The Next Request"}, {"title": "Reentrancy on Flash Governance Proposal Withdrawal", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/154", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Reentrancy on Flash Governance Proposal Withdrawal"}, {"title": "The system can get to a \"stuck\" state if a bad proposal (proposal that can't be executed) is accepted", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/153", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "The system can get to a \"stuck\" state if a bad proposal (proposal that can't be executed) is accepted"}, {"title": "not emitting `ClaimedReward` event ", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/148", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "not emitting `ClaimedReward` event "}, {"title": "user won't be able to get his rewards in case of staking with amount = 0", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/146", "labels": ["bug", "question", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "user won't be able to get his rewards in case of staking with amount = 0"}, {"title": "inline a function (use its code) instead of calling it", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/143", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "inline a function (use its code) instead of calling it"}, {"title": "a not needed variable", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/142", "labels": ["bug", "disagree with severity", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "a not needed variable"}, {"title": "use a defined constant to save gas", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/127", "labels": ["bug", "disagree with severity", "G (Gas Optimization)", "resolved", "sponsor disputed"], "target": "2022-01-behodler-findings", "body": "use a defined constant to save gas"}, {"title": "typo", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/123", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "typo"}, {"title": "save gas by using `if else` instead of calculating the same expression twice", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/122", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "save gas by using `if else` instead of calculating the same expression twice"}, {"title": "use variables indtead of array to save gas", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/119", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "use variables indtead of array to save gas"}, {"title": "You can flip governance decisions without extending vote duration", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/106", "labels": ["bug", "question", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "You can flip governance decisions without extending vote duration"}, {"title": "You can grief migrations by sending SCX to the UniswapHelper", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/105", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "You can grief migrations by sending SCX to the UniswapHelper"}, {"title": "Calling `generateFLNQuote` twice in every block prevents any migration", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/102", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Calling `generateFLNQuote` twice in every block prevents any migration"}, {"title": "commented debugging code", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/97", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "commented debugging code"}, {"title": "gas optimization by using shift operator", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "gas optimization by using shift operator"}, {"title": "Unnecessary if else in `UniswapHelper.configure()`", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/89", "labels": ["bug", "disagree with severity", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Unnecessary if else in `UniswapHelper.configure()`"}, {"title": "Add emergency stop for specific stablecoins in `FlanBackstop`", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/88", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Add emergency stop for specific stablecoins in `FlanBackstop`"}, {"title": "`LimboDAO.killDAO()` doesn't update the DAO address of `FlanBackstop`, `UniswapHelper`, and `ProposalFactory`", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/86", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "`LimboDAO.killDAO()` doesn't update the DAO address of `FlanBackstop`, `UniswapHelper`, and `ProposalFactory`"}, {"title": "Remove duplicate call to save gas", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/79", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Remove duplicate call to save gas"}, {"title": "`Governable` configuration can be backrun", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/78", "labels": ["bug", "question", "1 (Low Risk)", "resolved", "sponsor disputed"], "target": "2022-01-behodler-findings", "body": "`Governable` configuration can be backrun"}, {"title": "`approveUnstake` is unsafe ", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "`approveUnstake` is unsafe "}, {"title": "Denial of Service in UpdateMultipleSoulConfigProposal", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/52", "labels": ["bug", "duplicate", "1 (Low Risk)", "resolved"], "target": "2022-01-behodler-findings", "body": "Denial of Service in UpdateMultipleSoulConfigProposal"}, {"title": "Lack of Governance in Governable methods", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/51", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor disputed"], "target": "2022-01-behodler-findings", "body": "Lack of Governance in Governable methods"}, {"title": "Gas saving removing variable", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor confirmed"], "target": "2022-01-behodler-findings", "body": "Gas saving removing variable"}, {"title": "transfer return value of a general ERC20 is ignored", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/37", "labels": ["bug", "1 (Low Risk)", "resolved"], "target": "2022-01-behodler-findings", "body": "transfer return value of a general ERC20 is ignored"}, {"title": "Two Steps Verification before Transferring Ownership", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/27", "labels": ["bug", "question", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Two Steps Verification before Transferring Ownership"}, {"title": "Use calldata instead of memory", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Use calldata instead of memory"}, {"title": "Unnecessary default assignment", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/20", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Unnecessary default assignment"}, {"title": "Unnecessary constructor", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Unnecessary constructor"}, {"title": "Use != 0 instead of > 0", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/15", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Use != 0 instead of > 0"}, {"title": "Caching array length can save gas", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/12", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Caching array length can save gas"}, {"title": "Prefix increments are cheaper than postfix increments", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/10", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-behodler-findings", "body": "Prefix increments are cheaper than postfix increments"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2022-01-behodler-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor disputed"], "target": "2022-01-behodler-findings", "body": "Unused imports"}, {"title": "Users Can Game `sNOTE` Minting If Buybacks Occur Infrequently", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/231", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-notional-findings", "body": "Users Can Game `sNOTE` Minting If Buybacks Occur Infrequently"}, {"title": "A Malicious Treasury Manager Can Burn Treasury Tokens By Setting `makerFee` To The Amount The Maker Receives", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/230", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "A Malicious Treasury Manager Can Burn Treasury Tokens By Setting `makerFee` To The Amount The Maker Receives"}, {"title": "`sNOTE` Holders Are Not Incetivized To Vote On Proposals To Call `extractTokensForCollateralShortfall`", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/229", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-notional-findings", "body": "`sNOTE` Holders Are Not Incetivized To Vote On Proposals To Call `extractTokensForCollateralShortfall`"}, {"title": "Prefix (`++i`), rather than postfix (`i++`), increment/decrement operators should be used in for-loops", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/228", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Prefix (`++i`), rather than postfix (`i++`), increment/decrement operators should be used in for-loops"}, {"title": "`extractTokensForCollateralShortfall` Can Be Frontrun By Non-Stakers", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/227", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2022-01-notional-findings", "body": "`extractTokensForCollateralShortfall` Can Be Frontrun By Non-Stakers"}, {"title": "Improper Contract Upgrades Can Lead To Loss Of Contract Ownership", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/223", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-notional-findings", "body": "Improper Contract Upgrades Can Lead To Loss Of Contract Ownership"}, {"title": "`getVotingPower` Truncates Result Leading To Inaccuracies In Voting Power", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/222", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "`getVotingPower` Truncates Result Leading To Inaccuracies In Voting Power"}, {"title": "Double _requireAccountNotInCoolDown", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/214", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Double _requireAccountNotInCoolDown"}, {"title": "Optimization on _redeemAndTransfer", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/213", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Optimization on _redeemAndTransfer"}, {"title": "considered changing it to storage ", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/210", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2022-01-notional-findings", "body": "considered changing it to storage "}, {"title": "MAX_SHORTFALL_WITHDRAW limit on BTP extraction is not enforced", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/209", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "MAX_SHORTFALL_WITHDRAW limit on BTP extraction is not enforced"}, {"title": "Unused state variables", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/204", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Unused state variables"}, {"title": "Inclusive conditions", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/202", "labels": ["bug", "0 (Non-critical)"], "target": "2022-01-notional-findings", "body": "Inclusive conditions"}, {"title": "Gas: `reserveInternal.subNoNeg(bufferInternal)` can be unchecked", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/199", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Gas: `reserveInternal.subNoNeg(bufferInternal)` can be unchecked"}, {"title": "`makerPrice` assumes oracle price is always in 18 decimals", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/198", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "`makerPrice` assumes oracle price is always in 18 decimals"}, {"title": "Usage of deprecated ChainLink API in `EIP1271Wallet`", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/197", "labels": ["bug", "2 (Med Risk)"], "target": "2022-01-notional-findings", "body": "Usage of deprecated ChainLink API in `EIP1271Wallet`"}, {"title": "`StorageId` enums may never be shuffled", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/196", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-notional-findings", "body": "`StorageId` enums may never be shuffled"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/195", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Missing parameter validation"}, {"title": "Treasury cannot claim COMP tokens & COMP tokens are stuck", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/192", "labels": ["bug", "3 (High Risk)", "disagree with severity"], "target": "2022-01-notional-findings", "body": "Treasury cannot claim COMP tokens & COMP tokens are stuck"}, {"title": "No upper limit check on swap fee Percentage", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/182", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2022-01-notional-findings", "body": "No upper limit check on swap fee Percentage"}, {"title": "`sNOTE.sol#_mintFromAssets()` Lack of slippage control", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/181", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "`sNOTE.sol#_mintFromAssets()` Lack of slippage control"}, {"title": "Multiple Missing zero address checks ", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/174", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-notional-findings", "body": "Multiple Missing zero address checks "}, {"title": "Missing validation check in totalSupply()", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/170", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Missing validation check in totalSupply()"}, {"title": "`getVotingPower` Is Not Equipped To Handle On-Chain Voting", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/165", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "`getVotingPower` Is Not Equipped To Handle On-Chain Voting"}, {"title": "Gas Optimization: Unnecessary comparison", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/161", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Gas Optimization: Unnecessary comparison"}, {"title": "`_validateOrder` Does Not Allow Anyone To Be A Taker Of An Off-Chain Order", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/152", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "`_validateOrder` Does Not Allow Anyone To Be A Taker Of An Off-Chain Order"}, {"title": "Oracle Time Interval Is Small", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/150", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2022-01-notional-findings", "body": "Oracle Time Interval Is Small"}, {"title": "TreasuryManager and sNOTE events aren't indexed", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/131", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "TreasuryManager and sNOTE events aren't indexed"}, {"title": "Gas in `TreasuryManager.sol`: Inline function `_investWETHToBuyNOTE()`", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/129", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Gas in `TreasuryManager.sol`: Inline function `_investWETHToBuyNOTE()`"}, {"title": "Gas in `Bitmap.sol:getMSB()`: unnecessary arithmetic operation", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/128", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Gas in `Bitmap.sol:getMSB()`: unnecessary arithmetic operation"}, {"title": "`BalanceHandler.sol:getBalanceStorage()`: `store` is used only once and shouldn't get cached", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/125", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "`BalanceHandler.sol:getBalanceStorage()`: `store` is used only once and shouldn't get cached"}, {"title": "`approve()` return value not checked", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/115", "labels": ["bug", "0 (Non-critical)"], "target": "2022-01-notional-findings", "body": "`approve()` return value not checked"}, {"title": "Remove unnecessary super._beforeTokenTransfer()", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/112", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Remove unnecessary super._beforeTokenTransfer()"}, {"title": "`TreasuryAction.sol:transferReserveToTreasury()`: Missing @return comment ", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/111", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-notional-findings", "body": "`TreasuryAction.sol:transferReserveToTreasury()`: Missing @return comment "}, {"title": "Revert string > 32 bytes", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/110", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Revert string > 32 bytes"}, {"title": "`TreasuryAction.sol`:`modifier onlyOwner()`'s revert message is confusing", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/106", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-notional-findings", "body": "`TreasuryAction.sol`:`modifier onlyOwner()`'s revert message is confusing"}, {"title": "setReserveCashBalance can only set less reserves", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/103", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "setReserveCashBalance can only set less reserves"}, {"title": "Gas: When a function use the `onlyOwner` modifier, use `msg.sender` instead of `owner`", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/97", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Gas: When a function use the `onlyOwner` modifier, use `msg.sender` instead of `owner`"}, {"title": "Gas: Places where both the `return` statement and a named `returns` are used", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/95", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-notional-findings", "body": "Gas: Places where both the `return` statement and a named `returns` are used"}, {"title": "Gas: Missing checks for non-zero transfer value calls", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/94", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Gas: Missing checks for non-zero transfer value calls"}, {"title": "Consider making contracts Pausable", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/90", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-notional-findings", "body": "Consider making contracts Pausable"}, {"title": "Gas: Use Custom Errors instead of Revert Strings to save Gas", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/86", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-notional-findings", "body": "Gas: Use Custom Errors instead of Revert Strings to save Gas"}, {"title": "Conversions between sNOTE and BPT when burning cause less sNOTE to be burned than expected", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/71", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Conversions between sNOTE and BPT when burning cause less sNOTE to be burned than expected"}, {"title": "Cooldown and redeem windows can be rendered useless.", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/68", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Cooldown and redeem windows can be rendered useless."}, {"title": "`_investWETHToBuyNOTE` is unnecessarily roundabout.", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/65", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "`_investWETHToBuyNOTE` is unnecessarily roundabout."}, {"title": "Unnecessary inheritance messing with inheritance tree.", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Unnecessary inheritance messing with inheritance tree."}, {"title": "Initialisation of zero entries in arrays is unnecessary", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/59", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Initialisation of zero entries in arrays is unnecessary"}, {"title": "Placement of require statement", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/55", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Placement of require statement"}, {"title": "Incorrect comment on cooldown check", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-notional-findings", "body": "Incorrect comment on cooldown check"}, {"title": "coolDown.redeemWindowEnd serves no purpose", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "coolDown.redeemWindowEnd serves no purpose"}, {"title": "Comment refers to NOTE when it means WETH", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/42", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Comment refers to NOTE when it means WETH"}, {"title": "`mintFromNOTE`, `mintFromETH` and `mintFromWETH` can be merged into two functions to give users better experience.", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "`mintFromNOTE`, `mintFromETH` and `mintFromWETH` can be merged into two functions to give users better experience."}, {"title": "No upper limit on `coolDownTimeInSeconds` allows funds to be locked sNOTE owner.", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/40", "labels": ["bug", "2 (Med Risk)"], "target": "2022-01-notional-findings", "body": "No upper limit on `coolDownTimeInSeconds` allows funds to be locked sNOTE owner."}, {"title": "Require statement on nonzero pool address is impossible to fail ", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "Require statement on nonzero pool address is impossible to fail "}, {"title": "_getToken not resilient to errors", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/36", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2022-01-notional-findings", "body": "_getToken not resilient to errors"}, {"title": "safeApprove of openZeppelin is deprecated", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/20", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2022-01-notional-findings", "body": "safeApprove of openZeppelin is deprecated"}, {"title": "Require with empty message", "html_url": "https://github.com/code-423n4/2022-01-notional-findings/issues/18", "labels": ["bug", "0 (Non-critical)", "disagree with severity"], "target": "2022-01-notional-findings", "body": "Require with empty message"}, {"title": "Code does not follow the best practice of check-effects-interaction", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/321", "labels": [], "target": "2022-01-trader-joe-findings", "body": "Code does not follow the best practice of check-effects-interaction"}, {"title": "Cheaper operation should be done first in an if statement", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/319", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "Cheaper operation should be done first in an if statement"}, {"title": "Lack of input checks (withrawal penalties should always be greater than 0)", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/314", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Lack of input checks (withrawal penalties should always be greater than 0)"}, {"title": "Gas Optimziation: Unnecessary pairBalance call", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/310", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "Gas Optimziation: Unnecessary pairBalance call"}, {"title": "Gas Optimization: Use type(uint256).max instead of block.timestamp", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/309", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Gas Optimization: Use type(uint256).max instead of block.timestamp"}, {"title": "Reasonable upper limits for phase durations", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/303", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Reasonable upper limits for phase durations"}, {"title": "Repeated storage access", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/300", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Repeated storage access"}, {"title": "Unchecked math operations", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/296", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Unchecked math operations"}, {"title": "Unchecked math operations", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/295", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Unchecked math operations"}, {"title": "Separate issuer functions from regular users", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/294", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Separate issuer functions from regular users"}, {"title": "Unsafe call to decimals()", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/291", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Unsafe call to decimals()"}, {"title": "Gas Optimization: fmul optimization", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/290", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Gas Optimization: fmul optimization"}, {"title": "Gas Optimization: Variables that could be set immutable", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/284", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Gas Optimization: Variables that could be set immutable"}, {"title": "Use constructors", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/282", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Use constructors"}, {"title": "Error never thrown", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/278", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Error never thrown"}, {"title": "Mark unchanging variables immutable", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/274", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-trader-joe-findings", "body": "Mark unchanging variables immutable"}, {"title": "Use Shift Right/Left instead of Division/Multiplication if possible", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/271", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Use Shift Right/Left instead of Division/Multiplication if possible"}, {"title": "RocketJoeStaking.initialize arguments need to be checked", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/266", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "RocketJoeStaking.initialize arguments need to be checked"}, {"title": "using += to save gas", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/265", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "using += to save gas"}, {"title": "Missing consistent zero address checks", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/263", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "Missing consistent zero address checks"}, {"title": "Functions can be external", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/262", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "Functions can be external"}, {"title": "possibility of minting rJOE tokens before ownership  is changed to RocketJoeStaking", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/261", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "possibility of minting rJOE tokens before ownership  is changed to RocketJoeStaking"}, {"title": "using `unchecked` can save gas", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/260", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "using `unchecked` can save gas"}, {"title": "Improper Upper Bound Definition on the Fee", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/255", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "Improper Upper Bound Definition on the Fee"}, {"title": "`createRJLaunchEvent()` Multiple `launchEvent` can be created unexpectedly by reentrancy", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/248", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "`createRJLaunchEvent()` Multiple `launchEvent` can be created unexpectedly by reentrancy"}, {"title": "`createRJLaunchEvent()` can be called by anyone with 1 Wei of `_token` and stop others from creating RJLaunchEvent with the same token anymore", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/247", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "`createRJLaunchEvent()` can be called by anyone with 1 Wei of `_token` and stop others from creating RJLaunchEvent with the same token anymore"}, {"title": "`RocketJoeFactory.sol#createRJLaunchEvent()` Check of `_issuer != address(0)`, `_token != address(0)`, `_tokenAmount > 0` can be done earlier to save gas", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/245", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "`RocketJoeFactory.sol#createRJLaunchEvent()` Check of `_issuer != address(0)`, `_token != address(0)`, `_tokenAmount > 0` can be done earlier to save gas"}, {"title": "Use short reason strings can save gas", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/242", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Use short reason strings can save gas"}, {"title": "`Ownable` library is redundant", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/241", "labels": ["bug", "disagree with severity", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "`Ownable` library is redundant"}, {"title": "\"> 0\" is less efficient than \"!= 0\" for unsigned integers", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/240", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "\"> 0\" is less efficient than \"!= 0\" for unsigned integers"}, {"title": "Check if amount > 0 before token transfer can save gas", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/238", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-01-trader-joe-findings", "body": "Check if amount > 0 before token transfer can save gas"}, {"title": "Cache external call results can save gas", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/236", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "Cache external call results can save gas"}, {"title": "Redundant type casting", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/235", "labels": ["bug", "disagree with severity", "G (Gas Optimization)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "Redundant type casting"}, {"title": "Cache and read storage variables from the stack can save gas", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/234", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Cache and read storage variables from the stack can save gas"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/233", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Code Style: non-constant should not be named in all caps", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/230", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2022-01-trader-joe-findings", "body": "Code Style: non-constant should not be named in all caps"}, {"title": "Saving more gas by using `immutable phase`", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/229", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Saving more gas by using `immutable phase`"}, {"title": "Caching `rJoe` variable", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/227", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Caching `rJoe` variable"}, {"title": "Mint() by OnlyOwner Lack of Zero Address Check for Address _to", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/223", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Mint() by OnlyOwner Lack of Zero Address Check for Address _to"}, {"title": "Gas in `LaunchEvent.sol:pairBalance()`: `wavaxAllocated` should get cached", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/219", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Gas in `LaunchEvent.sol:pairBalance()`: `wavaxAllocated` should get cached"}, {"title": "Gas in `LaunchEvent.sol:getPenalty()`: `PHASE_ONE_DURATION` and `PHASE_ONE_NO_FEE_DURATION` should get cached", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/218", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Gas in `LaunchEvent.sol:getPenalty()`: `PHASE_ONE_DURATION` and `PHASE_ONE_NO_FEE_DURATION` should get cached"}, {"title": "Gas in `LaunchEvent.sol:emergencyWithdraw()`: `issuer` should get cached", "html_url": "https://github.com/code-423n4/2022-01-trader-joe-findings/issues/217", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2022-01-trader-joe-findings", "body": "Gas in `LaunchEvent.sol:emergencyWithdraw()`: `issuer` should get cached"}]