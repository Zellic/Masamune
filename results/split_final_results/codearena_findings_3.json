[{"title": "Attackers can grief voting by removing votes just before finalization", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/105", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Attackers can grief voting by removing votes just before finalization"}, {"title": "Event log poisoning by griefing attackers", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/104", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Event log poisoning by griefing attackers"}, {"title": "Deflationary assets are not handled uniformly across the protocol", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/101", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Deflationary assets are not handled uniformly across the protocol"}, {"title": "Max approvals are risky", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/100", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Max approvals are risky"}, {"title": "Unused membership logic", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/99", "labels": ["bug", "invalid", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Unused membership logic"}, {"title": "Address confusion causes incorrect accounting of user\u2019s harvest rewards", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/97", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Address confusion causes incorrect accounting of user\u2019s harvest rewards"}, {"title": "Purging DAO deployer immediately in a single-step is risky", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/96", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Purging DAO deployer immediately in a single-step is risky"}, {"title": "Type mismatch between parameters of setGenesisFactors() and state variables", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Type mismatch between parameters of setGenesisFactors() and state variables"}, {"title": "Missing event emit for MemberWithdraws", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/94", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Missing event emit for MemberWithdraws"}, {"title": "Missing zero-address checks in constructors and setters", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/93", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Missing zero-address checks in constructors and setters"}, {"title": "Critical protocol parameter changes should have sanity/threshold checks", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/91", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Critical protocol parameter changes should have sanity/threshold checks"}, {"title": "Critical protocol parameter changes should emit events", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/90", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Critical protocol parameter changes should emit events"}, {"title": "ROUTER._handleTransferIn()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "ROUTER._handleTransferIn()"}, {"title": "ROUTER.addTradeFee()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/86", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "ROUTER.addTradeFee()"}, {"title": "Frontrunning is infinitely profitable, slippage is implied 100%", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/85", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Frontrunning is infinitely profitable, slippage is implied 100%"}, {"title": "SYNTHVAULT.addFee() Gas Optimization", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/83", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "SYNTHVAULT.addFee() Gas Optimization"}, {"title": "SYNTHVAULT.harvestAll() Gas Optimization", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/82", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "SYNTHVAULT.harvestAll() Gas Optimization"}, {"title": "POOL.addFee() Gas Optimization", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "POOL.addFee() Gas Optimization"}, {"title": "ROUTER.addFee() Gas Optimization", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/80", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "ROUTER.addFee() Gas Optimization"}, {"title": "Pool decimals are always assumed to be 18", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/79", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "Pool decimals are always assumed to be 18"}, {"title": "Inconsistency in Function Naming", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/75", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Inconsistency in Function Naming"}, {"title": "Use unchecked blocks in some cases to save gas.", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/74", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Use unchecked blocks in some cases to save gas."}, {"title": "Variables that can be  converted into immutable", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Variables that can be  converted into immutable"}, {"title": "wrong `calcLiquidityHoldings` that leads to dead fund in the Pool", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/71", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "wrong `calcLiquidityHoldings` that leads to dead fund in the Pool"}, {"title": "Inconsistent value of burnSynth between Pool and Synth", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/70", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Inconsistent value of burnSynth between Pool and Synth"}, {"title": "Dao.sol: Unused hasMinority()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/69", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Dao.sol: Unused hasMinority()"}, {"title": "removeForMember can be called by anyone, allowing for griefing", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/68", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "removeForMember can be called by anyone, allowing for griefing"}, {"title": "_deposit resetting user rewards can be used to grief them and make them loose rewards via `depositForMember `", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/66", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "_deposit resetting user rewards can be used to grief them and make them loose rewards via `depositForMember `"}, {"title": "Calling synthVault:_deposit multiple times, will make you loose rewards", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Calling synthVault:_deposit multiple times, will make you loose rewards"}, {"title": "Remove _token from addLiquiditySingleForMember", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Remove _token from addLiquiditySingleForMember"}, {"title": "Utils.sol: Redundant two assignment in calcLiquidityUnitsAsym()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/63", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Utils.sol: Redundant two assignment in calcLiquidityUnitsAsym()"}, {"title": "Utils.sol: Calculation issue with Slippage Adjustment", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Utils.sol: Calculation issue with Slippage Adjustment"}, {"title": "Dao.sol: newParamProposal takes in uint32 param", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/61", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Dao.sol: newParamProposal takes in uint32 param"}, {"title": "Dao.sol: Define BASE as iBEP20 instead of address", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Dao.sol: Define BASE as iBEP20 instead of address"}, {"title": "Misuse of AMM model on minting Synth (resubmit to add more detail)", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/59", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Misuse of AMM model on minting Synth (resubmit to add more detail)"}, {"title": "Router.sol: Redundant _token initialization in addLiquiditySingleForMember()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/57", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Router.sol: Redundant _token initialization in addLiquiditySingleForMember()"}, {"title": "Pool.sol + Router.sol: Set revenue directly as _fee", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/56", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Pool.sol + Router.sol: Set revenue directly as _fee"}, {"title": "Pool.sol + Synth.sol: Inconsistent Allowance Checking Implementation", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/55", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Pool.sol + Synth.sol: Inconsistent Allowance Checking Implementation"}, {"title": "isEqual(): Inconsistent Implementation", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/54", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "isEqual(): Inconsistent Implementation"}, {"title": "DaoVault.sol & BondVault.sol: Discrepancies in mapping visibility", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/53", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "DaoVault.sol & BondVault.sol: Discrepancies in mapping visibility"}, {"title": "Dao.sol: Return votes > consensus", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/52", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Dao.sol: Return votes > consensus"}, {"title": "BondVault.sol: Optimizations", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "BondVault.sol: Optimizations"}, {"title": "Router.sol: lastMonth variable is private", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/50", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Router.sol: lastMonth variable is private"}, {"title": "Pool.sol: Optimizations", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Pool.sol: Optimizations"}, {"title": "Dao.sol: Restrict Function Visibilities", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/48", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Dao.sol: Restrict Function Visibilities"}, {"title": "Synth.sol: Redundant _handleTransferIn, onlyDAO, DEPLOYER", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Synth.sol: Redundant _handleTransferIn, onlyDAO, DEPLOYER"}, {"title": "Pool.sol: swapTo() should not be payable", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/46", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Pool.sol: swapTo() should not be payable"}, {"title": "Dao.sol: Reserve emissions must be turned on for depositLPs and bonds", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/44", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Dao.sol: Reserve emissions must be turned on for depositLPs and bonds"}, {"title": "Dao.sol: Insufficient validation for proposal creation", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/43", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Dao.sol: Insufficient validation for proposal creation"}, {"title": "BondVault.sol: Possibly unwithdrawable bondedLP funds in claimForMember() + claimRate never zeros after full withdrawals", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/42", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "BondVault.sol: Possibly unwithdrawable bondedLP funds in claimForMember() + claimRate never zeros after full withdrawals"}, {"title": "Ambiguous parameter name in `SynthVault`", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/41", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Ambiguous parameter name in `SynthVault`"}, {"title": "Synth `realise` is vulnerable to flash loan attacks", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/40", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Synth `realise` is vulnerable to flash loan attacks"}, {"title": "Hijack token pool by burning liquidity token", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/38", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Hijack token pool by burning liquidity token"}, {"title": "Dao.sol: Unbounded Iterations in claimAllForMember()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/37", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Dao.sol: Unbounded Iterations in claimAllForMember()"}, {"title": "Router.sol: Optimise calculation of totalTradeFees in addTradeFee()", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Router.sol: Optimise calculation of totalTradeFees in addTradeFee()"}, {"title": "Router.sol: Better changeArrayFeeSize implementation", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Router.sol: Better changeArrayFeeSize implementation"}, {"title": "Utils.sol: Combine Swap Output + Fee Calculation to avoid Rounding Errors + Integer Overflow [Updated]", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/34", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Utils.sol: Combine Swap Output + Fee Calculation to avoid Rounding Errors + Integer Overflow [Updated]"}, {"title": "`approveAndCall` approve `max` amount of token", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/33", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "`approveAndCall` approve `max` amount of token"}, {"title": "Misleading comment and missing revert message", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/31", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Misleading comment and missing revert message"}, {"title": "Pool.sol & Synth.sol: Failing Max Value Allowance", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/29", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Pool.sol & Synth.sol: Failing Max Value Allowance"}, {"title": "DEPLOYER can drain DAOVault funds + manipulate proposal results", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/27", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "DEPLOYER can drain DAOVault funds + manipulate proposal results"}, {"title": "memberCount not accurate", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/26", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "memberCount not accurate"}, {"title": "Vulnerable Pool initial rate.", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/23", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Vulnerable Pool initial rate."}, {"title": "Contract code size exceed contract size limit", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/21", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Contract code size exceed contract size limit"}, {"title": "arbitrary synth mint/burn from pool", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/20", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "arbitrary synth mint/burn from pool"}, {"title": "Contract file name does not follow coding conventions", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/19", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Contract file name does not follow coding conventions"}, {"title": "error_reporting = E_ALL & ~E_DEPRECATED", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/18", "labels": ["bug", "invalid", "3 (High Risk)", "sponsor disputed"], "target": "2021-07-spartan-findings", "body": "error_reporting = E_ALL & ~E_DEPRECATED"}, {"title": "grantFunds will revert after a DAO upgrade.", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/17", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "grantFunds will revert after a DAO upgrade."}, {"title": "In the beginning its relatively easy to gain majority share", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/14", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "In the beginning its relatively easy to gain majority share"}, {"title": "(out of scope) mintFromDAO of Sparta.sol can go over max supply", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "(out of scope) mintFromDAO of Sparta.sol can go over max supply"}, {"title": "Result of transfer / transferFrom not checked", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/8", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "Result of transfer / transferFrom not checked"}, {"title": "Can't add BNB with createPoolADD", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/7", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-07-spartan-findings", "body": "Can't add BNB with createPoolADD"}, {"title": "Block usage of addCuratedPool ", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/6", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Block usage of addCuratedPool "}, {"title": "check if pool exists in getPool ", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/5", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "check if pool exists in getPool "}, {"title": "more efficient calls to DAO functions", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/4", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-spartan-findings", "body": "more efficient calls to DAO functions"}, {"title": "Dao contract's code size exceeds size limit.", "html_url": "https://github.com/code-423n4/2021-07-spartan-findings/issues/2", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-07-spartan-findings", "body": "Dao contract's code size exceeds size limit."}, {"title": "Saving gas by checking the last-recorded block number", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/150", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Saving gas by checking the last-recorded block number"}, {"title": "Avoid repeating storage reads in a loop to save gas", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/149", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Avoid repeating storage reads in a loop to save gas"}, {"title": "Gas optimization on calculating the storage slot of a token", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/148", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Gas optimization on calculating the storage slot of a token"}, {"title": "User's `calcUnderlyingInStoredUSD` value is underestimated", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/144", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-sherlock-findings", "body": "User's `calcUnderlyingInStoredUSD` value is underestimated"}, {"title": "Tokens cannot be reinitialized with new lock tokens", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/141", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Tokens cannot be reinitialized with new lock tokens"}, {"title": "Cannot set `watsonsSherxWeight` to the maximum", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/140", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-07-sherlock-findings", "body": "Cannot set `watsonsSherxWeight` to the maximum"}, {"title": "Inconsistent block number comparison when deciding an unstaking entry is active", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/139", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Inconsistent block number comparison when deciding an unstaking entry is active"}, {"title": "Possible divide-by-zero error in `PoolBase`", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/136", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Possible divide-by-zero error in `PoolBase`"}, {"title": "Missing non-zero address checks", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/135", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Missing non-zero address checks"}, {"title": "SafeMath library is not always used in `PoolBase`", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/133", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "SafeMath library is not always used in `PoolBase`"}, {"title": "order of operations in Payout.sol", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/130", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-07-sherlock-findings", "body": "order of operations in Payout.sol"}, {"title": "Confusing exponentiation (10e17)", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/129", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Confusing exponentiation (10e17)"}, {"title": "Uncheckable math in `redeem()`", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/127", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Uncheckable math in `redeem()`"}, {"title": "uncheckable math in `payout()`", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/126", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "uncheckable math in `payout()`"}, {"title": "NatSpec typo in `_doSherX` @return", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/125", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "NatSpec typo in `_doSherX` @return"}, {"title": "gas reduction in `calcUnderlying`", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/124", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "gas reduction in `calcUnderlying`"}, {"title": "Poorly Named variables", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/123", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-sherlock-findings", "body": "Poorly Named variables"}, {"title": "Unused functions and storage cost gas.", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/120", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Unused functions and storage cost gas."}, {"title": "Single under-funded protocol can break paying off debt", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/119", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Single under-funded protocol can break paying off debt"}, {"title": "ERC20 can accidentally burn tokens", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/118", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "ERC20 can accidentally burn tokens"}, {"title": "ERC20 non-standard names", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/117", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-sherlock-findings", "body": "ERC20 non-standard names"}, {"title": "`initializeSherXERC20` can be called more than once", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/116", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "`initializeSherXERC20` can be called more than once"}, {"title": "Sanitize `_weights` in `setWeights` on every use", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/115", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Sanitize `_weights` in `setWeights` on every use"}, {"title": "Anyone can unstake on behalf of someone", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/114", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Anyone can unstake on behalf of someone"}, {"title": "[Gas optimizations] - Public functions that are public, but could be external", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/112", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "[Gas optimizations] - Public functions that are public, but could be external"}, {"title": "`TokenToLock` default value", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/110", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-07-sherlock-findings", "body": "`TokenToLock` default value"}, {"title": "`_doSherX` does not return correct precision and it's confusing", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "`_doSherX` does not return correct precision and it's confusing"}, {"title": "`_doSherX` optimistically assumes premiums will be paid", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/107", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "`_doSherX` optimistically assumes premiums will be paid"}, {"title": "Missing verification on `tokenInit`'s lock", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/105", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Missing verification on `tokenInit`'s lock"}, {"title": "Unbounded iteration over all protocols", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/104", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Unbounded iteration over all protocols"}, {"title": "Unbounded iteration over all staking tokens", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/103", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Unbounded iteration over all staking tokens"}, {"title": "Unbounded iteration over all premium tokens", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/102", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Unbounded iteration over all premium tokens"}, {"title": "`transferFrom` gas improval", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/100", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "disagree with severity"], "target": "2021-07-sherlock-findings", "body": "`transferFrom` gas improval"}, {"title": "`increaseApproval` gas improval", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/98", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "`increaseApproval` gas improval"}, {"title": "`payout` does token transfers twice", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/97", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "`payout` does token transfers twice"}, {"title": "`SherX.setWeights` only accrue _tokens", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/96", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "`SherX.setWeights` only accrue _tokens"}, {"title": "Check _aaveLmReceiver and _sherlock are not empty", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/95", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Check _aaveLmReceiver and _sherlock are not empty"}, {"title": "Loops may exceed gas limit", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/93", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Loops may exceed gas limit"}, {"title": "getInitialUnstakeEntry when unstakeEntries is empty", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/92", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "getInitialUnstakeEntry when unstakeEntries is empty"}, {"title": "[Bug] A critical bug in bps function", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/90", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "[Bug] A critical bug in bps function"}, {"title": "General suggestions", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/89", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "General suggestions"}, {"title": "[Optimization] Changing memory to calldata and again caching in loops", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "[Optimization] Changing memory to calldata and again caching in loops"}, {"title": "[Optimization] Caching in for loops", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/86", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "[Optimization] Caching in for loops"}, {"title": "[Optimization] Packing various structs carefully", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/85", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "[Optimization] Packing various structs carefully"}, {"title": "[Optimization] Use at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/84", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "[Optimization] Use at least 0.8.4"}, {"title": "[Optimization] Setting higher value for optimize-runs", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/83", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "[Optimization] Setting higher value for optimize-runs"}, {"title": "[Optimization] A branchless version of an if else statement", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/82", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "[Optimization] A branchless version of an if else statement"}, {"title": "[Optimization] Caching variable", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "[Optimization] Caching variable"}, {"title": "getFirstMoneyOut _token parameter", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/79", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "getFirstMoneyOut _token parameter"}, {"title": "withdraw returns the final amount withdrawn", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/78", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "withdraw returns the final amount withdrawn"}, {"title": "Call to LibDiamond.contractOwner() can be cached", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Call to LibDiamond.contractOwner() can be cached"}, {"title": "Functions aBalance and balanceOf", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Functions aBalance and balanceOf"}, {"title": "Re-entrancy mitigation", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/70", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Re-entrancy mitigation"}, {"title": "Group related data into separate structs", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/69", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Group related data into separate structs"}, {"title": "Inclusive checks", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Inclusive checks"}, {"title": "Approval event in LibSherXERC20", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/67", "labels": ["bug", "invalid", "0 (Non-critical)", "sponsor disputed"], "target": "2021-07-sherlock-findings", "body": "Approval event in LibSherXERC20"}, {"title": "AaveV2 approves lending pool in the constructor", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "AaveV2 approves lending pool in the constructor"}, {"title": "transferFrom when from = to", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-07-sherlock-findings", "body": "transferFrom when from = to"}, {"title": "Use EnumerableSet to store protocols", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/63", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Use EnumerableSet to store protocols"}, {"title": "typo: `ineglible_yield_amount` -> `ineligible_yield_amount`", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "typo: `ineglible_yield_amount` -> `ineligible_yield_amount`"}, {"title": "[PoolBase.sol] Calculations are being divided before being multiplied ", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/61", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-07-sherlock-findings", "body": "[PoolBase.sol] Calculations are being divided before being multiplied "}, {"title": "Use calldata is a little more gas efficient ", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Use calldata is a little more gas efficient "}, {"title": "Gov.sol: Use SafeERC20.safeApprove in tokenUnload()", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/51", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Gov.sol: Use SafeERC20.safeApprove in tokenUnload()"}, {"title": "Yield distribution after large payout seems unfair", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/50", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Yield distribution after large payout seems unfair"}, {"title": "SherX.sol: Unsafe casting of _weights  in setWeights()", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "SherX.sol: Unsafe casting of _weights  in setWeights()"}, {"title": "SherX.sol: Redeeming SherX may run out of gas", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/46", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "SherX.sol: Redeeming SherX may run out of gas"}, {"title": "SherX.sol: Change variable names weightSub and weightAdd to totalWeightOld and totalWeightNew", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "SherX.sol: Change variable names weightSub and weightAdd to totalWeightOld and totalWeightNew"}, {"title": "PoolStrategy.sol: Consider minimising trust with implemented strategies", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/44", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "PoolStrategy.sol: Consider minimising trust with implemented strategies"}, {"title": "PoolBase.sol: Consider returning 0 instead of reverting in LockToToken()", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/42", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "PoolBase.sol: Consider returning 0 instead of reverting in LockToToken()"}, {"title": "Manager.sol: Pass ps.sherXUnderlying instead of ps into updateData()", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/40", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Manager.sol: Pass ps.sherXUnderlying instead of ps into updateData()"}, {"title": "Manager.sol: Can avoid safemath sub in usdPerBlock and usdPool calculations", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Manager.sol: Can avoid safemath sub in usdPerBlock and usdPool calculations"}, {"title": "LibSherX.sol: Optimise calcUnderlying()", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "LibSherX.sol: Optimise calcUnderlying()"}, {"title": "Gov.sol: Small refactoring of tokenInit() to save gas", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/35", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Gov.sol: Small refactoring of tokenInit() to save gas"}, {"title": "Gov.sol: Optimise protocolRemove()", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Gov.sol: Optimise protocolRemove()"}, {"title": "Gov.sol: Non-intuitive comment in tokenRemove()", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/33", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Gov.sol: Non-intuitive comment in tokenRemove()"}, {"title": "Gov.sol: Consider abstracting protocolUpdate() and protocolDepositAdd() to avoid duplicate checks", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "Gov.sol: Consider abstracting protocolUpdate() and protocolDepositAdd() to avoid duplicate checks"}, {"title": "Define Global Constants", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/30", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Define Global Constants"}, {"title": "prevent burn in _transfer", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/29", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "prevent burn in _transfer"}, {"title": "result of getUnstakeEntrySize is incorrect", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/27", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-07-sherlock-findings", "body": "result of getUnstakeEntrySize is incorrect"}, {"title": "unbounded loop in getInitialUnstakeEntry ", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/26", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "unbounded loop in getInitialUnstakeEntry "}, {"title": "extra precautions in stakeBalance", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/25", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-07-sherlock-findings", "body": "extra precautions in stakeBalance"}, {"title": "series of divs", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/24", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "series of divs"}, {"title": "don't use add(add.sub(sub)", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/23", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "don't use add(add.sub(sub)"}, {"title": "prevent div by 0", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/22", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "prevent div by 0"}, {"title": "x > 0 ==> x!=0", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "x > 0 ==> x!=0"}, {"title": "delete ps.stakeBalance", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/20", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "delete ps.stakeBalance"}, {"title": "confusing comment in protocolUpdate", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/19", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "confusing comment in protocolUpdate"}, {"title": "extra check setUnstakeWindow and setCooldown", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/18", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "extra check setUnstakeWindow and setCooldown"}, {"title": "Two functions with the same implementation", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/17", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Two functions with the same implementation"}, {"title": "Different solidity pramas", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Different solidity pramas"}, {"title": "Incorrect internal balance bookkeeping", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/12", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-07-sherlock-findings", "body": "Incorrect internal balance bookkeeping"}, {"title": "Declare NativeLock underlying variable as immutable", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/9", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Declare NativeLock underlying variable as immutable"}, {"title": "Aav2V2 is Ownable but not owner capabilites are used", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/8", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Aav2V2 is Ownable but not owner capabilites are used"}, {"title": "Avoid storing lp in AaveV2 constructor", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/7", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Avoid storing lp in AaveV2 constructor"}, {"title": "reputation risks with updateSolution", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/4", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-07-sherlock-findings", "body": "reputation risks with updateSolution"}, {"title": "Make variables immutable or constant", "html_url": "https://github.com/code-423n4/2021-07-sherlock-findings/issues/1", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-sherlock-findings", "body": "Make variables immutable or constant"}, {"title": "Cache storage variables to local variables to save gas", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/75", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Cache storage variables to local variables to save gas"}, {"title": "Use the `unchecked` keyword to save gas", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/74", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Use the `unchecked` keyword to save gas"}, {"title": "Deflationary and fee-on-transfer tokens are not correctly accounted", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/68", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Deflationary and fee-on-transfer tokens are not correctly accounted"}, {"title": "Unchangeable chain ID information", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/66", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Unchangeable chain ID information"}, {"title": "Increment in the loop can be made unchecked", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/65", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Increment in the loop can be made unchecked"}, {"title": "Missing @param in fulfill NatSpec", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/64", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Missing @param in fulfill NatSpec"}, {"title": "Optimizing the for loop", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Optimizing the for loop"}, {"title": "Revert strings", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/59", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Revert strings"}, {"title": "Relayer txs can be frontrunned", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/58", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Relayer txs can be frontrunned"}, {"title": "Don't ask for the user's signature when msg.sender == txData.user", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/57", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Don't ask for the user's signature when msg.sender == txData.user"}, {"title": "Refacotr: Reuse same code for hashVariantTransactionData with txData and when preparedBlockNumber is 0", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Refacotr: Reuse same code for hashVariantTransactionData with txData and when preparedBlockNumber is 0"}, {"title": "Signatures use only tx ID instead of entire digest", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/54", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Signatures use only tx ID instead of entire digest"}, {"title": "An attacker can front-run a user\u2019s prepare() tx on sending chain to cause DoS by griefing", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/52", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "An attacker can front-run a user\u2019s prepare() tx on sending chain to cause DoS by griefing"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Missing zero-address checks"}, {"title": "Lack of guarded launch approach may be risky", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/49", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Lack of guarded launch approach may be risky"}, {"title": "Anyone can arbitrarily add router liquidity", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/48", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Anyone can arbitrarily add router liquidity"}, {"title": "Expired transfers will lock user funds on the sending chain", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/47", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Expired transfers will lock user funds on the sending chain"}, {"title": "Router liquidity on receiving chain can be double-dipped by the user", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/46", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Router liquidity on receiving chain can be double-dipped by the user"}, {"title": "Checking non-zero value can avoid an external call to save gas", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/45", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Checking non-zero value can avoid an external call to save gas"}, {"title": "Evaluate security benefit vs gas usage trade-off for using nonreentrant modifier on different functions", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Evaluate security benefit vs gas usage trade-off for using nonreentrant modifier on different functions"}, {"title": "Consolidating library functions can save gas by preventing external calls", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Consolidating library functions can save gas by preventing external calls"}, {"title": "Checking before external library call can save 2600 gas", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Checking before external library call can save 2600 gas"}, {"title": "Using access lists can save gas due to EIP-2930 post-Berlin hard fork", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Using access lists can save gas due to EIP-2930 post-Berlin hard fork"}, {"title": "Assignment of variables not needed", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Assignment of variables not needed"}, {"title": "MAX_TIMEOUT", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/33", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "MAX_TIMEOUT"}, {"title": "Approval is not reset if the call to IFulfillHelper fails", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/31", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Approval is not reset if the call to IFulfillHelper fails"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/29", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Style issues"}, {"title": "txData.expiry = block.timestamp", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "txData.expiry = block.timestamp"}, {"title": "activeTransactionBlocks are vulnerable to DDoS attacks", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/27", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "activeTransactionBlocks are vulnerable to DDoS attacks"}, {"title": "Code Consistency for hashVariantTransactionData()", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/22", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Code Consistency for hashVariantTransactionData()"}, {"title": "Gas: Only pass transactionId as parameter instead of TransactionData", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Gas: Only pass transactionId as parameter instead of TransactionData"}, {"title": "Router needs to decrease expiry by a significant buffer", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/15", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Router needs to decrease expiry by a significant buffer"}, {"title": "Unsafe approve", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/13", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "Unsafe approve"}, {"title": "Malicious router can block cross-chain-transfers", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/12", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-07-connext-findings", "body": "Malicious router can block cross-chain-transfers"}, {"title": "wrapCall with weird ERC20 contracts", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/4", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "wrapCall with weird ERC20 contracts"}, {"title": "don't use assembly ", "html_url": "https://github.com/code-423n4/2021-07-connext-findings/issues/3", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-07-connext-findings", "body": "don't use assembly "}, {"title": "Incorrect balance computed in `getUsersConfirmedButNotSettledSynthBalance()`", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/142", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Incorrect balance computed in `getUsersConfirmedButNotSettledSynthBalance()`"}, {"title": "Users could shift tokens on `Staker` with more than he has staked", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/141", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-floatcapital-findings", "body": "Users could shift tokens on `Staker` with more than he has staked"}, {"title": "Received amount of transfer-on-fee/deflationary tokens are not correctly accounted", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/140", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "disagree with severity", "out-of-scope"], "target": "2021-08-floatcapital-findings", "body": "Received amount of transfer-on-fee/deflationary tokens are not correctly accounted"}, {"title": "emit event at stage changes", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/138", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-floatcapital-findings", "body": "emit event at stage changes"}, {"title": "consistently use `msg.sender` or `_msgSender()`(recommended)", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/136", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-floatcapital-findings", "body": "consistently use `msg.sender` or `_msgSender()`(recommended)"}, {"title": "Stable prices don't lead to new time periods", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/134", "labels": ["bug", "duplicate", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-floatcapital-findings", "body": "Stable prices don't lead to new time periods"}, {"title": "Possibly not all synths can be withdrawn", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/129", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Possibly not all synths can be withdrawn"}, {"title": "Markets cannot be initialized with payment tokens of few decimals", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/126", "labels": ["bug", "duplicate", "invalid", "0 (Non-critical)", "sponsor disputed", "disagree with severity", "out-of-scope"], "target": "2021-08-floatcapital-findings", "body": "Markets cannot be initialized with payment tokens of few decimals"}, {"title": "Gas: `SyntheticToken` does not use pausing functionality", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/118", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-08-floatcapital-findings", "body": "Gas: `SyntheticToken` does not use pausing functionality"}, {"title": "Validations", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/112", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-floatcapital-findings", "body": "Validations"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/111", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Style issues"}, {"title": "treasury state variable in LongShort", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/110", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "treasury state variable in LongShort"}, {"title": "onlyValidMarket is never used", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/107", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "onlyValidMarket is never used"}, {"title": "Cache storage access and duplicate calculations", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/106", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Cache storage access and duplicate calculations"}, {"title": "0xf10A7_F10A7_f10A7_F10a7_F10A7_f10a7_F10A7_f10a7", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/101", "labels": ["bug", "invalid", "0 (Non-critical)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "0xf10A7_F10A7_f10A7_F10a7_F10A7_f10a7_F10A7_f10a7"}, {"title": "Aave's claimRewards returns the actual rewards claimed", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/100", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-floatcapital-findings", "body": "Aave's claimRewards returns the actual rewards claimed"}, {"title": "The address of Aave lendingPool may change", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/99", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-floatcapital-findings", "body": "The address of Aave lendingPool may change"}, {"title": "[Optimization] Cache length in the loop", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/97", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "[Optimization] Cache length in the loop"}, {"title": "Use of floating pragma", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/96", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Use of floating pragma"}, {"title": "Assuming tokens are compliant with ERC20 could cause transactions to revert unexpectedly", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/93", "labels": ["bug", "duplicate", "invalid", "0 (Non-critical)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Assuming tokens are compliant with ERC20 could cause transactions to revert unexpectedly"}, {"title": "Comment-code mismatch for _balanceIncentiveCurve_exponent threshold", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/89", "labels": ["bug", "duplicate", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-floatcapital-findings", "body": "Comment-code mismatch for _balanceIncentiveCurve_exponent threshold"}, {"title": "Function visibility can be changed from public to external", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "disagree with severity", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Function visibility can be changed from public to external"}, {"title": "Interface notations are used for abstract contracts", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/86", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Interface notations are used for abstract contracts"}, {"title": "Missing events/timelocks for owner/admin only functions that change critical parameters", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/85", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-floatcapital-findings", "body": "Missing events/timelocks for owner/admin only functions that change critical parameters"}, {"title": "Race-condition risk with initialize functions", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/82", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Race-condition risk with initialize functions"}, {"title": "Missing use of requireMarketExists modifier on multiple functions", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/81", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Missing use of requireMarketExists modifier on multiple functions"}, {"title": "executeOutstandingNextPriceSettlementsUserMulti may exceed gas limits", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/80", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-floatcapital-findings", "body": "executeOutstandingNextPriceSettlementsUserMulti may exceed gas limits"}, {"title": "Unused named returns can be removed for optimization", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/79", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Unused named returns can be removed for optimization"}, {"title": "Caching state variables in local variables can save gas", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/76", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Caching state variables in local variables can save gas"}, {"title": "YieldManagerAave.sol: Wrong branch in depositPaymentToken() if amountReservedInCaseOfInsufficientAaveLiquidity == amount", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/74", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-floatcapital-findings", "body": "YieldManagerAave.sol: Wrong branch in depositPaymentToken() if amountReservedInCaseOfInsufficientAaveLiquidity == amount"}, {"title": "TokenFactory.sol: DEFAULT_ADMIN_ROLE has wrong value ", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/72", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "TokenFactory.sol: DEFAULT_ADMIN_ROLE has wrong value "}, {"title": "TokenFactory.sol: Appropriate type declaration to avoid numerous casting", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/71", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "TokenFactory.sol: Appropriate type declaration to avoid numerous casting"}, {"title": "Staker.sol: withdrawAll() does not include incoming outstanding shifts to the user", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/70", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Staker.sol: withdrawAll() does not include incoming outstanding shifts to the user"}, {"title": "Staker.sol: Updating kValue requires interpolation with initial timestamp", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/69", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Staker.sol: Updating kValue requires interpolation with initial timestamp"}, {"title": "Staker.sol: TODO add link in comment", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/68", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-08-floatcapital-findings", "body": "Staker.sol: TODO add link in comment"}, {"title": "Staker.sol: Shift event emissions to internal functions", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/67", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Staker.sol: Shift event emissions to internal functions"}, {"title": "Staker.sol: Redundant zero intialization for accumulativeFloatPerSyntheticTokenSnapshots", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Staker.sol: Redundant zero intialization for accumulativeFloatPerSyntheticTokenSnapshots"}, {"title": "Staker.sol: Erroneous Comments", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/65", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Staker.sol: Erroneous Comments"}, {"title": "Staker.sol: Cache shift amounts", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Staker.sol: Cache shift amounts"}, {"title": "Spelling Errors", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Spelling Errors"}, {"title": "Single Source of Truth", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/61", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Single Source of Truth"}, {"title": "LongShort.sol: Some math can be unchecked in _getYieldSplit()", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "LongShort.sol: Some math can be unchecked in _getYieldSplit()"}, {"title": "LongShort.sol: Inconsistency in _claimAndDistributeYieldThenRebalanceMarket()", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/59", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "LongShort.sol: Inconsistency in _claimAndDistributeYieldThenRebalanceMarket()"}, {"title": "LongShort.sol: Cache marketUpdateIndex[marketIndex]", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/58", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "LongShort.sol: Cache marketUpdateIndex[marketIndex]"}, {"title": "Add reentrancy safeguards to user actions", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/57", "labels": ["bug", "invalid", "0 (Non-critical)", "sponsor disputed", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Add reentrancy safeguards to user actions"}, {"title": "LongShort.sol & YieldManagerAave.sol: Verify / derive input arguments", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/56", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor acknowledged", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "LongShort.sol & YieldManagerAave.sol: Verify / derive input arguments"}, {"title": "Index Events", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/55", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-floatcapital-findings", "body": "Index Events"}, {"title": "Increase Solc Optimiser Runs", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/54", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-floatcapital-findings", "body": "Increase Solc Optimiser Runs"}, {"title": "Immutable Variables", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/53", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Immutable Variables"}, {"title": "Drop require checks for synthetic tokens", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/52", "labels": ["bug", "G (Gas Optimization)", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Drop require checks for synthetic tokens"}, {"title": "Consider using SafeERC20 for ERC20 operations", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/51", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Consider using SafeERC20 for ERC20 operations"}, {"title": "Appropriate storage variable type declaration to save on casting", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-floatcapital-findings", "body": "Appropriate storage variable type declaration to save on casting"}, {"title": "Wrong aave usage of `claimRewards`", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/49", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-floatcapital-findings", "body": "Wrong aave usage of `claimRewards`"}, {"title": "LongShort should not shares the same Yield Manager between different markets", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/48", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-08-floatcapital-findings", "body": "LongShort should not shares the same Yield Manager between different markets"}, {"title": "Gas optimization for withdraw and withdrawAll", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/44", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-08-floatcapital-findings", "body": "Gas optimization for withdraw and withdrawAll"}, {"title": "Pass time delta into internal functions", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-floatcapital-findings", "body": "Pass time delta into internal functions"}, {"title": "FloatToken would revoke stakerAddress's permission if msg.sender == stakerAddress", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/36", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved"], "target": "2021-08-floatcapital-findings", "body": "FloatToken would revoke stakerAddress's permission if msg.sender == stakerAddress"}, {"title": "Solution is susceptible to MEV, harming users.", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/30", "labels": ["bug", "invalid", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-floatcapital-findings", "body": "Solution is susceptible to MEV, harming users."}, {"title": "Docstring", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/27", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Docstring"}, {"title": "Internal _withdraw, reading from storage twice.", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/26", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-floatcapital-findings", "body": "Internal _withdraw, reading from storage twice."}, {"title": "Multiple initialize functions", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/19", "labels": ["bug", "0 (Non-critical)", "resolved", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Multiple initialize functions"}, {"title": "gas improvement in withdraw & withdrawAll", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "gas improvement in withdraw & withdrawAll"}, {"title": "slight difference between withdraw and withdrawAll", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/17", "labels": ["bug", "G (Gas Optimization)", "resolved", "sponsor acknowledged", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "slight difference between withdraw and withdrawAll"}, {"title": "Prevent markets getting stuck when prices don't move", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/16", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "disagree with severity", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Prevent markets getting stuck when prices don't move"}, {"title": "PERMANENT_INITIAL_LIQUIDITY_HOLDER not 100% safe", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/15", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-floatcapital-findings", "body": "PERMANENT_INITIAL_LIQUIDITY_HOLDER not 100% safe"}, {"title": "extra safety in distributeYieldForTreasuryAndReturnMarketAllocation", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/14", "labels": ["bug", "invalid", "0 (Non-critical)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "extra safety in distributeYieldForTreasuryAndReturnMarketAllocation"}, {"title": "prevent reentrancy", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/13", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "disagree with severity", "resolved", "out-of-scope", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "prevent reentrancy"}, {"title": "confusing comments", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/12", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "resolved", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "confusing comments"}, {"title": "Constant values used inline", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Constant values used inline"}, {"title": "extra checks in addNewStakingFund", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/10", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "extra checks in addNewStakingFund"}, {"title": "latestMarket used where marketIndex should have been used", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/9", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "latestMarket used where marketIndex should have been used"}, {"title": "2 variables not indexed by marketIndex", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/8", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "2 variables not indexed by marketIndex"}, {"title": "Staker.sol: Wrong values returned in edge cases of _calculateFloatPerSecond()", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/6", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "Staker.sol: Wrong values returned in edge cases of _calculateFloatPerSecond()"}, {"title": "copy paste error in _batchConfirmOutstandingPendingActions", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/5", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved", "fixed-in-upstream-repo"], "target": "2021-08-floatcapital-findings", "body": "copy paste error in _batchConfirmOutstandingPendingActions"}, {"title": "Oracle updates can be frontrun by stakers to gain a profit", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/4", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Oracle updates can be frontrun by stakers to gain a profit"}, {"title": "Protocol requires a running bot in order to make sure trades are actually executed", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/3", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "disagree with severity"], "target": "2021-08-floatcapital-findings", "body": "Protocol requires a running bot in order to make sure trades are actually executed"}, {"title": "Admin and treasury change should be confirmed.", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/2", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "disagree with severity", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Admin and treasury change should be confirmed."}, {"title": "Missing input validation on many functions throughout the code", "html_url": "https://github.com/code-423n4/2021-08-floatcapital-findings/issues/1", "labels": ["bug", "1 (Low Risk)", "sponsor disputed", "disagree with severity", "float-wont-fix"], "target": "2021-08-floatcapital-findings", "body": "Missing input validation on many functions throughout the code"}, {"title": "Potential DOS in Contracts Inheriting `UUPSUpgradeable.sol`", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/98", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Potential DOS in Contracts Inheriting `UUPSUpgradeable.sol`"}, {"title": "Non-existent `nERC1155Interface.supportsInterface.selector`", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/97", "labels": ["bug", "invalid", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Non-existent `nERC1155Interface.supportsInterface.selector`"}, {"title": "`StorageLayoutV1` Gas Optimisations", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/96", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`StorageLayoutV1` Gas Optimisations"}, {"title": "Missing SPDX Identifier", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/95", "labels": ["bug", "invalid", "0 (Non-critical)", "disagree with severity", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Missing SPDX Identifier"}, {"title": "No Transfer Ownership Pattern", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/94", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "No Transfer Ownership Pattern"}, {"title": "Lack of Zero Address Validation", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/93", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Lack of Zero Address Validation"}, {"title": "Missing validation on latestRoundData", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/92", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Missing validation on latestRoundData"}, {"title": "Replacing the assembly `extcodesize` checks for versions `>0.8.1`", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/91", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Replacing the assembly `extcodesize` checks for versions `>0.8.1`"}, {"title": "Used a fixed or pragma that spans only a single `0.x.*`", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/90", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Used a fixed or pragma that spans only a single `0.x.*`"}, {"title": "Consider using assembly instead of the lengthy if statement in Router.sol", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/89", "labels": ["bug", "invalid", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Consider using assembly instead of the lengthy if statement in Router.sol"}, {"title": "Caching length in for loops", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/88", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Caching length in for loops"}, {"title": "Upgrade to at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Upgrade to at least 0.8.4"}, {"title": "Liquidator can be liquidatee", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/86", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Liquidator can be liquidatee"}, {"title": "Liquidity token value can be manipulated", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/85", "labels": ["bug", "3 (High Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Liquidity token value can be manipulated"}, {"title": "Use of `msg.value` in batch action", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/84", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Use of `msg.value` in batch action"}, {"title": "ChainLink price data could be stale", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/83", "labels": ["bug", "duplicate", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-notional-findings", "body": "ChainLink price data could be stale"}, {"title": "`DateTime.getMarketIndex` bounds should be tighter", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/82", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`DateTime.getMarketIndex` bounds should be tighter"}, {"title": "`DateTime.isValidMarketMaturity` bounds should be tighter", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/81", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`DateTime.isValidMarketMaturity` bounds should be tighter"}, {"title": "`TokenHandler.safeTransferIn` does not work on non-standard compliant tokens like USDT", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/80", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`TokenHandler.safeTransferIn` does not work on non-standard compliant tokens like USDT"}, {"title": "`TokenHandler.safeTransferOut` does not work on non-standard compliant tokens like USDT", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/79", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`TokenHandler.safeTransferOut` does not work on non-standard compliant tokens like USDT"}, {"title": "`TokenHandler.transfer` wrong branch order", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/78", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`TokenHandler.transfer` wrong branch order"}, {"title": "`TokenHandler.setToken` ERC20 missing return value check", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/77", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`TokenHandler.setToken` ERC20 missing return value check"}, {"title": "NoteERC20.getPriorVotes includes current unclaimed incentives", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/76", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "NoteERC20.getPriorVotes includes current unclaimed incentives"}, {"title": "NoteERC20 _authorizeUpgrade not implemented", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/75", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "NoteERC20 _authorizeUpgrade not implemented"}, {"title": "NoteERC20 missing initial ownership event", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/74", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "NoteERC20 missing initial ownership event"}, {"title": "Governor average block time is not up-to-date", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/73", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Governor average block time is not up-to-date"}, {"title": "nTokenERC20Proxy emits events even when not success", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/72", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "nTokenERC20Proxy emits events even when not success"}, {"title": "Access restrictions on `NotionalV1ToNotionalV2.notionalCallback` can be bypassed", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/71", "labels": ["bug", "3 (High Risk)"], "target": "2021-08-notional-findings", "body": "Access restrictions on `NotionalV1ToNotionalV2.notionalCallback` can be bypassed"}, {"title": "Unclear decimals value in `cTokenAggregator`", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/70", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Unclear decimals value in `cTokenAggregator`"}, {"title": "Access restrictions on `CompoundToNotionalV2.notionalCallback` can be bypassed", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/69", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Access restrictions on `CompoundToNotionalV2.notionalCallback` can be bypassed"}, {"title": "`CompoundToNotionalV2.notionalCallback` ERC20 return values not checked", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/68", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`CompoundToNotionalV2.notionalCallback` ERC20 return values not checked"}, {"title": "`CompoundToNotionalV2.enableToken` ERC20 missing return value check", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/67", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`CompoundToNotionalV2.enableToken` ERC20 missing return value check"}, {"title": "Allowance checks not correctly implemented", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/66", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Allowance checks not correctly implemented"}, {"title": "`nTokenAction` does not emit Approval events", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/65", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "`nTokenAction` does not emit Approval events"}, {"title": "Router calls to `nTokenAction.nTokenTransferApprove` fail", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/64", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Router calls to `nTokenAction.nTokenTransferApprove` fail"}, {"title": "Open TODOs in `ERC1155Action`", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/63", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Open TODOs in `ERC1155Action`"}, {"title": "Untrusted externall call on `ERC1155Action.safeTransfer*`", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/62", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Untrusted externall call on `ERC1155Action.safeTransfer*`"}, {"title": "ERC1155Action returns `false` on `supportsInterface` with the real ERC1155 interface", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/61", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "ERC1155Action returns `false` on `supportsInterface` with the real ERC1155 interface"}, {"title": "Privilige escalation in ERC1155", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/60", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Privilige escalation in ERC1155"}, {"title": "`initialize` functions can be frontrun", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/59", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "`initialize` functions can be frontrun"}, {"title": "DAO proposals can be executed by anyone due to vulnerable TimelockController", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/58", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "DAO proposals can be executed by anyone due to vulnerable TimelockController"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/57", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Missing parameter validation"}, {"title": "Total supply dependency on decimals", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/56", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Total supply dependency on decimals"}, {"title": "Wrong order in Approval event", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Wrong order in Approval event"}, {"title": "Cache values that are accessed more than once", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/54", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-notional-findings", "body": "Cache values that are accessed more than once"}, {"title": "uint is always >= 0", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/53", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "uint is always >= 0"}, {"title": "Unused variables", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/52", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Unused variables"}, {"title": "lack of zero address validation in constructor", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/51", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "lack of zero address validation in constructor"}, {"title": "lack of require message", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/50", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "lack of require message"}, {"title": "transferOwnership should be two step process", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/49", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-08-notional-findings", "body": "transferOwnership should be two step process"}, {"title": "NotionalV1ToNotionalV2 should reject ETH transfers from others than WETH", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/48", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "NotionalV1ToNotionalV2 should reject ETH transfers from others than WETH"}, {"title": "Check if address is a contract", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/47", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Check if address is a contract"}, {"title": "notionalCallback returns no value", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/46", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "notionalCallback returns no value"}, {"title": "notionalCallback can be tricked by anyone", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/45", "labels": ["bug", "duplicate", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "notionalCallback can be tricked by anyone"}, {"title": "Address.isContract with no check of returned value", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/44", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Address.isContract with no check of returned value"}, {"title": "lack of input validation of arrays", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/43", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "lack of input validation of arrays"}, {"title": "initialize()   function of router.sol can be reinitialize", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/42", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "initialize()   function of router.sol can be reinitialize"}, {"title": "unchecked return value from isContract()", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/41", "labels": ["bug", "duplicate", "1 (Low Risk)", "disagree with severity"], "target": "2021-08-notional-findings", "body": "unchecked return value from isContract()"}, {"title": "use of floating pragma", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/40", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2021-08-notional-findings", "body": "use of floating pragma"}, {"title": "Insufficient validation of rate value", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/39", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-08-notional-findings", "body": "Insufficient validation of rate value"}, {"title": "Use of transfer() instead of call() to send eth", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/38", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-notional-findings", "body": "Use of transfer() instead of call() to send eth"}, {"title": "Erc20 Race condition", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/37", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-notional-findings", "body": "Erc20 Race condition"}, {"title": " Incorrect   event   parameters   in    transferFrom    function  ", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/36", "labels": ["bug", "duplicate", "1 (Low Risk)", "disagree with severity"], "target": "2021-08-notional-findings", "body": " Incorrect   event   parameters   in    transferFrom    function  "}, {"title": "proposal get defeated even if forVotes == againstVotes in GovernorAlpha.sol", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "proposal get defeated even if forVotes == againstVotes in GovernorAlpha.sol"}, {"title": "SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/34", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "SHOULD CHECK RETURN DATA FROM CHAINLINK AGGREGATORS"}, {"title": "proRataYears is sometimes 0.", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/33", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "proRataYears is sometimes 0."}, {"title": "Settle Portfolio state could be griefed.", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/32", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Settle Portfolio state could be griefed."}, {"title": "Consider using a solidity version >= 0.8.0", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/31", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Consider using a solidity version >= 0.8.0"}, {"title": "Some TradingActions do not have frontrunning protections", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/30", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-notional-findings", "body": "Some TradingActions do not have frontrunning protections"}, {"title": "No checks on target variable", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/29", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "No checks on target variable"}, {"title": "batchBalanceAction could make multiple deposits with the same msg.value?", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/28", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "batchBalanceAction could make multiple deposits with the same msg.value?"}, {"title": "Recommend adding a nonReentrant modifier to external functions", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/27", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Recommend adding a nonReentrant modifier to external functions"}, {"title": "Add buffer, haircut and liquidation discount checks.", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/26", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Add buffer, haircut and liquidation discount checks."}, {"title": "ERC1155 has reentrancy possibilities.", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/25", "labels": ["bug", "duplicate", "1 (Low Risk)", "disagree with severity"], "target": "2021-08-notional-findings", "body": "ERC1155 has reentrancy possibilities."}, {"title": "Can't call external functions internally ", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/24", "labels": ["bug", "invalid", "3 (High Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Can't call external functions internally "}, {"title": "Gas savings: variables can all be a multiple of each other", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/23", "labels": ["bug", "invalid", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Gas savings: variables can all be a multiple of each other"}, {"title": "Idiosyncratic fCash valuation is incorrect", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/22", "labels": ["bug", "invalid", "3 (High Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Idiosyncratic fCash valuation is incorrect"}, {"title": "Can a small order change the lastImpliedRate significantly?", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/21", "labels": ["bug", "invalid", "3 (High Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Can a small order change the lastImpliedRate significantly?"}, {"title": "Attackers can force liquidations by borrowing large amounts of an asset.", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/20", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged"], "target": "2021-08-notional-findings", "body": "Attackers can force liquidations by borrowing large amounts of an asset."}, {"title": "Time window must be chosen carefully", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/19", "labels": ["bug", "invalid", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Time window must be chosen carefully"}, {"title": ".latestRoundData() does not update the oracle - ExchangeRate.sol", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/18", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-08-notional-findings", "body": ".latestRoundData() does not update the oracle - ExchangeRate.sol"}, {"title": "Consider deploying on a sidechain or an L2?", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/16", "labels": ["bug", "invalid", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Consider deploying on a sidechain or an L2?"}, {"title": "TokenHandler.sol, L174 - .transfer is bad practice", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/15", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-08-notional-findings", "body": "TokenHandler.sol, L174 - .transfer is bad practice"}, {"title": "Possible reentrancy in balanceOf, decimals, mint", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/14", "labels": ["bug", "duplicate", "invalid", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Possible reentrancy in balanceOf, decimals, mint"}, {"title": "Gas optimization: Can put require and variable declaration inside the if statement.", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-notional-findings", "body": "Gas optimization: Can put require and variable declaration inside the if statement."}, {"title": "Flipped boolean or confusing notation on TokenHandler.sol", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/12", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Flipped boolean or confusing notation on TokenHandler.sol"}, {"title": "Can initiate the same token multiple times with different currency IDs", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/11", "labels": ["bug", "invalid", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Can initiate the same token multiple times with different currency IDs"}, {"title": "Reentrancy Bug in `TimelockController.sol`", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/10", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-08-notional-findings", "body": "Reentrancy Bug in `TimelockController.sol`"}, {"title": "Gas optimization on _INT256_MIN ", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/9", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "Gas optimization on _INT256_MIN "}, {"title": "unsafe cast from int to uint can lead to incentive abuse", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "unsafe cast from int to uint can lead to incentive abuse"}, {"title": "DOS by Frontrunning NoteERC20 `initialize()` Function", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/7", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "DOS by Frontrunning NoteERC20 `initialize()` Function"}, {"title": "_transfer what happens if sender==recipient", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/6", "labels": ["bug", "duplicate", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "_transfer what happens if sender==recipient"}, {"title": "Use pragma abicoder v2", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/5", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Use pragma abicoder v2"}, {"title": "Double check for \"birthday\" collision", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/4", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Double check for \"birthday\" collision"}, {"title": "executing instruction outside code can lead to failing transfer", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/3", "labels": ["bug", "invalid", "3 (High Risk)", "sponsor disputed"], "target": "2021-08-notional-findings", "body": "executing instruction outside code can lead to failing transfer"}, {"title": "Lack of address Validation ", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/2", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2021-08-notional-findings", "body": "Lack of address Validation "}, {"title": "Self transfer can lead to unlimited mint", "html_url": "https://github.com/code-423n4/2021-08-notional-findings/issues/1", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-notional-findings", "body": "Self transfer can lead to unlimited mint"}, {"title": "Possible enhancements to supply/redeem full balance", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/79", "labels": ["bug", "0 (Non-critical)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Possible enhancements to supply/redeem full balance"}, {"title": "Validation", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/74", "labels": ["bug", "1 (Low Risk)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Validation"}, {"title": "Retrieve stuck tokens from MStableYieldSource", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/73", "labels": ["bug", "1 (Low Risk)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Retrieve stuck tokens from MStableYieldSource"}, {"title": "approveMax in the constructor", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/72", "labels": ["bug", "0 (Non-critical)", "mStableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "approveMax in the constructor"}, {"title": "Incorrect comment about memory", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/69", "labels": ["bug", "0 (Non-critical)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Incorrect comment about memory"}, {"title": "[Optimization] Use 0.8.4 in MStableYieldSource.sol", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/65", "labels": ["bug", "G (Gas Optimization)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "[Optimization] Use 0.8.4 in MStableYieldSource.sol"}, {"title": "Gas: swapYieldSource", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Gas: swapYieldSource"}, {"title": "`redeemToken` can fail for certain tokens", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/61", "labels": ["bug", "3 (High Risk)", "SwappableYieldSource"], "target": "2021-07-pooltogether-findings", "body": "`redeemToken` can fail for certain tokens"}, {"title": "`_requireYieldSource` does not check return value", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/60", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "`_requireYieldSource` does not check return value"}, {"title": "Declaring functions as `external` to save gas", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/55", "labels": ["bug", "G (Gas Optimization)", "mStableYieldSource", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Declaring functions as `external` to save gas"}, {"title": "Use `abi.encodePacked` for gas optimization", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/53", "labels": ["bug", "G (Gas Optimization)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Use `abi.encodePacked` for gas optimization"}, {"title": "Inconsistent balance when supplying transfer-on-fee or deflationary tokens", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/52", "labels": ["bug", "2 (Med Risk)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Inconsistent balance when supplying transfer-on-fee or deflationary tokens"}, {"title": "Yield sources cannot be swapped back", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/51", "labels": ["bug", "2 (Med Risk)", "SwappableYieldSource", "sponsor acknowledged"], "target": "2021-07-pooltogether-findings", "body": "Yield sources cannot be swapped back"}, {"title": "Use of safeApprove will always cause approveMax to revert", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/47", "labels": ["bug", "2 (Med Risk)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Use of safeApprove will always cause approveMax to revert"}, {"title": "Overly permissive access control lets anyone approve max amount", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/46", "labels": ["bug", "1 (Low Risk)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Overly permissive access control lets anyone approve max amount"}, {"title": "onlyOwner for approveMaxAmount() is risky", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/44", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor acknowledged"], "target": "2021-07-pooltogether-findings", "body": "onlyOwner for approveMaxAmount() is risky"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "mStableYieldSource", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Missing zero-address checks"}, {"title": "Single-step process for critical ownership transfer/renounce is risky", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/40", "labels": ["bug", "2 (Med Risk)", "SwappableYieldSource", "sponsor acknowledged"], "target": "2021-07-pooltogether-findings", "body": "Single-step process for critical ownership transfer/renounce is risky"}, {"title": "Initialization function can be front-run with malicious values", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/39", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "Initialization function can be front-run with malicious values"}, {"title": "Adding unchecked directive can save gas", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Adding unchecked directive can save gas"}, {"title": "Redundant zero-address check", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Redundant zero-address check"}, {"title": "Changing function visibility from public to external can save gas", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Changing function visibility from public to external can save gas"}, {"title": "SwappableYieldSource: setYieldSource() should check no deposited tokens in current yield source", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/31", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor acknowledged"], "target": "2021-07-pooltogether-findings", "body": "SwappableYieldSource: setYieldSource() should check no deposited tokens in current yield source"}, {"title": "SwappableYieldSource: Missing same deposit token check in transferFunds()", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/29", "labels": ["bug", "3 (High Risk)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "SwappableYieldSource: Missing same deposit token check in transferFunds()"}, {"title": "SwappableYieldSource.sol: Wrong reporting amount in FundsTransferred() event", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "SwappableYieldSource.sol: Wrong reporting amount in FundsTransferred() event"}, {"title": "SwappableYieldSource.sol: Shorten revert messages", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "SwappableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "SwappableYieldSource.sol: Shorten revert messages"}, {"title": "SwappableYieldSource.sol: Save depositToken as a storage variable", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "SwappableYieldSource.sol: Save depositToken as a storage variable"}, {"title": "MStableYieldSource.sol: Optimise balanceOf()", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/21", "labels": ["bug", "G (Gas Optimization)", "mStableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "MStableYieldSource.sol: Optimise balanceOf()"}, {"title": "MStableYieldSource.sol: approveMax can use mAsset instead of savings.underlying()", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "MStableYieldSource.sol: approveMax can use mAsset instead of savings.underlying()"}, {"title": "Increase Solc Optimiser Runs", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "mStableYieldSource", "SwappableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "Increase Solc Optimiser Runs"}, {"title": "Lack of zero address validation in _requireDifferentYieldSource()", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "SwappableYieldSource", "sponsor acknowledged"], "target": "2021-07-pooltogether-findings", "body": "Lack of zero address validation in _requireDifferentYieldSource()"}, {"title": "Amount should > 0 in supplyToken() and RedeemToken()  in SwappableYieldSource.sol", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "SwappableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "Amount should > 0 in supplyToken() and RedeemToken()  in SwappableYieldSource.sol"}, {"title": "No input validation for  while setting up value for immutable state variables", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/15", "labels": ["bug", "1 (Low Risk)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "No input validation for  while setting up value for immutable state variables"}, {"title": "onlyOwnerOrAssetManager can swap Yield Source in SwappableYieldSource at any time, immediately rugging all funds from old yield source", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/14", "labels": ["bug", "3 (High Risk)", "SwappableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "onlyOwnerOrAssetManager can swap Yield Source in SwappableYieldSource at any time, immediately rugging all funds from old yield source"}, {"title": "SwappableYieldSource._requireYieldSource is not a guarantee that you are interacting with a valid yield source", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/11", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "SwappableYieldSource._requireYieldSource is not a guarantee that you are interacting with a valid yield source"}, {"title": "[MStableYieldSource.sol] Public functions that should be declared as external to save gas", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/10", "labels": ["bug", "G (Gas Optimization)", "mStableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "[MStableYieldSource.sol] Public functions that should be declared as external to save gas"}, {"title": "Variable name or isInvalidYieldSource is confusion", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/8", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Variable name or isInvalidYieldSource is confusion"}, {"title": "_requireYieldSource not always called", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/7", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor disputed"], "target": "2021-07-pooltogether-findings", "body": "_requireYieldSource not always called"}, {"title": "yield source token can be transferred by owner/assetmanager", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/6", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor acknowledged"], "target": "2021-07-pooltogether-findings", "body": "yield source token can be transferred by owner/assetmanager"}, {"title": "setYieldSource leads to temporary wrong results", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/4", "labels": ["bug", "3 (High Risk)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "setYieldSource leads to temporary wrong results"}, {"title": "Old yield source still has infinite approval", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/3", "labels": ["bug", "2 (Med Risk)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Old yield source still has infinite approval"}, {"title": "Some tokens do not have decimals.", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/2", "labels": ["bug", "1 (Low Risk)", "SwappableYieldSource", "sponsor confirmed"], "target": "2021-07-pooltogether-findings", "body": "Some tokens do not have decimals."}, {"title": "Sponsored event not used", "html_url": "https://github.com/code-423n4/2021-07-pooltogether-findings/issues/1", "labels": ["bug", "0 (Non-critical)", "mStableYieldSource", "sponsor confirmed", "disagree with severity"], "target": "2021-07-pooltogether-findings", "body": "Sponsored event not used"}, {"title": "Rewards accumaulated can stay constant and oftern not increment", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/65", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged", "disagree with severity", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "Rewards accumaulated can stay constant and oftern not increment"}, {"title": "Rewards squatting - setting rewards in different ERC20 tokens opens various economic attacks. ", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/64", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "Rewards squatting - setting rewards in different ERC20 tokens opens various economic attacks. "}, {"title": "Timelock.sol: Indexing targets array might not be useful", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/63", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "EmergencyBrake", "Timelock"], "target": "2021-08-yield-findings", "body": "Timelock.sol: Indexing targets array might not be useful"}, {"title": "Methods should be external instead of public", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/61", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed", "ERC20Rewards", "Strategy"], "target": "2021-08-yield-findings", "body": "Methods should be external instead of public"}, {"title": "ERC20Rewards.sol: Unnecessary return argument for _updateRewardsPerToken()", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/60", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "ERC20Rewards.sol: Unnecessary return argument for _updateRewardsPerToken()"}, {"title": "ERC20Rewards.sol: latest() is unused", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/58", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "ERC20Rewards.sol: latest() is unused"}, {"title": "ERC20Rewards.sol: Have a method to calculate the latest rewardsPerToken accumulated value", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/57", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "ERC20Rewards.sol: Have a method to calculate the latest rewardsPerToken accumulated value"}, {"title": "ERC20Rewards.sol: Consider making rewardsToken immutable", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/56", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "ERC20Rewards.sol: Consider making rewardsToken immutable"}, {"title": "Missing check for contract existence", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Timelock"], "target": "2021-08-yield-findings", "body": "Missing check for contract existence"}, {"title": "Unused cauldron_ parameter", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Strategy"], "target": "2021-08-yield-findings", "body": "Unused cauldron_ parameter"}, {"title": "Multiple solc versions may be allowed", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/53", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "Multiple solc versions may be allowed"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/52", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "Missing zero-address checks"}, {"title": "Missing emits for events", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/51", "labels": ["bug", "duplicate", "1 (Low Risk)", "sponsor confirmed", "Strategy"], "target": "2021-08-yield-findings", "body": "Missing emits for events"}, {"title": "Upgrading solc compiler version may help with bug fixes\u2028", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-yield-findings", "body": "Upgrading solc compiler version may help with bug fixes\u2028"}, {"title": "Missing input validation to check that end > start", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/49", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "Missing input validation to check that end > start"}, {"title": "Check made redundant by following check", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/48", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "EmergencyBrake", "Timelock"], "target": "2021-08-yield-findings", "body": "Check made redundant by following check"}, {"title": "Redundant check\u2028", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/47", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "Oracles"], "target": "2021-08-yield-findings", "body": "Redundant check\u2028"}, {"title": "Two functions with same code can be replaced by a single one", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/46", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "Oracles"], "target": "2021-08-yield-findings", "body": "Two functions with same code can be replaced by a single one"}, {"title": "Not using memory data location specifier for external function parameters will save gas", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/45", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "EmergencyBrake", "FYTokenFactory"], "target": "2021-08-yield-findings", "body": "Not using memory data location specifier for external function parameters will save gas"}, {"title": "Using parameters or local variables instead of state variables in event emits can save gas", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/44", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ERC20Rewards", "Timelock"], "target": "2021-08-yield-findings", "body": "Using parameters or local variables instead of state variables in event emits can save gas"}, {"title": "Caching state variable in local variables for repeated reads saves gas by converting expensive SLOADs into much cheaper MLOADs", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ERC20Rewards", "Strategy"], "target": "2021-08-yield-findings", "body": "Caching state variable in local variables for repeated reads saves gas by converting expensive SLOADs into much cheaper MLOADs"}, {"title": "Changing function visibility from public to external saves gas", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ERC20Rewards", "Strategy"], "target": "2021-08-yield-findings", "body": "Changing function visibility from public to external saves gas"}, {"title": "Storage slot packing impacts gas efficiency\u2028", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "ERC20Rewards", "Strategy"], "target": "2021-08-yield-findings", "body": "Storage slot packing impacts gas efficiency\u2028"}, {"title": "lack of zero address validation in constructor", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/40", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "lack of zero address validation in constructor"}, {"title": "Gas optimization on `_updateRewardsPerToken` of `ERC20Rewards`", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "Gas optimization on `_updateRewardsPerToken` of `ERC20Rewards`"}, {"title": "Exchange rates from Compound are assumed with 18 decimals", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/38", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "Oracles"], "target": "2021-08-yield-findings", "body": "Exchange rates from Compound are assumed with 18 decimals"}, {"title": "Uninitialized `updateTime` variables in `CompositeMultiOracle`", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/37", "labels": ["bug", "duplicate", "1 (Low Risk)", "sponsor confirmed", "disagree with severity", "Oracles"], "target": "2021-08-yield-findings", "body": "Uninitialized `updateTime` variables in `CompositeMultiOracle`"}, {"title": "Use `safeTransfer` instead of `transfer`", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/36", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "Use `safeTransfer` instead of `transfer`"}, {"title": "Using unlocked/floating pragmas", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "Using unlocked/floating pragmas"}, {"title": "Gas: `ERC20Rewards._updateRewardsPerToken` return value is not needed", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/34", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "Gas: `ERC20Rewards._updateRewardsPerToken` return value is not needed"}, {"title": "Gas: `TimeLock.setDelay` reads storage variable for event", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/33", "labels": ["bug", "duplicate", "G (Gas Optimization)", "sponsor confirmed", "Timelock"], "target": "2021-08-yield-findings", "body": "Gas: `TimeLock.setDelay` reads storage variable for event"}, {"title": "No ERC20 safe* versions called", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/31", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "No ERC20 safe* versions called"}, {"title": "ERC20Rewards claiming can fail if no reward tokens", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/30", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "ERC20Rewards claiming can fail if no reward tokens"}, {"title": "ERC20Rewards breaks when setting a different token", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/29", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "ERC20Rewards breaks when setting a different token"}, {"title": "ERC20Rewards returns wrong rewards if no tokens initially exist", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/28", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "ERC20Rewards returns wrong rewards if no tokens initially exist"}, {"title": "TimeLock cannot schedule the same calls multiple times", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/27", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "Timelock"], "target": "2021-08-yield-findings", "body": "TimeLock cannot schedule the same calls multiple times"}, {"title": "CompositeMultiOracle returns wrong decimals for prices?", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/26", "labels": ["bug", "3 (High Risk)", "Oracles"], "target": "2021-08-yield-findings", "body": "CompositeMultiOracle returns wrong decimals for prices?"}, {"title": "The `Strategy.Divest` event is not fired", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/25", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Strategy"], "target": "2021-08-yield-findings", "body": "The `Strategy.Divest` event is not fired"}, {"title": "The `Strategy.Invest` event is not fired", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/24", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Strategy"], "target": "2021-08-yield-findings", "body": "The `Strategy.Invest` event is not fired"}, {"title": "`_peek` does not work for tokens with > 18 decimals", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/23", "labels": ["bug", "1 (Low Risk)", "Oracles"], "target": "2021-08-yield-findings", "body": "`_peek` does not work for tokens with > 18 decimals"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/22", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "Missing parameter validation"}, {"title": "EmergencyBrake.sol: Permissions cannot be re-planned after termination", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/21", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "EmergencyBrake"], "target": "2021-08-yield-findings", "body": "EmergencyBrake.sol: Permissions cannot be re-planned after termination"}, {"title": "Unchecked return value from transfer()", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/20", "labels": ["bug", "duplicate", "2 (Med Risk)", "ERC20Rewards"], "target": "2021-08-yield-findings", "body": "Unchecked return value from transfer()"}, {"title": "Incorrect type of uint parameter is used in event ", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/19", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "Incorrect type of uint parameter is used in event "}, {"title": "Different definition of beforeMaturity() and afterMaturity() modifier in different file", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/18", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "Strategy"], "target": "2021-08-yield-findings", "body": "Different definition of beforeMaturity() and afterMaturity() modifier in different file"}, {"title": "Floating Pragma", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/17", "labels": ["bug", "duplicate", "0 (Non-critical)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "Floating Pragma"}, {"title": "CompositeMultiOracle.sol - bases.length in setSources() and setPaths() can be stored in a variable", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/16", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "Oracles"], "target": "2021-08-yield-findings", "body": "CompositeMultiOracle.sol - bases.length in setSources() and setPaths() can be stored in a variable"}, {"title": "CompositeMultiOracle.sol - Add natspec documentation", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/15", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "Oracles"], "target": "2021-08-yield-findings", "body": "CompositeMultiOracle.sol - Add natspec documentation"}, {"title": "CTokenMultiOracle.sol - cTokenIds.length in setSources() can be stored in a variable", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "Oracles"], "target": "2021-08-yield-findings", "body": "CTokenMultiOracle.sol - cTokenIds.length in setSources() can be stored in a variable"}, {"title": "CTokenMultiOracle.sol - require in _setSource() seems useless", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/12", "labels": ["bug", "0 (Non-critical)", "Oracles"], "target": "2021-08-yield-findings", "body": "CTokenMultiOracle.sol - require in _setSource() seems useless"}, {"title": "CTokenMultiOracle.sol - Add natspec documentation", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "Oracles"], "target": "2021-08-yield-findings", "body": "CTokenMultiOracle.sol - Add natspec documentation"}, {"title": "FYTokenFactory.sol - fyToken.ROOT() can be stored in a variable", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/10", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-08-yield-findings", "body": "FYTokenFactory.sol - fyToken.ROOT() can be stored in a variable"}, {"title": "improve safety of role constants ", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/9", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Wand"], "target": "2021-08-yield-findings", "body": "improve safety of role constants "}, {"title": "updateTime of get is 0", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/7", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Oracles"], "target": "2021-08-yield-findings", "body": "updateTime of get is 0"}, {"title": "Combine get and peek", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed", "Oracles"], "target": "2021-08-yield-findings", "body": "Combine get and peek"}, {"title": "gas improvement wih source.decimals", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/5", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "Oracles"], "target": "2021-08-yield-findings", "body": "gas improvement wih source.decimals"}, {"title": "improve separation of concerns in TimeLock", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/4", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "improve separation of concerns in TimeLock"}, {"title": "gas improvement in schedule and cancel of TimeLock.sol", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "Timelock"], "target": "2021-08-yield-findings", "body": "gas improvement in schedule and cancel of TimeLock.sol"}, {"title": "extra checks separation of concerns", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/2", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-yield-findings", "body": "extra checks separation of concerns"}, {"title": "double negative in comment", "html_url": "https://github.com/code-423n4/2021-08-yield-findings/issues/1", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "Timelock"], "target": "2021-08-yield-findings", "body": "double negative in comment"}, {"title": "UberOwner has too much power", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/74", "labels": ["bug", "sponsor disputed", "3 (High Risk)"], "target": "2021-08-realitycards-findings", "body": "UberOwner has too much power"}, {"title": "Gas optimization in RCMarket.sol and other files", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/72", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-08-realitycards-findings", "body": "Gas optimization in RCMarket.sol and other files"}, {"title": "User can deposit more than maxContractBalance", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/71", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-08-realitycards-findings", "body": "User can deposit more than maxContractBalance"}, {"title": "gas saving in `_processRentCollection`", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/68", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "gas saving in `_processRentCollection`"}, {"title": "Use `_safeTransfer` when transferring NFTs", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/65", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-realitycards-findings", "body": "Use `_safeTransfer` when transferring NFTs"}, {"title": "Return value of `erc20.approve` is unchecked", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/64", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Return value of `erc20.approve` is unchecked"}, {"title": "Direct usage of `ecrecover` allows signature malleability", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/63", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Direct usage of `ecrecover` allows signature malleability"}, {"title": "Unable to Recover Improperly Transferred Tokens", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Unable to Recover Improperly Transferred Tokens"}, {"title": "add zero address validation in constructor", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/61", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "add zero address validation in constructor"}, {"title": "use of array without checking its length", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/60", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "use of array without checking its length"}, {"title": "Deposits don't work with fee-on transfer tokens", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/58", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Deposits don't work with fee-on transfer tokens"}, {"title": "`RCLeaderboard.market` storage variable is not used", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-realitycards-findings", "body": "`RCLeaderboard.market` storage variable is not used"}, {"title": "Markets can start in the past", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Markets can start in the past"}, {"title": "No check for the referenceContractAddress in createMarket()", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "No check for the referenceContractAddress in createMarket()"}]