[{"title": "no time restriction in  setMarketTimeRestrictions()", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/49", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "no time restriction in  setMarketTimeRestrictions()"}, {"title": "Remove hardhat console import", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/48", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Remove hardhat console import"}, {"title": "RCTreasury: Spelling Errors", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "RCTreasury: Spelling Errors"}, {"title": "RCTreasury: new hasRole() function with string role", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "RCTreasury: new hasRole() function with string role"}, {"title": "RCTreasury: AccessControl diagram contains Leaderboard, but it has no role", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/44", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "RCTreasury: AccessControl diagram contains Leaderboard, but it has no role"}, {"title": "RCLeaderboard: Erroneous comment", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/43", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "RCLeaderboard: Erroneous comment"}, {"title": "RCFactory: Unnecessary casting in updateTokenURI()", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/42", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "RCFactory: Unnecessary casting in updateTokenURI()"}, {"title": "RCFactory: Solve stack too deep for getMarketInfo()", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/41", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "RCFactory: Solve stack too deep for getMarketInfo()"}, {"title": "RCFactory: Do multiplication instead of division for length checks", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/39", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "RCFactory: Do multiplication instead of division for length checks"}, {"title": "Access Control Constants", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/38", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Access Control Constants"}, {"title": "transferCard should be done after treasury is updated.", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "transferCard should be done after treasury is updated."}, {"title": "Tight Variable Packing", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Tight Variable Packing"}, {"title": "Parameter updates not propagated", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/30", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Parameter updates not propagated"}, {"title": "uint32 conversion doesn't work as expected.", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/28", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "uint32 conversion doesn't work as expected."}, {"title": "findNewOwner edgecase", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/27", "labels": ["bug", "sponsor confirmed", "Resolved", "disagree with severity", "3 (High Risk)"], "target": "2021-08-realitycards-findings", "body": "findNewOwner edgecase"}, {"title": "Divide Before Multiply", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/25", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Divide Before Multiply"}, {"title": "Return Value is Not Validated", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/24", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "Return Value is Not Validated"}, {"title": "External Call Made Before State Change", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/23", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "External Call Made Before State Change"}, {"title": "msgSender() or _msgSender()", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/22", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "msgSender() or _msgSender()"}, {"title": "rentAllCards: don't have to pay for card you already own", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/21", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "rentAllCards: don't have to pay for card you already own"}, {"title": "make code of rentAllCards easier to read and maintain", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/20", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "make code of rentAllCards easier to read and maintain"}, {"title": "optimize _beforeTokenTransfer", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/19", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "optimize _beforeTokenTransfer"}, {"title": "Uninitialized Variable `marketWhitelist` in `RCTreasury.sol`", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/18", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "Resolved", "disagree with severity"], "target": "2021-08-realitycards-findings", "body": "Uninitialized Variable `marketWhitelist` in `RCTreasury.sol`"}, {"title": "Overflow in `Mode` Type", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/17", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-08-realitycards-findings", "body": "Overflow in `Mode` Type"}, {"title": "Inaccurate Comment", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/16", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "Inaccurate Comment"}, {"title": "Test Coverage Improvements", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/15", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Test Coverage Improvements"}, {"title": "Can't retrieve all data with getMarketInfo ", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/14", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "Can't retrieve all data with getMarketInfo "}, {"title": "getMostRecentMarket can revert", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/13", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "getMostRecentMarket can revert"}, {"title": "updateTokenURI doesn't call setTokenURI ", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/12", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "updateTokenURI doesn't call setTokenURI "}, {"title": "remove addMarket from RCNftHubL2", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "remove addMarket from RCNftHubL2"}, {"title": "remove unused modifiers", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/10", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "remove unused modifiers"}, {"title": "tokenExists ==> cardExists", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/9", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "tokenExists ==> cardExists"}, {"title": "safer implementation of tokenExists", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/8", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "safer implementation of tokenExists"}, {"title": "Allowance checks are not required", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/7", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "Allowance checks are not required"}, {"title": "RCMarket.sol - Gas optimization in _payoutWinnings", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "Resolved"], "target": "2021-08-realitycards-findings", "body": "RCMarket.sol - Gas optimization in _payoutWinnings"}, {"title": "RCMarket.sol - Gas optimization in claimCard", "html_url": "https://github.com/code-423n4/2021-08-realitycards-findings/issues/5", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-realitycards-findings", "body": "RCMarket.sol - Gas optimization in claimCard"}, {"title": "Cannot actually submit evidence", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/64", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Cannot actually submit evidence"}, {"title": "Incorrect accounting on transfer-on-fee/deflationary tokens in `Gravity`", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/62", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Incorrect accounting on transfer-on-fee/deflationary tokens in `Gravity`"}, {"title": "Direct usage of `ecrecover` allows signature malleability", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/61", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Direct usage of `ecrecover` allows signature malleability"}, {"title": "SafeMath library is not always used in `Gravity`", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/60", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "SafeMath library is not always used in `Gravity`"}, {"title": "Filter Logic calls to gravity cosmos at client level to avoid reverts", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/58", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "Filter Logic calls to gravity cosmos at client level to avoid reverts"}, {"title": "Unhandled reverts from Cosmos to Eth batches can cause *Denial Of Service*", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/56", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "Unhandled reverts from Cosmos to Eth batches can cause *Denial Of Service*"}, {"title": "Lack of Validation Check", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/55", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Lack of Validation Check"}, {"title": "Consider adding a token whitelist in `sendToCosmos` function", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "Consider adding a token whitelist in `sendToCosmos` function"}, {"title": "Anyone can deploy ERC20 tokens", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/53", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "Anyone can deploy ERC20 tokens"}, {"title": "The function `updateValset` does not have enough sanity checks", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/51", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "The function `updateValset` does not have enough sanity checks"}, {"title": "Avoid long revert strings.", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Avoid long revert strings."}, {"title": "State Variables that can be changed to `immutable`", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/48", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "State Variables that can be changed to `immutable`"}, {"title": "Use `calldata` instead of `memory` for function parameters", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/47", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Use `calldata` instead of `memory` for function parameters"}, {"title": "Caching the length in for loops", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/46", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Caching the length in for loops"}, {"title": "Upgrade to at least Solidity 0.8.4", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/45", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Upgrade to at least Solidity 0.8.4"}, {"title": "use of floating pragma ", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/42", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "use of floating pragma "}, {"title": "Gravity: Consider enforcing validation expiry on-chain", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/40", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "Gravity: Consider enforcing validation expiry on-chain"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/39", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Style issues"}, {"title": "Pack structs tightly", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Pack structs tightly"}, {"title": "Cache values", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/35", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Cache values"}, {"title": "Actions can be frontrunned", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/33", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "Actions can be frontrunned"}, {"title": "Why nonces are not incrementing by 1 ?", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/32", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Why nonces are not incrementing by 1 ?"}, {"title": "Validations of parameters", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/31", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Validations of parameters"}, {"title": "Skip functionCall when the payload is empty", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/29", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Skip functionCall when the payload is empty"}, {"title": "powers in a decreasing order", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/27", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "powers in a decreasing order"}, {"title": "cumulativePower check should be inclusive", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/26", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "cumulativePower check should be inclusive"}, {"title": "logic calls can steal tokens", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/25", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "logic calls can steal tokens"}, {"title": "validator set can be updated with same set", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/23", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "validator set can be updated with same set"}, {"title": "Panics as error-handling", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/20", "labels": ["bug", "3 (High Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "Panics as error-handling"}, {"title": "Downcasting Can Freeze The Chain", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/19", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Downcasting Can Freeze The Chain"}, {"title": "Anti-pattern `is_err()`, `return`, then `.unwrap()`", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/18", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Anti-pattern `is_err()`, `return`, then `.unwrap()`"}, {"title": "`Vec::new()` instead of `Iterator::collect()`", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/17", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "`Vec::new()` instead of `Iterator::collect()`"}, {"title": "Passing by ownership instead of borrowing", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/16", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Passing by ownership instead of borrowing"}, {"title": "The gravity.sol router should have pause/unpause functionality.", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/15", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "The gravity.sol router should have pause/unpause functionality."}, {"title": "Does the cosmos-sdk listen to only 1 gravity.sol contract address?", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/14", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-08-gravitybridge-findings", "body": "Does the cosmos-sdk listen to only 1 gravity.sol contract address?"}, {"title": "Possible miner incentive for chain reorgs if ETHBlockDelay is too small", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/12", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Possible miner incentive for chain reorgs if ETHBlockDelay is too small"}, {"title": "Crash Eth Oracle On Any LogicCallEvent", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/11", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Crash Eth Oracle On Any LogicCallEvent"}, {"title": "Large ValSets potentially freezes `Gravity.sol`", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/9", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "Large ValSets potentially freezes `Gravity.sol`"}, {"title": "ERC20s that block transfer to particular addresses enable DoS/Censorship", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/8", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-08-gravitybridge-findings", "body": "ERC20s that block transfer to particular addresses enable DoS/Censorship"}, {"title": "Win all relayer rewards", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/7", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Win all relayer rewards"}, {"title": "Large Validator Sets/Rapid Validator Set Updates May Freeze the Bridge or Relayers", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/6", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Large Validator Sets/Rapid Validator Set Updates May Freeze the Bridge or Relayers"}, {"title": "Freeze The Bridge Via Large ERC20 Names/Symbols/Denoms", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/5", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Freeze The Bridge Via Large ERC20 Names/Symbols/Denoms"}, {"title": "Freeze Bridge via Non-UTF8 Token Name/Symbol/Denom", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/4", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Freeze Bridge via Non-UTF8 Token Name/Symbol/Denom"}, {"title": "Smart Contract Gas Optimization", "html_url": "https://github.com/code-423n4/2021-08-gravitybridge-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-08-gravitybridge-findings", "body": "Smart Contract Gas Optimization"}, {"title": "Inconsistent Template Deletion", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/151", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Inconsistent Template Deletion"}, {"title": "Inaccurate Function Name `enableList()`", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/149", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Inaccurate Function Name `enableList()`"}, {"title": "Missing `uint256` Cast", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/148", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Missing `uint256` Cast"}, {"title": "Improper Boolean Comparison", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/144", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Improper Boolean Comparison"}, {"title": "Use a struct for raw data.", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/143", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Use a struct for raw data."}, {"title": "Certain view functions should be used only by UI and not by the code", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/142", "labels": ["bug", "1 (Low Risk)", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "Certain view functions should be used only by UI and not by the code"}, {"title": "Add input validation on some methods", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/141", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Add input validation on some methods"}, {"title": "Consider using a solidity version >= 0.8.0", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/138", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Consider using a solidity version >= 0.8.0"}, {"title": "An adversarial attacker can initialize ListFactory", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/137", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "An adversarial attacker can initialize ListFactory"}, {"title": "Requiring a decimals method for ERC-20 tokens is non-standard", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/136", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "Requiring a decimals method for ERC-20 tokens is non-standard"}, {"title": "Caching `totalPoints` during `setPoints` method", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/135", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Caching `totalPoints` during `setPoints` method"}, {"title": "Consider having short revert strings", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/134", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Consider having short revert strings"}, {"title": " Use `calldata` instead of `memory` for function parameters", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/133", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": " Use `calldata` instead of `memory` for function parameters"}, {"title": "## Caching the length in for loops", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/132", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "## Caching the length in for loops"}, {"title": "Upgrade to at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/131", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Upgrade to at least 0.8.4"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/130", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Style issues"}, {"title": "_addCommitment should check that address is not empty", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/128", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "_addCommitment should check that address is not empty"}, {"title": "_startTime is always < 10000000000 when _endTime < 10000000000 (_endTime > _startTime)", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/127", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "_startTime is always < 10000000000 when _endTime < 10000000000 (_endTime > _startTime)"}, {"title": "Pack structs tightly", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/126", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Pack structs tightly"}, {"title": "allDepositIds is pretty much useless", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/125", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "allDepositIds is pretty much useless"}, {"title": "Dead code", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/123", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Dead code"}, {"title": "Useless initialization to default value", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/122", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Useless initialization to default value"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/120", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Unused imports"}, {"title": "Separate minter roles are not really necessary", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/118", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Separate minter roles are not really necessary"}, {"title": "SushiToken transfers are broken due to wrong delegates accounting on transfers", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/117", "labels": ["bug", "3 (High Risk)", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "SushiToken transfers are broken due to wrong delegates accounting on transfers"}, {"title": "MISORecipe01 uses outdated interfaces", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/116", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "MISORecipe01 uses outdated interfaces"}, {"title": "Commitments can happen after already finalized", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/115", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Commitments can happen after already finalized"}, {"title": "`TokenVault` incorrectly tracks `userIndex`", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/114", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "`TokenVault` incorrectly tracks `userIndex`"}, {"title": "Inclusive checks", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/113", "labels": ["bug", "0 (Non-critical)"], "target": "2021-09-sushimiso-findings", "body": "Inclusive checks"}, {"title": "`MISOMasterChef.setDevPercentage` should be capped", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/111", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "`MISOMasterChef.setDevPercentage` should be capped"}, {"title": "The first escrow index underflows", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/110", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed", "resolved"], "target": "2021-09-sushimiso-findings", "body": "The first escrow index underflows"}, {"title": "`HyperbolicAuction.initAuction` 's `_factor` argument is never used", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/109", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "`HyperbolicAuction.initAuction` 's `_factor` argument is never used"}, {"title": "Loss of price precision", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/108", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Loss of price precision"}, {"title": "Gas:  Remove nonce from parameter list", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/107", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Gas:  Remove nonce from parameter list"}, {"title": "TokenInitialized token parameter is always empty", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/106", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed", "resolved"], "target": "2021-09-sushimiso-findings", "body": "TokenInitialized token parameter is always empty"}, {"title": "Gas: Cache auction prices", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/105", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Gas: Cache auction prices"}, {"title": "Use constant named variable for auction decimals", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/103", "labels": ["bug", "0 (Non-critical)", "disagree with severity", "sponsor confirmed", "resolved"], "target": "2021-09-sushimiso-findings", "body": "Use constant named variable for auction decimals"}, {"title": "Should `TokenList` implement `IPointList`?", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/101", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "Should `TokenList` implement `IPointList`?"}, {"title": "`AccessControlTemplateRemoved` event not used", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/100", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "`AccessControlTemplateRemoved` event not used"}, {"title": "No ERC20 `safeApprove` versions called", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/99", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "No ERC20 `safeApprove` versions called"}, {"title": "getTokenTemplate should check boundaries", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/98", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "getTokenTemplate should check boundaries"}, {"title": "No ERC20 safe* versions called in MisoRecipe", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/97", "labels": ["bug", "1 (Low Risk)"], "target": "2021-09-sushimiso-findings", "body": "No ERC20 safe* versions called in MisoRecipe"}, {"title": "Usage of address.transfer", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/96", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Usage of address.transfer"}, {"title": "`MISOMasterChef` may not be used with fee-on-transfer tokens", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/94", "labels": ["bug", "sponsor disputed", "1 (Low Risk)"], "target": "2021-09-sushimiso-findings", "body": "`MISOMasterChef` may not be used with fee-on-transfer tokens"}, {"title": "Unused event `StrategyCvxHelper.HarvestState`", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/93", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Unused event `StrategyCvxHelper.HarvestState`"}, {"title": "lockTokens should validate withdrawer", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/92", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "lockTokens should validate withdrawer"}, {"title": "use of floating pragma", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/91", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "use of floating pragma"}, {"title": "unused local variable", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/90", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "unused local variable"}, {"title": "use of transfer() instead of call()  to send eth", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/87", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "use of transfer() instead of call()  to send eth"}, {"title": "excessive eth is not transfered back to the deployer if msg.value is greater than minimum fees ", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/86", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "excessive eth is not transfered back to the deployer if msg.value is greater than minimum fees "}, {"title": "Consolidation of Storage Slots", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/84", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Consolidation of Storage Slots"}, {"title": "Lack of `Immutable` Keyword", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Lack of `Immutable` Keyword"}, {"title": "Old Solidity compiler version", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/79", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Old Solidity compiler version"}, {"title": "Unconventional use of basis points for integratorFeePct could cause undefined behavior", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/78", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Unconventional use of basis points for integratorFeePct could cause undefined behavior"}, {"title": "Same LP token can be added more than once to affect reward calculations", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/76", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Same LP token can be added more than once to affect reward calculations"}, {"title": "Unchecked `fundsCommitted` in Token Withdrawal", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/74", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Unchecked `fundsCommitted` in Token Withdrawal"}, {"title": "Event parameters interchanged for emit of access control template addition", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/73", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed", "resolved"], "target": "2021-09-sushimiso-findings", "body": "Event parameters interchanged for emit of access control template addition"}, {"title": "Unused event may be unused code or indicative of missed emit/logic", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/72", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Unused event may be unused code or indicative of missed emit/logic"}, {"title": "Lack of indexed event parameters will affect offchain monitoring", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "Lack of indexed event parameters will affect offchain monitoring"}, {"title": "Relying on setters for initialisation of critical parameters is risky", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/70", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Relying on setters for initialisation of critical parameters is risky"}, {"title": "Unnecessary zero check on variable which is never initialized earlier", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/68", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Unnecessary zero check on variable which is never initialized earlier"}, {"title": "Avoiding unnecessary external call will save > 2600 gas", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Avoiding unnecessary external call will save > 2600 gas"}, {"title": "Using function parameters in emits saves gas", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/65", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Using function parameters in emits saves gas"}, {"title": "Init functions are susceptible to front-running", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/64", "labels": ["bug", "sponsor disputed", "1 (Low Risk)"], "target": "2021-09-sushimiso-findings", "body": "Init functions are susceptible to front-running"}, {"title": "Missing contract existence check may cause silent failures of token transfers", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/63", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Missing contract existence check may cause silent failures of token transfers"}, {"title": "Check for zero msg.value can save gas", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Check for zero msg.value can save gas"}, {"title": "deployMarket may revert due to integer underflow from missing threshold check", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/61", "labels": ["bug", "sponsor disputed", "1 (Low Risk)"], "target": "2021-09-sushimiso-findings", "body": "deployMarket may revert due to integer underflow from missing threshold check"}, {"title": "Avoiding initialization of loop index can save a little gas", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Avoiding initialization of loop index can save a little gas"}, {"title": "Missing useful isOpen() function could save gas", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/59", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Missing useful isOpen() function could save gas"}, {"title": "Payable external init is redundant and may allow unaccounted token claims or DoS", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/53", "labels": ["bug", "sponsor disputed", "1 (Low Risk)"], "target": "2021-09-sushimiso-findings", "body": "Payable external init is redundant and may allow unaccounted token claims or DoS"}, {"title": "Single-step wallet address change is risky", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/52", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Single-step wallet address change is risky"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/45", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Missing zero-address checks"}, {"title": "Critical withdrawTokens function is missing an event\u2028", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/44", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Critical withdrawTokens function is missing an event\u2028"}, {"title": "Front-running cancelAuction can prevent auction cancellation", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/43", "labels": ["bug", "sponsor disputed", "1 (Low Risk)"], "target": "2021-09-sushimiso-findings", "body": "Front-running cancelAuction can prevent auction cancellation"}, {"title": "Caching state variables in local/memory variables avoids SLOADs to save gas", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Caching state variables in local/memory variables avoids SLOADs to save gas"}, {"title": "Missing zero-address check on beneficiary may lead to loss of funds", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/41", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "Missing zero-address check on beneficiary may lead to loss of funds"}, {"title": "Tokens without 18 decimals are unhandled", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/38", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Tokens without 18 decimals are unhandled"}, {"title": "Slot packing saves slots but increases runtime gas consumption due to masking", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Slot packing saves slots but increases runtime gas consumption due to masking"}, {"title": "Lack of Factory Contract for `TokenList.sol`", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Lack of Factory Contract for `TokenList.sol`"}, {"title": "`_safeApprove()` is Not Used Instead of `approve()`", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/33", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "`_safeApprove()` is Not Used Instead of `approve()`"}, {"title": "`currentTemplateId` is Not Actively Removed by `MISOLauncher.removeLiquidityLauncherTemplate()`", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/32", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "`currentTemplateId` is Not Actively Removed by `MISOLauncher.removeLiquidityLauncherTemplate()`"}, {"title": "Missing Events on State Changing Functions", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/31", "labels": ["bug", "0 (Non-critical)", "sponsor disputed", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "Missing Events on State Changing Functions"}, {"title": "Divide Before Multiply", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/30", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Divide Before Multiply"}, {"title": "Lack of Input Validation", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/29", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Lack of Input Validation"}, {"title": "Missing SPDX Identifier", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/26", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Missing SPDX Identifier"}, {"title": "Require statement in PostAuctionLauncher finalize() function will never be reached.", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/25", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Require statement in PostAuctionLauncher finalize() function will never be reached."}, {"title": "Outdated and Vulnerable `TimelockController.sol` Contract", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/24", "labels": ["bug", "1 (Low Risk)", "disagree with severity", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "Outdated and Vulnerable `TimelockController.sol` Contract"}, {"title": "funds will get lost in deployAccessControl if devaddr isn't set", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/23", "labels": ["bug", "sponsor disputed", "1 (Low Risk)"], "target": "2021-09-sushimiso-findings", "body": "funds will get lost in deployAccessControl if devaddr isn't set"}, {"title": "comment copy paste error", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/21", "labels": ["bug", "0 (Non-critical)"], "target": "2021-09-sushimiso-findings", "body": "comment copy paste error"}, {"title": "Frontrunning Initialization of Contracts", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/19", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "Frontrunning Initialization of Contracts"}, {"title": "gas improvement in isInList ", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/17", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "gas improvement in isInList "}, {"title": "finalize() can be succesfully called before initMarket()", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/16", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushimiso-findings", "body": "finalize() can be succesfully called before initMarket()"}, {"title": "Last person to withdraw his tokens might not be able to do this, in Crowdsale (edge case)", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/15", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-09-sushimiso-findings", "body": "Last person to withdraw his tokens might not be able to do this, in Crowdsale (edge case)"}, {"title": "`PostAuctionLauncher.sol#finalize()` Adding liquidity to an existing pool may allows the attacker to steal most of the tokens", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/14", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "resolved"], "target": "2021-09-sushimiso-findings", "body": "`PostAuctionLauncher.sol#finalize()` Adding liquidity to an existing pool may allows the attacker to steal most of the tokens"}, {"title": "PostAuctionLauncher _deposit require condition contradicts error message", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/13", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushimiso-findings", "body": "PostAuctionLauncher _deposit require condition contradicts error message"}, {"title": "Teams should be warned not to accept rebasing tokens as payment currencies", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "Teams should be warned not to accept rebasing tokens as payment currencies"}, {"title": "Typo in comment in PointList.sol", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/10", "labels": ["bug", "0 (Non-critical)"], "target": "2021-09-sushimiso-findings", "body": "Typo in comment in PointList.sol"}, {"title": "Redundant liquidityAdded check", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Redundant liquidityAdded check"}, {"title": "Unnecessary addition in finalize() function", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/5", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Unnecessary addition in finalize() function"}, {"title": "Redundant _newAddress parameter for deprecateFactory", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/4", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushimiso-findings", "body": "Redundant _newAddress parameter for deprecateFactory"}, {"title": "cancelAuction function is public, but not called internally", "html_url": "https://github.com/code-423n4/2021-09-sushimiso-findings/issues/2", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-09-sushimiso-findings", "body": "cancelAuction function is public, but not called internally"}, {"title": "Incorrect comparison in the `_updateReserves` function of `HybridPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/190", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushitrident-findings", "body": "Incorrect comparison in the `_updateReserves` function of `HybridPool`"}, {"title": "Unnecessary condition on `_processSwap` of `HybridPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/189", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Unnecessary condition on `_processSwap` of `HybridPool`"}, {"title": "Division by zero in `_computeLiquidityFromAdjustedBalances` of `HybridPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/185", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Division by zero in `_computeLiquidityFromAdjustedBalances` of `HybridPool`"}, {"title": "Docs disagrees with index pool code", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/184", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushitrident-findings", "body": "Docs disagrees with index pool code"}, {"title": "No bar fees for IndexPools?", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/181", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "No bar fees for IndexPools?"}, {"title": "Wrong initialization of `blockTimestampLast` in `ConstantProductPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/180", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Wrong initialization of `blockTimestampLast` in `ConstantProductPool`"}, {"title": "Users are susceptible to back-running when depositing ETH to `TridenRouter`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/179", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "disagree with severity"], "target": "2021-09-sushitrident-findings", "body": "Users are susceptible to back-running when depositing ETH to `TridenRouter`"}, {"title": "Inconsistent tokens sent to `barFeeTo`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/177", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Inconsistent tokens sent to `barFeeTo`"}, {"title": "View functions in Hybrid Pool Contract Pool need better documentation", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/175", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "View functions in Hybrid Pool Contract Pool need better documentation"}, {"title": "`_getY` and `_getYD` math operations can be reordered", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/174", "labels": ["bug", "duplicate", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "`_getY` and `_getYD` math operations can be reordered"}, {"title": "`_computeLiquidityFromAdjustedBalances` order of operations can be improved", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/173", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "`_computeLiquidityFromAdjustedBalances` order of operations can be improved"}, {"title": "Funds in the pool could be stolen by exploiting `flashSwap` in `HybridPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/167", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Funds in the pool could be stolen by exploiting `flashSwap` in `HybridPool`"}, {"title": "Incorrect multiplication in `_computeSingleOutGivenPoolIn` of `IndexPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/166", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Incorrect multiplication in `_computeSingleOutGivenPoolIn` of `IndexPool`"}, {"title": "Incorrect usage of `_pow` in `_computeSingleOutGivenPoolIn` of `IndexPool`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/165", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Incorrect usage of `_pow` in `_computeSingleOutGivenPoolIn` of `IndexPool`"}, {"title": "HybridPool's wrong amount to balance conversion", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/164", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "HybridPool's wrong amount to balance conversion"}, {"title": "Overflow in the `mint` function of `IndexPool` causes LPs' funds to be stolen", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/163", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Overflow in the `mint` function of `IndexPool` causes LPs' funds to be stolen"}, {"title": "`_powApprox`: unbounded loop and meaning", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/162", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "`_powApprox`: unbounded loop and meaning"}, {"title": "Follow Curve's convention: `_getYD` and `_getY`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/156", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Follow Curve's convention: `_getYD` and `_getY`"}, {"title": "Approximations may finish with inaccurate values", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/155", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-09-sushitrident-findings", "body": "Approximations may finish with inaccurate values"}, {"title": "lack of input validation in Transfer() and TransferFrom()", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/153", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "lack of input validation in Transfer() and TransferFrom()"}, {"title": "Rounding errors will occur for tokens without decimals", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/152", "labels": ["bug", "2 (Med Risk)", "sponsor disputed", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Rounding errors will occur for tokens without decimals"}, {"title": "Using interfaces instead of selectors is best practice", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/150", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Using interfaces instead of selectors is best practice"}, {"title": "Using 10**X for constants isn't gas efficient", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/148", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Using 10**X for constants isn't gas efficient"}, {"title": "Consider using solidity 0.8.8", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/141", "labels": ["bug", "1 (Low Risk)"], "target": "2021-09-sushitrident-findings", "body": "Consider using solidity 0.8.8"}, {"title": "Lack of address validation in `MasterDeployer.setMigrator`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/140", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Lack of address validation in `MasterDeployer.setMigrator`"}, {"title": "absolute difference is not calculated properly when a > b in MathUtils", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/139", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "absolute difference is not calculated properly when a > b in MathUtils"}, {"title": "Lack of address validation in `MasterDeployer.addToWhitelist`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/138", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Lack of address validation in `MasterDeployer.addToWhitelist`"}, {"title": "Lack of checks for address and amount in `TridentERC20._burn`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/135", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Lack of checks for address and amount in `TridentERC20._burn`"}, {"title": "Lack of checks for address and amount in `TridentERC20._mint`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/131", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Lack of checks for address and amount in `TridentERC20._mint`"}, {"title": "Cache storage variable in the stack can save gas", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/129", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Cache storage variable in the stack can save gas"}, {"title": "Cache array length in for loops can save gas", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/128", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Cache array length in for loops can save gas"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/127", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Style issues"}, {"title": "The functions `refundETH` and `unwrapWETH` is generalized-front-runnable", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/124", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "The functions `refundETH` and `unwrapWETH` is generalized-front-runnable"}, {"title": "Functions that can be made external", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/122", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Functions that can be made external"}, {"title": "Consider avoiding low level calls to MasterDeployer", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/121", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Consider avoiding low level calls to MasterDeployer"}, {"title": "Use `calldata` instead of `memory` for function parameters", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/119", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Use `calldata` instead of `memory` for function parameters"}, {"title": " Consider putting some parts of `_div` in unchecked", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/118", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": " Consider putting some parts of `_div` in unchecked"}, {"title": "Unused state variable `barFee` and `_barFeeTo` in IndexPool", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/117", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Unused state variable `barFee` and `_barFeeTo` in IndexPool"}, {"title": "Caching a storage load in TridentERC20", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/116", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Caching a storage load in TridentERC20"}, {"title": "Caching the storage read to `tokens.length`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/115", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Caching the storage read to `tokens.length`"}, {"title": "Consider changing the `_deployData` architecture", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/114", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Consider changing the `_deployData` architecture"}, {"title": "Consider using custom errors instead of revert strings", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/113", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Consider using custom errors instead of revert strings"}, {"title": "Caching the length in for loops", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/112", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Caching the length in for loops"}, {"title": "Inclusive check of type(uint128).max", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/107", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Inclusive check of type(uint128).max"}, {"title": "Emit events when setting the values in constructor", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/105", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Emit events when setting the values in constructor"}, {"title": "MAX_FEE_SQUARE dependency on MAX_FEE", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/104", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "MAX_FEE_SQUARE dependency on MAX_FEE"}, {"title": "Gas: `HybridPool._computeLiquidityFromAdjustedBalances` should return early", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/103", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Gas: `HybridPool._computeLiquidityFromAdjustedBalances` should return early"}, {"title": "Gas: `HybridPool` unnecessary `balance` computations", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/102", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Gas: `HybridPool` unnecessary `balance` computations"}, {"title": "`HybridPool`'s reserve is converted to \"amount\" twice", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/101", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "`HybridPool`'s reserve is converted to \"amount\" twice"}, {"title": "`HybridPool`'s `flashSwap` does not always call callback", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/100", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "`HybridPool`'s `flashSwap` does not always call callback"}, {"title": "`HybridPool`'s `flashSwap` sends entire fee to `barFeeTo`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/99", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "`HybridPool`'s `flashSwap` sends entire fee to `barFeeTo`"}, {"title": "`HybridPool` missing positive token amount checks for initial mint", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/97", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "`HybridPool` missing positive token amount checks for initial mint"}, {"title": "`ConstantProductPool.burnSingle` swap amount computations should use balance", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/96", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "`ConstantProductPool.burnSingle` swap amount computations should use balance"}, {"title": "`ConstantProductPool` mint liquidity computation should include fees", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/95", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "`ConstantProductPool` mint liquidity computation should include fees"}, {"title": "`ConstantProductPool` bar fee computation seems wrong", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/94", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "`ConstantProductPool` bar fee computation seems wrong"}, {"title": "`ConstantProductPool.getAmountOut` does not verify token", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/93", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "`ConstantProductPool.getAmountOut` does not verify token"}, {"title": "Several low-level calls don't check the success return value", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/91", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Several low-level calls don't check the success return value"}, {"title": "`withdrawFromWETH` always reverts ", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/90", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "`withdrawFromWETH` always reverts "}, {"title": "`_depositToBentoBox` sometimes uses both ETH and WETH", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/89", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "`_depositToBentoBox` sometimes uses both ETH and WETH"}, {"title": "Router's `complexPath` percentagePaths don't work as expected", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/87", "labels": ["bug", "2 (Med Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "Router's `complexPath` percentagePaths don't work as expected"}, {"title": "TridentERC20 does not emit Approval event in `transferFrom`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/86", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "TridentERC20 does not emit Approval event in `transferFrom`"}, {"title": "`IndexPool` should check that tokens are supported", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/82", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "`IndexPool` should check that tokens are supported"}, {"title": "IndexPool initial LP supply computation is wrong", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/78", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "IndexPool initial LP supply computation is wrong"}, {"title": "Unsafe cast in IndexPool mint leads to attack", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/77", "labels": ["bug", "3 (High Risk)"], "target": "2021-09-sushitrident-findings", "body": "Unsafe cast in IndexPool mint leads to attack"}, {"title": "TridentRouter.isWhiteListed() Misleading name", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/76", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "TridentRouter.isWhiteListed() Misleading name"}, {"title": "`IndexPool.mint` The first liquidity provider is forced to supply assets in the same amount, which may cause a significant amount of fund loss", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/72", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-sushitrident-findings", "body": "`IndexPool.mint` The first liquidity provider is forced to supply assets in the same amount, which may cause a significant amount of fund loss"}, {"title": "Router would fail when adding liquidity to index Pool", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/68", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Router would fail when adding liquidity to index Pool"}, {"title": "Caching in local variables can save gas ", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/65", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Caching in local variables can save gas "}, {"title": "Avoiding initialization of loop index can save a little gas", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Avoiding initialization of loop index can save a little gas"}, {"title": "Use of unchecked can save gas where computation is known to be overflow/underflow safe", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/62", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Use of unchecked can save gas where computation is known to be overflow/underflow safe"}, {"title": "Unused code can be removed to save gas", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/61", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Unused code can be removed to save gas"}, {"title": "Replace multiple calls with a single new function call", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/60", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Replace multiple calls with a single new function call"}, {"title": "Missing contract existence check may cause silent failures of token transfers", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/59", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "Missing contract existence check may cause silent failures of token transfers"}, {"title": "Allowing direct single-step ownership transfer even as an option is risky", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/58", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Allowing direct single-step ownership transfer even as an option is risky"}, {"title": "Timelock between new owner transfer+claim will reduce risk", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/57", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Timelock between new owner transfer+claim will reduce risk"}, {"title": "Unconditional setting of boolean/address values is risky", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/56", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Unconditional setting of boolean/address values is risky"}, {"title": "Missing timelock for critical contract setters of privileged roles", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Missing timelock for critical contract setters of privileged roles"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/52", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Missing zero-address checks"}, {"title": "Use of ecrecover is susceptible to signature malleability", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "Use of ecrecover is susceptible to signature malleability"}, {"title": "Unlocked Solidity compiler pragma is risky", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/49", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "Unlocked Solidity compiler pragma is risky"}, {"title": "Similarly initialized weight thresholds may cause unexpected deployment failures", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/48", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Similarly initialized weight thresholds may cause unexpected deployment failures"}, {"title": "Strict bound in reserve check of Hybrid Pool", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/47", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-sushitrident-findings", "body": "Strict bound in reserve check of Hybrid Pool"}, {"title": "barFee handled incorrectly in flashSwap (or swap)", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/46", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "barFee handled incorrectly in flashSwap (or swap)"}, {"title": "Missing invalid token check against pool address", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/45", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Missing invalid token check against pool address"}, {"title": "Unused constants could indicate missing logic or redundant code", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/43", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Unused constants could indicate missing logic or redundant code"}, {"title": "TridentOwnable: pendingOwner should be set to address(1) if direct owner transfer is used", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "TridentOwnable: pendingOwner should be set to address(1) if direct owner transfer is used"}, {"title": "IndexPool: Redundant MAX_WEIGHT", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "IndexPool: Redundant MAX_WEIGHT"}, {"title": "IndexPool:  Poor conversion from Balancer V1's corresponding functions", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/40", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "IndexPool:  Poor conversion from Balancer V1's corresponding functions"}, {"title": "HybridPool: SwapCallback should be done regardless of data.length", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/39", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "HybridPool: SwapCallback should be done regardless of data.length"}, {"title": "ConstantProductPool: Unnecessary mod before casting to uint32", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "ConstantProductPool: Unnecessary mod before casting to uint32"}, {"title": "ConstantProductPool: Move minting of MIN_LIQUIDITY after checks", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/35", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "ConstantProductPool: Move minting of MIN_LIQUIDITY after checks"}, {"title": "ConstantProductPool & HybridPool: Adding and removing unbalanced liquidity yields slightly more tokens than swap", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/34", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "ConstantProductPool & HybridPool: Adding and removing unbalanced liquidity yields slightly more tokens than swap"}, {"title": "Consider unlocking pool only upon initial mint", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Consider unlocking pool only upon initial mint"}, {"title": "# Hybrid Pool underflow when a < 100", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/32", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "disagree with severity"], "target": "2021-09-sushitrident-findings", "body": "# Hybrid Pool underflow when a < 100"}, {"title": "hybrid pool uses wrong `non_optimal_mint_fee`", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/31", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "hybrid pool uses wrong `non_optimal_mint_fee`"}, {"title": "IndexPool's INIT_POOL_SUPPLY is not fair.", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/29", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-sushitrident-findings", "body": "IndexPool's INIT_POOL_SUPPLY is not fair."}, {"title": "IndexPool pow overflows when `weightRatio` > 10.", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/28", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "IndexPool pow overflows when `weightRatio` > 10."}, {"title": "Index Pool always swap to Zero", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/27", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-sushitrident-findings", "body": "Index Pool always swap to Zero"}, {"title": "Flash swap call back prior to transferring tokens in indexPool", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/26", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-sushitrident-findings", "body": "Flash swap call back prior to transferring tokens in indexPool"}, {"title": "Missing validation of recipient argument could indefinitely lock owner role", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/23", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "Missing validation of recipient argument could indefinitely lock owner role"}, {"title": "[TridentERC20.sol] Possible replay attacks on `permit` function in case of a future chain split", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/18", "labels": ["bug", "duplicate", "1 (Low Risk)", "disagree with severity"], "target": "2021-09-sushitrident-findings", "body": "[TridentERC20.sol] Possible replay attacks on `permit` function in case of a future chain split"}, {"title": "Use parameter _blockTimestampLast in _update() ", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/16", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-sushitrident-findings", "body": "Use parameter _blockTimestampLast in _update() "}, {"title": "Reset cachedPool ?", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/15", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "Reset cachedPool ?"}, {"title": "Safe gas on _powApprox", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/12", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-sushitrident-findings", "body": "Safe gas on _powApprox"}, {"title": "HybridPool.sol lacks zero check for maserDeployer", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/10", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "HybridPool.sol lacks zero check for maserDeployer"}, {"title": "ConstantProductPool lacks zero check for maserDeployer", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/9", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "ConstantProductPool lacks zero check for maserDeployer"}, {"title": "unchecked use of optional function \"decimals\" of erc20 standards", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/4", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-sushitrident-findings", "body": "unchecked use of optional function \"decimals\" of erc20 standards"}, {"title": "Events not emitted while changing state variables in constructor", "html_url": "https://github.com/code-423n4/2021-09-sushitrident-findings/issues/2", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-sushitrident-findings", "body": "Events not emitted while changing state variables in constructor"}, {"title": "Adding assymetric liquidity in _addLiquidity results in fewer LP tokens minted than what should be wanted", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/158", "labels": ["bug", "2 (Med Risk)"], "target": "2021-09-yaxis-findings", "body": "Adding assymetric liquidity in _addLiquidity results in fewer LP tokens minted than what should be wanted"}, {"title": "getMostPremium() does not necessarily return the best asset to trade for.", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/156", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-yaxis-findings", "body": "getMostPremium() does not necessarily return the best asset to trade for."}, {"title": "Be aware that transactions can be frontrun to exactly the estimated amount.", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/153", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-yaxis-findings", "body": "Be aware that transactions can be frontrun to exactly the estimated amount."}, {"title": "`harvestNextStrategy` can be optimized", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/146", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "`harvestNextStrategy` can be optimized"}, {"title": "`maxStrategies` can be lower than existing strategies", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/145", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-yaxis-findings", "body": "`maxStrategies` can be lower than existing strategies"}, {"title": "Missing check in `reorderStrategies`", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/144", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Missing check in `reorderStrategies`"}, {"title": "`tokens[i]` can be memorized", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/143", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "`tokens[i]` can be memorized"}, {"title": "Unnecessary `balanceOfWant() > 0`", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/141", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Unnecessary `balanceOfWant() > 0`"}, {"title": "Harvest can be frontrun", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/140", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Harvest can be frontrun"}, {"title": "`getMostPremium()` can be wrong", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/139", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor confirmed", "disagree with severity"], "target": "2021-09-yaxis-findings", "body": "`getMostPremium()` can be wrong"}, {"title": "Earn process emits two events that can be arranged into one", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/138", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Earn process emits two events that can be arranged into one"}, {"title": "Unclear `totalDepositCap`", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/135", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Unclear `totalDepositCap`"}, {"title": "`cap` isn't enforced", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/134", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "`cap` isn't enforced"}, {"title": "No slippage checks can lead to sandwich attacks", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/133", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-yaxis-findings", "body": "No slippage checks can lead to sandwich attacks"}, {"title": "`Vault.balance()` mixes normalized and standard amounts", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/132", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "`Vault.balance()` mixes normalized and standard amounts"}, {"title": "`Vault.withdraw` mixes normalized and standard amounts", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/131", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-yaxis-findings", "body": "`Vault.withdraw` mixes normalized and standard amounts"}, {"title": "`Controller.inCaseStrategyGetStuck` does not update balance", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/130", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "`Controller.inCaseStrategyGetStuck` does not update balance"}, {"title": "`Controller.setCap` sets wrong vault balance", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/128", "labels": ["bug", "duplicate", "3 (High Risk)"], "target": "2021-09-yaxis-findings", "body": "`Controller.setCap` sets wrong vault balance"}, {"title": "VaultHelper deposits don't work with fee-on transfer tokens", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/127", "labels": ["bug", "2 (Med Risk)"], "target": "2021-09-yaxis-findings", "body": "VaultHelper deposits don't work with fee-on transfer tokens"}, {"title": "token -> vault mapping can be overwritten", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/126", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-09-yaxis-findings", "body": "token -> vault mapping can be overwritten"}, {"title": "Gas: Timestamp in router swap can be hardcoded", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/125", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Gas: Timestamp in router swap can be hardcoded"}, {"title": "Gas: Loop in `StablesConverter.expected` can be avoided", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/124", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Gas: Loop in `StablesConverter.expected` can be avoided"}, {"title": "Gas: Loop in `StablesConverter.convert` can be avoided", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/123", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Gas: Loop in `StablesConverter.convert` can be avoided"}, {"title": "Withdraw event uses wrong parameter", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/122", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Withdraw event uses wrong parameter"}, {"title": "`Vault.withdraw` sometimes burns too many shares", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/121", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-09-yaxis-findings", "body": "`Vault.withdraw` sometimes burns too many shares"}, {"title": "Gas: Unnecessary addition in `Vault.deposit`", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/118", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-09-yaxis-findings", "body": "Gas: Unnecessary addition in `Vault.deposit`"}, {"title": "Gas: `removeStrategy` iteration over all strategies can be avoided", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/117", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-09-yaxis-findings", "body": "Gas: `removeStrategy` iteration over all strategies can be avoided"}, {"title": "Gas: `removeToken` iteration over all tokens can be avoided", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/116", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-09-yaxis-findings", "body": "Gas: `removeToken` iteration over all tokens can be avoided"}, {"title": "ERC20 return values not checked", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/114", "labels": ["bug", "duplicate", "2 (Med Risk)"], "target": "2021-09-yaxis-findings", "body": "ERC20 return values not checked"}, {"title": "`YAxisVotePower.balanceOf` can be manipulated", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/113", "labels": ["bug", "documentation", "2 (Med Risk)"], "target": "2021-09-yaxis-findings", "body": "`YAxisVotePower.balanceOf` can be manipulated"}, {"title": "wrong YAXIS estimates", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/112", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "wrong YAXIS estimates"}, {"title": "Unbounded iterations over strategies or tokens", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/111", "labels": ["bug", "duplicate", "1 (Low Risk)"], "target": "2021-09-yaxis-findings", "body": "Unbounded iterations over strategies or tokens"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/107", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "Missing parameter validation"}, {"title": "The `sqrt` function can overflow execute invalid operation", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/104", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "The `sqrt` function can overflow execute invalid operation"}, {"title": "The function `removeToken` can get prohibitively expensive", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/101", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-09-yaxis-findings", "body": "The function `removeToken` can get prohibitively expensive"}, {"title": "VaultHelper contract should never have tokens at the end of a transaction", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/100", "labels": ["bug", "documentation", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "VaultHelper contract should never have tokens at the end of a transaction"}, {"title": "Safety of the Vyper compiler", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/99", "labels": ["bug", "sponsor acknowledged", "disagree with severity", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "Safety of the Vyper compiler"}, {"title": "Upgrade to at least 0.8.4", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/98", "labels": ["bug", "duplicate", "G (Gas Optimization)"], "target": "2021-09-yaxis-findings", "body": "Upgrade to at least 0.8.4"}, {"title": "Caching the length in for loops", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/95", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Caching the length in for loops"}, {"title": "Consider making some constants as non-public to save gas", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/94", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Consider making some constants as non-public to save gas"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/93", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "Style issues"}, {"title": "Join _checkToken function and modifier together", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Join _checkToken function and modifier together"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/89", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "Unused imports"}, {"title": "Dead code", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor disputed"], "target": "2021-09-yaxis-findings", "body": "Dead code"}, {"title": "uint8 is less efficient than uint256 in loop iterations", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/86", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "uint8 is less efficient than uint256 in loop iterations"}, {"title": "VaultHelper could validate that amount is greater than 0", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/85", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "VaultHelper could validate that amount is greater than 0"}, {"title": "Decimals of upgradeable tokens may change", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/82", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Decimals of upgradeable tokens may change"}, {"title": "setMinter should check that _minter is not empty", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/81", "labels": ["bug", "sponsor acknowledged", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "setMinter should check that _minter is not empty"}, {"title": "Inclusive check in setSlippage", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/78", "labels": ["bug", "invalid"], "target": "2021-09-yaxis-findings", "body": "Inclusive check in setSlippage"}, {"title": "An attacker can steal funds from multi-token vaults", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/77", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "An attacker can steal funds from multi-token vaults"}, {"title": "Vault: Zero Withdrawal Fee If Protocol Halts", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/75", "labels": ["bug", "1 (Low Risk)"], "target": "2021-09-yaxis-findings", "body": "Vault: Zero Withdrawal Fee If Protocol Halts"}, {"title": "Vault: Withdrawals can be frontrun to cause users to burn tokens without receiving funds in return", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/74", "labels": ["bug", "duplicate", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Vault: Withdrawals can be frontrun to cause users to burn tokens without receiving funds in return"}, {"title": "Vault: Swaps at parity with swap fee = withdrawal fee", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/71", "labels": ["bug", "2 (Med Risk)"], "target": "2021-09-yaxis-findings", "body": "Vault: Swaps at parity with swap fee = withdrawal fee"}, {"title": "Vault: Redundant notHalted modifier in depositMultiple()", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/70", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Vault: Redundant notHalted modifier in depositMultiple()"}, {"title": "Removed tokens can't be withdrawn from vault", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/69", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Removed tokens can't be withdrawn from vault"}, {"title": "Harvester: Simpler implementation for canHarvest()", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Harvester: Simpler implementation for canHarvest()"}, {"title": "Controller: Extra sload of _vaultDetails[_vault].balance", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/65", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Controller: Extra sload of _vaultDetails[_vault].balance"}, {"title": "Max approvals are risky if contract is malicious/compromised", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/64", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Max approvals are risky if contract is malicious/compromised"}, {"title": "safeApprove may revert for non-zero to non-zero approvals", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/63", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "safeApprove may revert for non-zero to non-zero approvals"}, {"title": "Missing support/documentation for use of deflationary tokens in protocol", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/62", "labels": ["bug", "1 (Low Risk)", "sponsor disputed"], "target": "2021-09-yaxis-findings", "body": "Missing support/documentation for use of deflationary tokens in protocol"}, {"title": "onlyEnabledConverter modifier is not used in all functions", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/60", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "onlyEnabledConverter modifier is not used in all functions"}, {"title": "Removing unused parameter and modifier can save gas", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/58", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Removing unused parameter and modifier can save gas"}, {"title": "No use of notHalted in LegacyController functions", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/57", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "No use of notHalted in LegacyController functions"}, {"title": "Change public visibility to external", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/55", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "Change public visibility to external"}, {"title": "manager.allowedVaults check missing for add/remove strategy", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/50", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "manager.allowedVaults check missing for add/remove strategy"}, {"title": "Unused event may be unused code or indicative of missed emit/logic", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/49", "labels": ["bug", "sponsor acknowledged", "sponsor confirmed", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "Unused event may be unused code or indicative of missed emit/logic"}, {"title": "Halting the protocol should be onlyGovernance and not onlyStrategist", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/47", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Halting the protocol should be onlyGovernance and not onlyStrategist"}, {"title": "Removal of last token in the array can be optimized", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/46", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Removal of last token in the array can be optimized"}, {"title": "Single-step change of governance address is extremely risky", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/44", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "Single-step change of governance address is extremely risky"}, {"title": "Rearranging declaration of state variables will save storage slots because of packing", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/43", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Rearranging declaration of state variables will save storage slots because of packing"}, {"title": "Tokens with > 18 decimals will break logic", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/42", "labels": ["bug", "duplicate", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "Tokens with > 18 decimals will break logic"}, {"title": "Missing sanity/threshold check on totalDepositCap may cause DoS", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/38", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Missing sanity/threshold check on totalDepositCap may cause DoS"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/35", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Missing zero-address checks"}, {"title": "Checking for zero amounts can save gas by preventing expensive external calls", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/30", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Checking for zero amounts can save gas by preventing expensive external calls"}, {"title": "Controller does not raise an error when there's insufficient liquidity", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/28", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Controller does not raise an error when there's insufficient liquidity"}, {"title": "hijack the vault by pumping vault price.", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/26", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "hijack the vault by pumping vault price."}, {"title": "vault cap's at totalSupply would behave unexpectedly", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/25", "labels": ["bug", "1 (Low Risk)"], "target": "2021-09-yaxis-findings", "body": "vault cap's at totalSupply would behave unexpectedly"}, {"title": "missing safety check in addStrategy", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/23", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "missing safety check in addStrategy"}, {"title": "extra array length check in depositMultipleVault ", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/20", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "extra array length check in depositMultipleVault "}, {"title": "Save a step in withdraw of Vault.sol", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/18", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Save a step in withdraw of Vault.sol"}, {"title": "shadowing of strategies", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/17", "labels": ["bug", "sponsor disputed", "0 (Non-critical)"], "target": "2021-09-yaxis-findings", "body": "shadowing of strategies"}, {"title": "Harvesting and Funding Is Not Checked When the Contract Is Halted", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/10", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "Harvesting and Funding Is Not Checked When the Contract Is Halted"}, {"title": "earn results in decreasing share price", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/9", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "earn results in decreasing share price"}, {"title": " # Controller is vulnerable to sandwich attack", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/7", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": " # Controller is vulnerable to sandwich attack"}, {"title": "removeToken would break the vault/protocol.", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/4", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "removeToken would break the vault/protocol."}, {"title": "No safety check in addToken", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/3", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": "No safety check in addToken"}, {"title": "Vault treats all tokens exactly the same that creates (huge) arbitrage opportunities.", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/2", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged"], "target": "2021-09-yaxis-findings", "body": "Vault treats all tokens exactly the same that creates (huge) arbitrage opportunities."}, {"title": " set cap breaks vault's Balance", "html_url": "https://github.com/code-423n4/2021-09-yaxis-findings/issues/1", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2021-09-yaxis-findings", "body": " set cap breaks vault's Balance"}, {"title": "add zero address validation in constructor and initializer", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/61", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "add zero address validation in constructor and initializer"}, {"title": "lack of emission of events while setting fees ", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/60", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "lack of emission of events while setting fees "}, {"title": "state variable that are not changed throughout the contract should be declared as constant", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/59", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "state variable that are not changed throughout the contract should be declared as constant"}, {"title": "use of floating pragma", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/58", "labels": ["bug", "0 (Non-critical)", "sponsor disputed"], "target": "2021-09-bvecvx-findings", "body": "use of floating pragma"}, {"title": "Missing slippage/min-return check in `veCVXStrategy`", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/57", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Missing slippage/min-return check in `veCVXStrategy`"}, {"title": "Missing slippage/min-return check in `StrategyCvxHelper`", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/56", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Missing slippage/min-return check in `StrategyCvxHelper`"}, {"title": "Missing slippage/min-return check in `BaseStrategy`", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/55", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Missing slippage/min-return check in `BaseStrategy`"}, {"title": "Unbounded iteration in `CvxLocker.updateReward`", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/54", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Unbounded iteration in `CvxLocker.updateReward`"}, {"title": "`CvxLocker.findEpochId` stops after 128 iterations", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/53", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "`CvxLocker.findEpochId` stops after 128 iterations"}, {"title": "`CvxLocker.setApprovals` can be called by anyone", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/52", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "`CvxLocker.setApprovals` can be called by anyone"}, {"title": "`CvxLocker.setBoost` wrong validation", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/51", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "`CvxLocker.setBoost` wrong validation"}, {"title": "`CvxLocker.setStakeLimits` missing validation", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/50", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "`CvxLocker.setStakeLimits` missing validation"}, {"title": "`SettV3.transferFrom` block lock can be circumvented", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/49", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "`SettV3.transferFrom` block lock can be circumvented"}, {"title": "`veCVXStrategy.manualRebalance` has wrong logic", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/47", "labels": ["bug", "3 (High Risk)", "sponsor confirmed", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "`veCVXStrategy.manualRebalance` has wrong logic"}, {"title": "Gas: `_onlyNotProtectedTokens` should use maps", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/45", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Gas: `_onlyNotProtectedTokens` should use maps"}, {"title": "Unused event `veCVXStrategy.TreeDistribution`", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/44", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Unused event `veCVXStrategy.TreeDistribution`"}, {"title": "Unused event `veCVXStrategy.Debug`", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/43", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Unused event `veCVXStrategy.Debug`"}, {"title": "Unused event `StrategyCvxHelper.TendState`", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/42", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Unused event `StrategyCvxHelper.TendState`"}, {"title": "Unused event `StrategyCvxHelper.HarvestState`", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/41", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Unused event `StrategyCvxHelper.HarvestState`"}, {"title": "veCVXStrategy: Unused return outputs from _processRewardsFees()", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/39", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "veCVXStrategy: Unused return outputs from _processRewardsFees()"}, {"title": "veCVXStrategy: Sub-optimal trading path", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/38", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "veCVXStrategy: Sub-optimal trading path"}, {"title": "veCVXStrategy: Redundancies", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/37", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "veCVXStrategy: Redundancies"}, {"title": "veCVXStrategy: Extra functions can be external instead of public", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "veCVXStrategy: Extra functions can be external instead of public"}, {"title": "veCVXStrategy: Erroneous Comments", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "veCVXStrategy: Erroneous Comments"}, {"title": "Swap conversion is susceptible to MEV flashbots", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/34", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Swap conversion is susceptible to MEV flashbots"}, {"title": "StrategyCvxHelper: safeApprove instead of approve", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/33", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "StrategyCvxHelper: safeApprove instead of approve"}, {"title": "StrategyCvxHelper: Redundant re-initialisation of path array", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "StrategyCvxHelper: Redundant re-initialisation of path array"}, {"title": "Delete function setKeepReward", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Delete function setKeepReward"}, {"title": "Calculation of valueInLocker", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/30", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Calculation of valueInLocker"}, {"title": "public functions that can be external", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/29", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "public functions that can be external"}, {"title": "lpComponent is useless", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/28", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "lpComponent is useless"}, {"title": "tend() can be simplified", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/27", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "tend() can be simplified"}, {"title": "Immutable variables", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/26", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Immutable variables"}, {"title": "Use cached _ethBalance", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/25", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Use cached _ethBalance"}, {"title": "_processPerformanceFees is useless now", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/24", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "_processPerformanceFees is useless now"}, {"title": "Frontrunning distribute functions", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/22", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Frontrunning distribute functions"}, {"title": "events in BaseStrategy are never emitted", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/21", "labels": ["bug", "0 (Non-critical)"], "target": "2021-09-bvecvx-findings", "body": "events in BaseStrategy are never emitted"}, {"title": "Order of parameters in KickReward event", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/20", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Order of parameters in KickReward event"}, {"title": "Validations", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/19", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Validations"}, {"title": "Functions not returning declared values", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/18", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Functions not returning declared values"}, {"title": "The comments incorrectly indicate the range in which `toLock` input should be given.", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/15", "labels": ["bug", "0 (Non-critical)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "The comments incorrectly indicate the range in which `toLock` input should be given."}, {"title": "Declare CvxLocker erc20 contract variables as immutable", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/14", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Declare CvxLocker erc20 contract variables as immutable"}, {"title": "Make variable veCVXStrategy::MAX_BPS constant", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Make variable veCVXStrategy::MAX_BPS constant"}, {"title": "Faulty return value in veCVXStrategy::reinvest()", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/12", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Faulty return value in veCVXStrategy::reinvest()"}, {"title": "Reentrancy on distributeOther()", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/9", "labels": ["bug", "1 (Low Risk)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Reentrancy on distributeOther()"}, {"title": "Refactor code to use calculations at current epoch", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/8", "labels": ["bug", "0 (Non-critical)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Refactor code to use calculations at current epoch"}, {"title": "Gas optimization: no need for extra variable declaration", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/7", "labels": ["bug", "G (Gas Optimization)", "sponsor acknowledged"], "target": "2021-09-bvecvx-findings", "body": "Gas optimization: no need for extra variable declaration"}, {"title": "toLock in the comments is a % while in the code it is measured in bips.", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/6", "labels": ["bug", "0 (Non-critical)"], "target": "2021-09-bvecvx-findings", "body": "toLock in the comments is a % while in the code it is measured in bips."}, {"title": "ManualRebalance will be frontrun for most of the tokens.", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/5", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "ManualRebalance will be frontrun for most of the tokens."}, {"title": "Don't include unused functions", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/4", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "Don't include unused functions"}, {"title": "setKeepReward function is unfinished", "html_url": "https://github.com/code-423n4/2021-09-bvecvx-findings/issues/1", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed"], "target": "2021-09-bvecvx-findings", "body": "setKeepReward function is unfinished"}, {"title": "Race condition on ERC20 approval", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/120", "labels": ["bug", "1 (Low Risk)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Race condition on ERC20 approval"}, {"title": "Add nonReentrant modifiers to uniswap position methods + Check effects pattern", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/118", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Add nonReentrant modifiers to uniswap position methods + Check effects pattern"}, {"title": "Oracle should call latestRoundData instead.", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/116", "labels": ["bug", "1 (Low Risk)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Oracle should call latestRoundData instead."}, {"title": "Improper File Imports", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/115", "labels": ["bug", "0 (Non-critical)", "sponsor-disputed"], "target": "2021-09-wildcredit-findings", "body": "Improper File Imports"}, {"title": "Lack of check for address(0) in `LendingPair.depositUniPosition`", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/112", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Lack of check for address(0) in `LendingPair.depositUniPosition`"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/108", "labels": ["bug", "0 (Non-critical)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Style issues"}, {"title": "Unused imports", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/107", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Unused imports"}, {"title": "Ensure targetUtilization > 0", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/105", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Ensure targetUtilization > 0"}, {"title": "Only accept ETH from WETH contract", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/103", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Only accept ETH from WETH contract"}, {"title": "Oracle response assumes 8 decimals", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/101", "labels": ["bug", "1 (Low Risk)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Oracle response assumes 8 decimals"}, {"title": "Emit events when setting the initial values in the constructor", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/100", "labels": ["bug", "0 (Non-critical)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Emit events when setting the initial values in the constructor"}, {"title": "Reordering state variable declarations to prevent incorrect packing can save slots/gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Reordering state variable declarations to prevent incorrect packing can save slots/gas"}, {"title": "Avoiding unnecessary SSTORE can save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/90", "labels": ["bug", "G (Gas Optimization)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Avoiding unnecessary SSTORE can save gas"}, {"title": "Using msg.sender or cached locals in emits instead of state variables saves gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/88", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Using msg.sender or cached locals in emits instead of state variables saves gas"}, {"title": "Unused parameter removal can save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/87", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Unused parameter removal can save gas"}, {"title": "`setTargetUtilization()` Misleading error message", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/86", "labels": ["bug", "0 (Non-critical)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "`setTargetUtilization()` Misleading error message"}, {"title": "Moving checks before other logic can save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/85", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Moving checks before other logic can save gas"}, {"title": "Use unchecked{} primitive to save gas where possible", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/84", "labels": ["bug", "G (Gas Optimization)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Use unchecked{} primitive to save gas where possible"}, {"title": "Input validation on amount > 0 will save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/82", "labels": ["bug", "G (Gas Optimization)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Input validation on amount > 0 will save gas"}, {"title": " Input validation on positionID not being 0 will save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": " Input validation on positionID not being 0 will save gas"}, {"title": "Redundant zero-address checks", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/80", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Redundant zero-address checks"}, {"title": "Caching state variables in local/memory variables avoids SLOADs to save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/79", "labels": ["bug", "G (Gas Optimization)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Caching state variables in local/memory variables avoids SLOADs to save gas"}, {"title": "Clone-and-own approach used for OZ libraries is susceptible to errors and missing upstream bug fixes", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/77", "labels": ["bug", "0 (Non-critical)", "sponsor-disputed"], "target": "2021-09-wildcredit-findings", "body": "Clone-and-own approach used for OZ libraries is susceptible to errors and missing upstream bug fixes"}, {"title": "Lack of guarded launch approach may be risky", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/76", "labels": ["bug", "0 (Non-critical)", "sponsor-disputed"], "target": "2021-09-wildcredit-findings", "body": "Lack of guarded launch approach may be risky"}, {"title": "Missing event for this critical onlyOperator function where the operator can arbitrarily change name+symbol", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/74", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Missing event for this critical onlyOperator function where the operator can arbitrarily change name+symbol"}, {"title": "Cache and check decimals before write storage can save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/73", "labels": ["bug", "G (Gas Optimization)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Cache and check decimals before write storage can save gas"}, {"title": "Renouncing ownership is not allowed", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/71", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Renouncing ownership is not allowed"}, {"title": "Use of tokenB\u2019s price instead of tokenA in determining account health will lead to protocol mis-accounting and insolvency", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/70", "labels": ["bug", "3 (High Risk)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Use of tokenB\u2019s price instead of tokenA in determining account health will lead to protocol mis-accounting and insolvency"}, {"title": "Using a zero-address check as a proxy for enforcing one-time initialization is risky", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/68", "labels": ["bug", "0 (Non-critical)", "sponsor-disputed"], "target": "2021-09-wildcredit-findings", "body": "Using a zero-address check as a proxy for enforcing one-time initialization is risky"}, {"title": "UniV3Helper: Function visibilities can be restricted to pure", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/66", "labels": ["bug", "G (Gas Optimization)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "UniV3Helper: Function visibilities can be restricted to pure"}, {"title": "Remove pair-specific parameters until they are actually used/enforced", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/65", "labels": ["bug", "0 (Non-critical)", "sponsor-disputed", "disagree-with-severity"], "target": "2021-09-wildcredit-findings", "body": "Remove pair-specific parameters until they are actually used/enforced"}, {"title": "UniswapV3Helper: Redundant pool initialization", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/64", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "UniswapV3Helper: Redundant pool initialization"}, {"title": "Missing threshold check for highRate", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/63", "labels": ["bug", "1 (Low Risk)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Missing threshold check for highRate"}, {"title": "UniswapV3Helper: Misleading param names for getSqrtPriceX96()", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/62", "labels": ["bug", "0 (Non-critical)", "sponsor-disputed", "disagree-with-severity"], "target": "2021-09-wildcredit-findings", "body": "UniswapV3Helper: Misleading param names for getSqrtPriceX96()"}, {"title": "Constraint of minRate < lowRate can be broken", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/61", "labels": ["bug", "1 (Low Risk)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Constraint of minRate < lowRate can be broken"}, {"title": "Incorrect error message strings with require()s", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/59", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Incorrect error message strings with require()s"}, {"title": "UniswapV3Helper: Avoid recomputation of sqrtRatio from pool tick", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/58", "labels": ["bug", "G (Gas Optimization)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "UniswapV3Helper: Avoid recomputation of sqrtRatio from pool tick"}, {"title": "Strict inequality should be relaxed to be closed ranges instead of open", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/57", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Strict inequality should be relaxed to be closed ranges instead of open"}, {"title": "Use of deprecated Chainlink API", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/55", "labels": ["bug", "2 (Med Risk)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Use of deprecated Chainlink API"}, {"title": "Missing zero-address checks", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/54", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Missing zero-address checks"}, {"title": "Missing SafeMath", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/53", "labels": ["bug", "1 (Low Risk)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Missing SafeMath"}, {"title": "Consider adding `account` parameter to event WithdrawUniPosition", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/51", "labels": ["bug", "0 (Non-critical)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Consider adding `account` parameter to event WithdrawUniPosition"}, {"title": "Supply part of the accrued debt can be stolen", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/50", "labels": ["bug", "2 (Med Risk)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Supply part of the accrued debt can be stolen"}, {"title": "Gas: Unnecessary `_maxAmount` parameter in `repayAllETH`", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/49", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Gas: Unnecessary `_maxAmount` parameter in `repayAllETH`"}, {"title": "`LendingPair.withdrawUniPosition` should accrue debt first", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/48", "labels": ["bug", "2 (Med Risk)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "`LendingPair.withdrawUniPosition` should accrue debt first"}, {"title": "`UniswapV3Helper.getUserTokenAmount` could be simplified", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/47", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "`UniswapV3Helper.getUserTokenAmount` could be simplified"}, {"title": "Truncated math in `interestRatePerBlock`", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/46", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Truncated math in `interestRatePerBlock`"}, {"title": "Simple interest formula is used", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/44", "labels": ["bug", "1 (Low Risk)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Simple interest formula is used"}, {"title": "Uniswap oracle assumes PairToken <> WETH liquidity", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/43", "labels": ["bug", "1 (Low Risk)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Uniswap oracle assumes PairToken <> WETH liquidity"}, {"title": "Missing parameter validation", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/41", "labels": ["bug", "0 (Non-critical)", "disagree-with-severity", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Missing parameter validation"}, {"title": "The check if _checkBorrowEnabled and _checkBorrowLimits can be done earlier", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/40", "labels": ["bug", "0 (Non-critical)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "The check if _checkBorrowEnabled and _checkBorrowLimits can be done earlier"}, {"title": "Improve readability of constants", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/37", "labels": ["bug", "0 (Non-critical)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Improve readability of constants"}, {"title": "Reduce risk of rounding error in _timeRateToBlockRate", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/36", "labels": ["bug", "1 (Low Risk)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Reduce risk of rounding error in _timeRateToBlockRate"}, {"title": "transferLp() Misleading error message", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/35", "labels": ["bug", "0 (Non-critical)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "transferLp() Misleading error message"}, {"title": "Change unnecessary _supplyBalanceConverted to _supplyOf can save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/32", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Change unnecessary _supplyBalanceConverted to _supplyOf can save gas"}, {"title": "Change unnecessary _borrowBalanceConverted to _debtOf can save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/31", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Change unnecessary _borrowBalanceConverted to _debtOf can save gas"}, {"title": "Liquidation can be escaped by depositing a Uni v3 position with 0 liquidity", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/30", "labels": ["bug", "3 (High Risk)", "disagree-with-severity", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Liquidation can be escaped by depositing a Uni v3 position with 0 liquidity"}, {"title": "Incorrect import ", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/11", "labels": ["bug", "0 (Non-critical)", "sponsor-disputed"], "target": "2021-09-wildcredit-findings", "body": "Incorrect import "}, {"title": "PairFactory.sol is Ownable but not owner capabilites are used", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/9", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "PairFactory.sol is Ownable but not owner capabilites are used"}, {"title": "Declare the value when the variable is created ", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/6", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Declare the value when the variable is created "}, {"title": "Prefer abi.encode over abi.encodePacked", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/4", "labels": ["bug", "0 (Non-critical)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Prefer abi.encode over abi.encodePacked"}, {"title": "Use unchecked{} in ERC20 to save gas without risk", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "sponsor-acknowledged"], "target": "2021-09-wildcredit-findings", "body": "Use unchecked{} in ERC20 to save gas without risk"}, {"title": "Making PairFactory state vars immutable would save gas", "html_url": "https://github.com/code-423n4/2021-09-wildcredit-findings/issues/1", "labels": ["bug", "G (Gas Optimization)", "sponsor-confirmed"], "target": "2021-09-wildcredit-findings", "body": "Making PairFactory state vars immutable would save gas"}, {"title": "Inaccurate Revert Message", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/63", "labels": ["bug", "1 (Low Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Inaccurate Revert Message"}, {"title": "`PrizePool.awardExternalERC721()` Erroneously Emits Events", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/62", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "`PrizePool.awardExternalERC721()` Erroneously Emits Events"}, {"title": "Lack of Pause Mechanism", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/61", "labels": ["bug", "sponsor acknowledged", "0 (Non-critical)"], "target": "2021-10-pooltogether-findings", "body": "Lack of Pause Mechanism"}, {"title": "Comment Typos", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/59", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Comment Typos"}, {"title": "`YieldSourcePrizePool._canAwardExternal()` Does Not Prevent the Deposit Token From Being Withdrawn", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/58", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-pooltogether-findings", "body": "`YieldSourcePrizePool._canAwardExternal()` Does Not Prevent the Deposit Token From Being Withdrawn"}, {"title": "Unnecessary decrement (DrawCalculator.sol)", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/57", "labels": ["bug", "G (Gas Optimization)"], "target": "2021-10-pooltogether-findings", "body": "Unnecessary decrement (DrawCalculator.sol)"}, {"title": "Miners Can Re-Roll the VRF Output to Game the Protocol", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/56", "labels": ["bug", "sponsor acknowledged", "3 (High Risk)"], "target": "2021-10-pooltogether-findings", "body": "Miners Can Re-Roll the VRF Output to Game the Protocol"}, {"title": "Style issues", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/52", "labels": ["bug", "sponsor confirmed", "0 (Non-critical)", "resolved"], "target": "2021-10-pooltogether-findings", "body": "Style issues"}, {"title": "unchecked arithmetics", "html_url": "https://github.com/code-423n4/2021-10-pooltogether-findings/issues/51", "labels": ["bug", "G (Gas Optimization)", "sponsor confirmed", "resolved"], "target": "2021-10-pooltogether-findings", "body": "unchecked arithmetics"}]