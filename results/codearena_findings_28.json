[{"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/111", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "admin can cancel themselves, which may result in no admin", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/110", "labels": ["bug", "duplicate", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "admin can cancel themselves, which may result in no admin"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/107", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "_baseVestedAmount() and vestedAmount() Return Incorrect Historical Values", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/104", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-09-vtvl-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-09-vtvl/blob/f68b7f3e61dad0d873b5b5a1e8126b839afeab5f/contracts/VTVLVesting.sol#L183-L187 https://github.com/code-423n4/2022-09-vtvl/blob/f68b7f3e61dad0d873b5b5a1e8126b839afeab5f/contracts/VTVLVesting.sol#L198   # Vulnerability details  ## Description As the comments in `_baseVestedAmount()` explain, once there is any `_claim.amountWithdrawn`, it will be returned if it is greater than the calculated value `vestAmt`. However, `vestAmt` takes account of time, `_referenceTs`, whereas `_claim.amountWithdrawn` is always the amount withdrawn to date. Therefore, for all historical values below `_claim.amountWithdrawn`, including timestamps before `_claim.startTimestamp` and before `_claim.cliffReleaseTimestamp`, `_claim.amountWithdrawn` will be returned.  ## Impact Given that VTVL is intended to be an accessible platform for use by a wide variety of users, this behaviour does create a security risk. Consider these scenarios: - A protocol relies on VTVL as an off-the-shelf solution for vesting, but builds other systems (escrow, NFT grants, access, airdrops) that work by checking the value of `vestedAmount()`. Airdrops are especially likely to be interested in historical values. These values would be distorted by how much users have claimed and so would result in an undesirable distribution of resources. - Even if the above does not occur, consider that VTVL might be passed over as a vesting solution precisely because its historical data is inaccurate. - A contract could be built that inherits from `VTVLVesting` and attempts to use `_baseVestedAmount()` (which is `internal` and so can be used by inheriting contracts). The inheriting contract might apportion rewards based on historical usage. - VTVL itself might wish to inherit from `VTVLVesting` in future.  ## Proof of Concept ```diff diff --git a/test/VTVLVesting.ts b/test/VTVLVestingPOC.ts index bb609fb..073e53f 100644 --- a/test/VTVLVesting.ts +++ b/test/VTVLVestingPOC.ts @@ -500,14 +500,37 @@ describe('Revoke Claim', async () => {    const recipientAddress = await randomAddress();    const [owner, owner2] = await ethers.getSigners();   -  it('allows admin to revoke a valid claim', async () => { +  it('POC: WITHDRAWN DATA IS UNRELIABLE', async () => {      const {vestingContract} = await createPrefundedVestingContract({tokenName, tokenSymbol, initialSupplyTokens}); -    await vestingContract.createClaim(recipientAddress, startTimestamp, endTimestamp, cliffReleaseTimestamp, releaseIntervalSecs, linearVestAmount, cliffAmount); +    const startTimestamp2 = startTimestamp.add(releaseIntervalSecs.mul(100)); +    const endTimestamp2 = endTimestamp.add(releaseIntervalSecs.mul(100)); +    const cliffReleaseTimestamp2 = cliffReleaseTimestamp.add(releaseIntervalSecs.mul(100)); +    await vestingContract.createClaim(owner2.address, startTimestamp2, endTimestamp2, cliffReleaseTimestamp2, releaseIntervalSecs, linearVestAmount, cliffAmount); + +    // Fast forward to middle of claim +    const halfWay = startTimestamp2.toNumber() + (endTimestamp2.toNumber()-startTimestamp2.toNumber())/2; +    await ethers.provider.send(\"evm_mine\", [halfWay]); + +    let vestAmt = await vestingContract.vestedAmount(owner2.address, startTimestamp); +    console.log(\"NO WITHDRAWAL, BEFORE VEST START: \",vestAmt.toString()); +    vestAmt = await vestingContract.vestedAmount(owner2.address, startTimestamp2); +    console.log(\"NO WITHDRAWAL, AT VEST START: \",vestAmt.toString()); +    vestAmt = await vestingContract.vestedAmount(owner2.address, halfWay); +    console.log(\"NO WITHDRAWAL, HALF WAY THROUGH VEST: \",vestAmt.toString()); +    vestAmt = await vestingContract.vestedAmount(owner2.address, endTimestamp2); +    console.log(\"NO WITHDRAWAL, AT VEST END: \",vestAmt.toString()); + +    await (await vestingContract.connect(owner2).withdraw()).wait();   -    (await vestingContract.revokeClaim(recipientAddress)).wait(); +    vestAmt = await vestingContract.vestedAmount(owner2.address, startTimestamp); +    console.log(\"WITHDRAWAL, BEFORE VEST START: \",vestAmt.toString()); +    vestAmt = await vestingContract.vestedAmount(owner2.address, startTimestamp2); +    console.log(\"WITHDRAWAL, AT VEST START: \",vestAmt.toString()); +    vestAmt = await vestingContract.vestedAmount(owner2.address, halfWay); +    console.log(\"WITHDRAWAL, HALF WAY THROUGH VEST: \",vestAmt.toString()); +    vestAmt = await vestingContract.vestedAmount(owner2.address, endTimestamp2); +    console.log(\"WITHDRAWAL, AT VEST END: \",vestAmt.toString());   -    // Make sure it gets reverted -    expect(await (await vestingContract.getClaim(recipientAddress)).isActive).to.be.equal(false);    });      it('prohibits a random user from revoking a valid claim', async () => { ```  ## Tools Used Manual Inspection  ## Recommended Mitigation Steps For active claims, there is no reason to consider `_claim.amountWithdrawn`, as it will always have been below or equal to `vestAmt` at any point in time. So only consider `vestAmt` for inactive claims. For them, return the lowest of `vestAmt` and  `_claim.amountWithdrawn`. This will keep the values monotonic with time without distorting the historical values. It will act as though `_claim.amountWithdrawn` was withdrawn and the claim was revoked in the block when `vestAmt` reached `_claim.amountWithdrawn`. That is a distortion, but it is required to provide monotonicity. "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/102", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/101", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/100", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "AccessProtected.setAdmin might lead to accidental loss of administrative control", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/99", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "AccessProtected.setAdmin might lead to accidental loss of administrative control"}, {"title": "`VTVLVesting.sol` doesn't take in consideration the amount of decimals of the token used", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/97", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "`VTVLVesting.sol` doesn't take in consideration the amount of decimals of the token used"}, {"title": "Permanent freeze of vested tokens due to overflow in _baseVestedAmount", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/95", "labels": ["bug", "3 (High Risk)", "sponsor confirmed"], "target": "2022-09-vtvl-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-09-vtvl/blob/f68b7f3e61dad0d873b5b5a1e8126b839afeab5f/contracts/VTVLVesting.sol#L176   # Vulnerability details  ## Description  The _baseVestedAmount() function calculates vested amount for some (claim, timestamp) pair. It is wrapped by several functions, like vestedAmount, which is used in withdraw() to calculate how much a user can retrieve from their claim. Therefore, it is critical that this function will calculate correctly for users to receive their funds.  Below is the calculation of the linear vest amount: ``` uint112 linearVestAmount = _claim.linearVestAmount * truncatedCurrentVestingDurationSecs / finalVestingDurationSecs; ``` Importantly, _claim.linearVestAmount is of type uint112 and truncatedCurrentVestingDurationSecs is of type uint40. Using compiler >= 0.8.0,  the product cannot exceed uint112 or else the function reverts due to overflow. In fact, we can show that uint112 is an inadequate size for this calculation.  The max value for uint112 is 5192296858534827628530496329220096.  Seconds in year = 3600 * 24 * 365 = 31536000  Tokens that inherit from ERC20 like the ones used in VTVL have 18 decimal places -> 1000000000000000000 This means the maximum number of tokens that are safe to vest for one year is 2**112 / 10e18 / (3600 * 24 * 365) = just 16,464,665 tokens.  This is definitely not a very large amount and it is expected that some projects will mint a similar or larger amount for vesting for founders / early employees. For 4 year vesting, the safe amount drops to 4,116,166. Projects that are not forewarned about this size limit are likely to suffer from freeze of funds of employees, which will require very patchy manual revocation and restructuring of the vesting to not overflow.  ## Impact Employees/founders do not have access to their vested tokens.  ## Proof of Concept Below is a test that demonstrates the overflow issue, 1 year after 17,000,000 tokens have matured. ``` describe('Long vest fail', async () => {   let vestingContract: VestingContractType;   // Default params   // linearly Vest 10000, every 1s, between TS 1000 and 2000   // additionally, cliff vests another 5000, at TS = 900   const recipientAddress = await randomAddress();   const startTimestamp = BigNumber.from(1000);   const endTimestamp = BigNumber.from(1000 + 3600 * 24 * 365);   const midTimestamp = BigNumber.from(1000 + (3600 * 24 * 365) / 2);   const cliffReleaseTimestamp = BigNumber.from(0);   const linearVestAmount = BigNumber.from('170000000000000000000000000');   const cliffAmount = BigNumber.from(0);   const releaseIntervalSecs = BigNumber.from(5);    before(async () => {     const {vestingContract: _vc} = await createPrefundedVestingContract({tokenName, tokenSymbol, initialSupplyTokens});     vestingContract = _vc;     await vestingContract.createClaim(recipientAddress, startTimestamp, endTimestamp, cliffReleaseTimestamp, releaseIntervalSecs, linearVestAmount, cliffAmount);   });    it('half term works', async() => {     expect(await vestingContract.vestedAmount(recipientAddress, midTimestamp)).to.be.equal('85000000000000000000000000');   });    it('full term fails', async() => {     // Note: at exactly the cliff time, linear vested amount won't yet come in play as we're only at second 0     await expect(vestingContract.vestedAmount(recipientAddress, endTimestamp)).to.be.revertedWithPanic(0x11     );   }); }); ```  ## Tools Used Manual audit, hardhat / chai.  ## Recommended Mitigation Steps Perform the intermediate calculation of linearVestAmount using the uint256 type. ``` uint112 linearVestAmount = uint112( uint256(_claim.linearVestAmount) * truncatedCurrentVestingDurationSecs / finalVestingDurationSecs); ``` "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/93", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "User can accidentally revoke all admin privileges", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/92", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "User can accidentally revoke all admin privileges"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/87", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/86", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/82", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/81", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/80", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/79", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/76", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/75", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/74", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/73", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/72", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/71", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/70", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/69", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/68", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "The withdrawETH function should be added", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/65", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "The withdrawETH function should be added"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/63", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/62", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "`AccessProtected:setAdmin` can accidentally set every admin to false", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/58", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-vtvl-findings", "body": "`AccessProtected:setAdmin` can accidentally set every admin to false"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/57", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/56", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/49", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/48", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/46", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/44", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/43", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/42", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/37", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/36", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/34", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/32", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/31", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/27", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/26", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "`owner` is never checked in `AccessProtected` ", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/25", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "`owner` is never checked in `AccessProtected` "}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/22", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/20", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/19", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/17", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/16", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/15", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/13", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/11", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/9", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/8", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Reentrancy may allow an admin to steal funds", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/6", "labels": ["bug", "enhancement", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-09-vtvl-findings", "body": "Reentrancy may allow an admin to steal funds"}, {"title": "Supply cap of VariableSupplyERC20Token is not properly enforced", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/3", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed"], "target": "2022-09-vtvl-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-09-vtvl/blob/main/contracts/token/VariableSupplyERC20Token.sol#L36-L46   # Vulnerability details  ## Impact The admin of the token is not constrained to minting `maxSupply_`, they can mint any number of tokens.  ## Proof of Concept ```js // If we're using maxSupply, we need to make sure we respect it // mintableSupply = 0 means mint at will if(mintableSupply > 0) {  require(amount <= mintableSupply, \"INVALID_AMOUNT\");  // We need to reduce the amount only if we're using the limit, if not just leave it be  mintableSupply -= amount; } ``` The logic is as follows: if the amount that can be minted is zero, treat this as an infinite mint. Else require that the minted amount is not larger than mintable supply.  One can note that it is possible to mint all mintable supply. Then the mintable supply will be `0` which will be interpreted as infinity and any number of tokens will be possible to be minted.  ## Tools Used Manual analysis  ## Recommended Mitigation Steps Treat `2 ** 256 - 1` as infinity instead of `0`. "}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/2", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-vtvl-findings", "body": "Gas Optimizations"}, {"title": "Agreements & Disclosures", "html_url": "https://github.com/code-423n4/2022-09-vtvl-findings/issues/1", "labels": [], "target": "2022-09-vtvl-findings", "body": "Agreements & Disclosures"}, {"title": "`GobblerReserve.withdraw` can lock gobblers", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/480", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "`GobblerReserve.withdraw` can lock gobblers"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/477", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/474", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/466", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/464", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/460", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Incorrect Goo issuance", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/458", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "Incorrect Goo issuance"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/457", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/446", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/442", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/436", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/435", "labels": ["bug", "G (Gas Optimization)", "old-submission-method"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/433", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/432", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/430", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/428", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/424", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/419", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/415", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/407", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "ArtGobblers.sol#L461 : Price of legendaryGobblerAuctionData.startPrice could be truncated due to incorrect typecasting.", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/403", "labels": ["bug", "QA (Quality Assurance)", "sponsor disputed"], "target": "2022-09-artgobblers-findings", "body": "ArtGobblers.sol#L461 : Price of legendaryGobblerAuctionData.startPrice could be truncated due to incorrect typecasting."}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/400", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "miss of  ERC721 & ERC1155 validation in gobble() ", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/398", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "miss of  ERC721 & ERC1155 validation in gobble() "}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/397", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/396", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/395", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": " USE SAFETRANSFERFROM INSTEAD OF TRANSFERFROM FOR ERC720 TRANSFERS", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/391", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": " USE SAFETRANSFERFROM INSTEAD OF TRANSFERFROM FOR ERC720 TRANSFERS"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/386", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/384", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/381", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/379", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/373", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/367", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/364", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/359", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/358", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/356", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/344", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/338", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/337", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Wrong balanceOf user after minting legendary gobbler", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/333", "labels": ["bug", "2 (Med Risk)", "sponsor confirmed", "old-submission-method", "selected-for-report"], "target": "2022-09-artgobblers-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-09-artgobblers/blob/d2087c5a8a6a4f1b9784520e7fe75afa3a9cbdbe/src/ArtGobblers.sol#L458   # Vulnerability details  ## Impact  In `ArtGobblers.mintLegendaryGobbler()` function, line 458 calculates the number of gobblers user owned after minting ```solidity // We subtract the amount of gobblers burned, and then add 1 to factor in the new legendary. getUserData[msg.sender].gobblersOwned = uint32(getUserData[msg.sender].gobblersOwned - cost + 1); ```  It added 1 to factor in the new legendary. But actually, this new legendary is accounted in `_mint()` function already ```solidity function _mint(address to, uint256 id) internal {     // Does not check if the token was already minted or the recipient is address(0)     // because ArtGobblers.sol manages its ids in such a way that it ensures it won't     // double mint and will only mint to safe addresses or msg.sender who cannot be zero.      unchecked {         ++getUserData[to].gobblersOwned;     }      getGobblerData[id].owner = to;      emit Transfer(address(0), to, id); } ```  So the result is `gobblersOwned` is updated incorrectly. And `balanceOf()` will return wrong value.   ## Proof of Concept  Script modified from `testMintLegendaryGobbler()` ```solidity function testMintLegendaryGobbler() public {     uint256 startTime = block.timestamp + 30 days;     vm.warp(startTime);     // Mint full interval to kick off first auction.     mintGobblerToAddress(users[0], gobblers.LEGENDARY_AUCTION_INTERVAL());     uint256 cost = gobblers.legendaryGobblerPrice();     assertEq(cost, 69);     setRandomnessAndReveal(cost, \"seed\");     uint256 emissionMultipleSum;     for (uint256 curId = 1; curId <= cost; curId++) {         ids.push(curId);         assertEq(gobblers.ownerOf(curId), users[0]);         emissionMultipleSum += gobblers.getGobblerEmissionMultiple(curId);     }      assertEq(gobblers.getUserEmissionMultiple(users[0]), emissionMultipleSum);      uint256 beforeSupply = gobblers.balanceOf(users[0]);     vm.prank(users[0]);     uint256 mintedLegendaryId = gobblers.mintLegendaryGobbler(ids);      // Check balance     assertEq(gobblers.balanceOf(users[0]), beforeSupply - cost + 1); } ```  ## Tools Used Foundry  ## Recommended Mitigation Steps Consider remove adding 1 when calculating `gobblersOwned` ```solidity getUserData[msg.sender].gobblersOwned = uint32(getUserData[msg.sender].gobblersOwned - cost); ```   "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/331", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/328", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Possible centralization issue around RandProvider", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/327", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "selected-for-report"], "target": "2022-09-artgobblers-findings", "body": "Possible centralization issue around RandProvider"}, {"title": "use of transferFrom in the GobblerReserve can cause loss of NFTs", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/325", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "use of transferFrom in the GobblerReserve can cause loss of NFTs"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/324", "labels": ["bug", "G (Gas Optimization)", "old-submission-method", "selected-for-report"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/323", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method", "selected-for-report"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/311", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/310", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/306", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/292", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/290", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "The requestRandomSeed() function can be called more than once in 24 hours ", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/288", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "The requestRandomSeed() function can be called more than once in 24 hours "}, {"title": "Reveal feature halted. Unfair disadvantage for holders with unrevealed Gobblers", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/284", "labels": ["bug", "disagree with severity", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-artgobblers-findings", "body": "Reveal feature halted. Unfair disadvantage for holders with unrevealed Gobblers"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/282", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/281", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Miners can re-roll the Chainlink VRF output", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/273", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "Miners can re-roll the Chainlink VRF output"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/271", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/269", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/267", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/266", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/263", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/260", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/249", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/248", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/242", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/241", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/235", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/231", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/227", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/226", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/220", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "Can Recover Gobblers Burnt In Legendary Mint", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/219", "labels": ["bug", "3 (High Risk)", "primary issue", "sponsor confirmed", "selected-for-report"], "target": "2022-09-artgobblers-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-09-artgobblers/blob/d2087c5a8a6a4f1b9784520e7fe75afa3a9cbdbe/src/ArtGobblers.sol#L432 https://github.com/code-423n4/2022-09-artgobblers/blob/d2087c5a8a6a4f1b9784520e7fe75afa3a9cbdbe/src/ArtGobblers.sol#L890   # Vulnerability details  ## Impact Allows users to mint legendary Gobblers for free assuming they have the necessary amount of Gobblers to begin with. This is achieved by \"reviving\" sacrificed Gobblers after having called `mintLegendaryGobbler`.  ## Severity Justification This vulnerability allows the violation of the fundamental mechanics of in-scope contracts, allowing buyers to purchase legendary Gobblers at almost no cost outside of temporary liquidity requirements which can be reduced via the use of NFT flashloans.  ## Proof of Concept (PoC): Add the following code to the `ArtGobblersTest` contract in  `test/ArtGobblers.t.sol`  and run the test via `forge test --match-test testCanReuseSacrificedGobblers  -vvv`: ```solidity function testCanReuseSacrificedGobblers() public {  address user = users[0];   // setup legendary mint  uint256 startTime = block.timestamp + 30 days;  vm.warp(startTime);  mintGobblerToAddress(user, gobblers.LEGENDARY_AUCTION_INTERVAL());  uint256 cost = gobblers.legendaryGobblerPrice();  assertEq(cost, 69);  setRandomnessAndReveal(cost, \"seed\");   for (uint256 curId = 1; curId <= cost; curId++) {   ids.push(curId);   assertEq(gobblers.ownerOf(curId), users[0]);  }   // do token approvals for vulnerability exploit  vm.startPrank(user);  for (uint256 i = 0; i < ids.length; i++) {   gobblers.approve(user, ids[i]);  }  vm.stopPrank();   // mint legendary  vm.prank(user);  uint256 mintedLegendaryId = gobblers.mintLegendaryGobbler(ids);   // confirm user owns legendary  assertEq(gobblers.ownerOf(mintedLegendaryId), user);   // show that contract initially thinks tokens are burnt  for (uint256 i = 0; i < ids.length; i++) {   hevm.expectRevert(\"NOT_MINTED\");   gobblers.ownerOf(ids[i]);  }   // \"revive\" burnt tokens by transferring from zero address with approval  // which was not reset  vm.startPrank(user);  for (uint256 i = 0; i < ids.length; i++) {   gobblers.transferFrom(address(0), user, ids[i]);   assertEq(gobblers.ownerOf(ids[i]), user);  }  vm.stopPrank(); } ```  ## Tools Used Manual review.  ## Recommended Mitigation Steps Ensure token ownership is reset in the for-loop of the `mintLegendaryGobbler` method. Alternatively to reduce the gas cost of `mintLegendaryGobbler` by saving on the approval deletion, simply check the `from` address in `transferFrom`, revert if it's `address(0)`. Note that the latter version would also require changing the `getApproved` view method such that it checks the owner of the token and returns the zero-address if the owner is zero, otherwise the `getApproved` method would return the old owner after the underlying Gobbler was sacrificed. "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/217", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/213", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/211", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/208", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/207", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/205", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/201", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Zero Address/Value and Empty String/Bytes Checks When Deploying Contracts", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/198", "labels": ["bug", "disagree with severity", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "Zero Address/Value and Empty String/Bytes Checks When Deploying Contracts"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/197", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/195", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/187", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/185", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/183", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/164", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/163", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/160", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/157", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "The reveal process could brick if `randProvider` stops working", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/153", "labels": ["bug", "2 (Med Risk)", "edited-by-warden", "selected-for-report"], "target": "2022-09-artgobblers-findings", "body": "The reveal process could brick if `randProvider` stops working"}, {"title": "`mintLegendaryGobbler()` will always revert when the cost of minting is past a certain threshold due to exceeding block gas limit", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/151", "labels": ["bug", "duplicate", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "`mintLegendaryGobbler()` will always revert when the cost of minting is past a certain threshold due to exceeding block gas limit"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/149", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/145", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/138", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/129", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/110", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/99", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/94", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "VRGDA auction breaks if buy pressure is too strong", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/93", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "VRGDA auction breaks if buy pressure is too strong"}, {"title": "Minting legendary gobblers not clearing burned gobblers emissionMultiple (and other properties)", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/91", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "Minting legendary gobblers not clearing burned gobblers emissionMultiple (and other properties)"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/87", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "ArtGobblers.sol#gobblerPrice start price calculation from mintTime leading to excessively cheap gobblers at first", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/85", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "ArtGobblers.sol#gobblerPrice start price calculation from mintTime leading to excessively cheap gobblers at first"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/84", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/83", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/80", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/78", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/76", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/63", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/60", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/58", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/56", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Authentication can be improved", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/48", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "Authentication can be improved"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/42", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/41", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/38", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/37", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/35", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/33", "labels": ["bug", "G (Gas Optimization)", "old-submission-method"], "target": "2022-09-artgobblers-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/11", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/6", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/2", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-artgobblers-findings", "body": "QA Report"}, {"title": "Agreements & Disclosures", "html_url": "https://github.com/code-423n4/2022-09-artgobblers-findings/issues/1", "labels": [], "target": "2022-09-artgobblers-findings", "body": "Agreements & Disclosures"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/398", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/397", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/396", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/392", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/391", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/389", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/387", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/385", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/383", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/382", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/379", "labels": ["bug", "G (Gas Optimization)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/376", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/374", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/368", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/366", "labels": ["bug", "G (Gas Optimization)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/363", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "[M2] Incomplete reentrancy protection of `submitAndDeposit()`", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/360", "labels": ["bug", "question", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "[M2] Incomplete reentrancy protection of `submitAndDeposit()`"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/359", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/358", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/356", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/354", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/353", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/351", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/348", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/347", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "`recoverEther` not updating `currentWithheldETH` breaks calculation of withheld amount for further deposits", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/346", "labels": ["bug", "2 (Med Risk)", "in discussion", "primary issue", "recoverEther offsets currentWithheldETH"], "target": "2022-09-frax-findings", "body": "`recoverEther` not updating `currentWithheldETH` breaks calculation of withheld amount for further deposits"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/345", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/344", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/342", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/340", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Malicious owner can DoS `frxETHMinter.depositEther` by adding the same validator twice", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/338", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "Malicious owner can DoS `frxETHMinter.depositEther` by adding the same validator twice"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/337", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/335", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/332", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/331", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/330", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/328", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/324", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/323", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/322", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/320", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/319", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/315", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/309", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/307", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/305", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/304", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Duplicate or incorrect validators temporarily disable `depositEther`", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/302", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "Duplicate or incorrect validators temporarily disable `depositEther`"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/301", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/295", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/294", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/290", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/288", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/281", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/276", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/272", "labels": ["bug", "G (Gas Optimization)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/266", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/263", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/262", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/261", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/259", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/258", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/257", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/253", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/252", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/251", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/250", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/248", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/243", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/242", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/241", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/240", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/238", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/237", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/236", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/235", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/234", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/232", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/229", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/228", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/227", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Withheld ETH shoud not be sent back to the frxETHMinter contract itself", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/221", "labels": ["bug", "2 (Med Risk)"], "target": "2022-09-frax-findings", "body": "Withheld ETH shoud not be sent back to the frxETHMinter contract itself"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/220", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "`getNextValidator()` error could temporarily make `depositEther()` inoperable ", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/219", "labels": ["bug", "2 (Med Risk)"], "target": "2022-09-frax-findings", "body": "`getNextValidator()` error could temporarily make `depositEther()` inoperable "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/218", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/213", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/210", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/207", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/202", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/200", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/199", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/198", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Reentrancy in frxETHMinter.depositEther()", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/195", "labels": ["bug", "question", "in discussion", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Reentrancy in frxETHMinter.depositEther()"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/193", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/191", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "ERC-20 approve front-running", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/188", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "ERC-20 approve front-running"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/187", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/186", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/184", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/183", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Should not allow APPROVE type(uint256).max qty for permit ", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/182", "labels": ["G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Should not allow APPROVE type(uint256).max qty for permit "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/181", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/179", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/178", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/177", "labels": ["bug", "G (Gas Optimization)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/176", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/175", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/172", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/170", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/169", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/168", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/167", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/166", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/164", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/161", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/160", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/159", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/157", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/155", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/154", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/151", "labels": ["bug", "QA (Quality Assurance)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/144", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/143", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/140", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Outdated Withdrawal Credential Setup", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/136", "labels": ["bug", "disagree with severity", "primary issue", "QA (Quality Assurance)", "sponsor acknowledged", "outdated withdrawal creds"], "target": "2022-09-frax-findings", "body": "Outdated Withdrawal Credential Setup"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/129", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/127", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/121", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/120", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/118", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/115", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "frxETH can be depegged due to ETH staking balance slashing ", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/113", "labels": ["bug", "2 (Med Risk)"], "target": "2022-09-frax-findings", "body": "frxETH can be depegged due to ETH staking balance slashing "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/112", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/111", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Rewards delay release could cause yields steal and loss", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/110", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "in discussion", "primary issue", "sponsor confirmed", "syncRewards sniping"], "target": "2022-09-frax-findings", "body": "# Lines of code  https://github.com/corddry/ERC4626/blob/643cd044fac34bcbf64e1c3790a5126fec0dbec1/src/xERC4626.sol#L78-L97   # Vulnerability details  ## Impact  In the current rewards accounting, vault shares in `deposit()` and `redeem()` can not correctly record the spot yields generated by the staked asset. Yields are released over the next rewards cycle. As a result, malicious users can steal yields from innocent users by picking special timing to `deposit()` and `redeem()`.   ## Proof of Concept  In `syncRewards()`, the current asset balance is break into 2 parts: `storedTotalAssets` and `lastRewardAmount/nextRewards`. The `lastRewardAmount` is the surplus balance of the asset, or the most recent yields. ```solidity // lib/ERC4626/src/xERC4626.sol     function syncRewards() public virtual {         // ...          uint256 nextRewards = asset.balanceOf(address(this)) - storedTotalAssets_ - lastRewardAmount_;          storedTotalAssets = storedTotalAssets_ + lastRewardAmount_;          uint32 end = ((timestamp + rewardsCycleLength) / rewardsCycleLength) * rewardsCycleLength;          lastRewardAmount = nextRewards.safeCastTo192();         // ...                 rewardsCycleEnd = end;     } ```  And in the next rewards cycle, `lastRewardAmount` will be linearly added to `storedTotalAssets`, their sum is the return value of `totalAssets()`:  ```solidity     function totalAssets() public view override returns (uint256) {         // ...          if (block.timestamp >= rewardsCycleEnd_) {             // no rewards or rewards fully unlocked             // entire reward amount is available             return storedTotalAssets_ + lastRewardAmount_;         }          // rewards not fully unlocked         // add unlocked rewards to stored total         uint256 unlockedRewards = (lastRewardAmount_ * (block.timestamp - lastSync_)) / (rewardsCycleEnd_ - lastSync_);         return storedTotalAssets_ + unlockedRewards;     } ```  `totalAssets()` will be referred when `deposit()` and `redeem()`. ```solidity // lib/solmate/src/mixins/ERC4626.sol      function deposit(uint256 assets, address receiver) public virtual returns (uint256 shares) {         require((shares = previewDeposit(assets)) != 0, \"ZERO_SHARES\");         // ...         _mint(receiver, shares);         // ...     }      function redeem() public virtual returns (uint256 assets) {         // ...         require((assets = previewRedeem(shares)) != 0, \"ZERO_ASSETS\");          beforeWithdraw(assets, shares);          _burn(owner, shares);          // ...          asset.safeTransfer(receiver, assets);     }      function previewDeposit(uint256 assets) public view virtual returns (uint256) {         return convertToShares(assets);     }      function previewRedeem(uint256 shares) public view virtual returns (uint256) {         return convertToAssets(shares);     }      function convertToShares(uint256 assets) public view virtual returns (uint256) {         uint256 supply = totalSupply;           return supply == 0 ? assets : assets.mulDivDown(supply, totalAssets());     }      function convertToAssets(uint256 shares) public view virtual returns (uint256) {         uint256 supply = totalSupply;           return supply == 0 ? shares : shares.mulDivDown(totalAssets(), supply);     } ```  Based on the above rules, there are 2 potential abuse cases: 1. If withdraw just after the `rewardsCycleEnd` timestamp, a user can not get the yields from last rewards cycle. Since the `totalAssets()` only contain `storedTotalAssets` but not the yields part. It takes 1 rewards cycle to linearly add to the `storedTotalAssets`.   Assume per 10,000 asset staking generate yields of 70 for 7 days, and the reward cycle is 1 day. A malicious user Alice can do the following: - watch the mempool for  `withdraw(10,000)` from account Bob, front run it with `syncRewards()`, so that the most recent yields of amount 70 from Bob will stay in the vault.  - Alice will also deposit a 10,000 to take as much shares as possible.  - after 1 rewards cycle of 1 day, `redeem()` to take the yields of 70.   Effectively steal the yields from Bob. The profit for Alice is not 70, because after 1 day, her own deposit also generates some yield, in this example this portion is 1. At the end, Alice steal yield of amount 60.   2. When the Multisig Treasury transfers new yields into the vault, the new yields will accumulate until `syncRewards()` is called. It is possible that yields from multiple rewards cycles accumulates, and being released in the next cycle.  Knowing that the yields has been accumulated for 3 rewards cycles, a malicious user can `deposit()` and call `syncRewards()` to trigger the release of the rewards. `redeem()` after 1 cycle.  Here the malicious user gets yields of 3 cycles, lose 1 in the waiting cycle. The net profit is 2 cycle yields, and the gained yields should belong to the other users in the vault.    ## Tools Used Manual analysis.  ## Recommended Mitigation Steps   - for the `lastRewardAmount` not released, allow the users to redeem as it is linearly released later. - for the accumulated yields, only allow users to redeem the yields received after 1 rewards cycle after the deposit."}, {"title": "Centralization risk: admin have privileges: admin can set address to mint any amount of frxETH, can set any address as validator, and change important state in frxETHMinter and withdraw fund from frcETHMinter ", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/107", "labels": ["bug", "2 (Med Risk)"], "target": "2022-09-frax-findings", "body": "Centralization risk: admin have privileges: admin can set address to mint any amount of frxETH, can set any address as validator, and change important state in frxETHMinter and withdraw fund from frcETHMinter "}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/106", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/104", "labels": ["bug", "G (Gas Optimization)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Validators are matched out of order, making early validators possibly forever unmatched", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/102", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "Validators are matched out of order, making early validators possibly forever unmatched"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/98", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/97", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/96", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/95", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/91", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/86", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/85", "labels": ["bug", "G (Gas Optimization)", "old-submission-method"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/82", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Frontrunning by malicious validator", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/81", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged", "sponsor confirmed"], "target": "2022-09-frax-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-09-frax/blob/main/src/frxETHMinter.sol#L120   # Vulnerability details  ## Impact Frontrunning by malicious validator changing withdrawal credentials  ## Proof of Concept A malicious validator can frontrun depositEther transaction for its pubKey and deposit 1 ether for different withdrawal credential, thereby setting withdrawal credit before deposit of 32 ether by contract and thereby when 32 deposit ether are deposited, the withdrawal credential is also what was set before rather than the one being sent in depositEther transaction  ## Recommended Mitigation Steps Set withdrawal credentials for validator by depositing 1 ether with desired withdrawal credentials, before adding it in Operator Registry"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/80", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/75", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/72", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/71", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/70", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/69", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/64", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/56", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/55", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/54", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Rewards distribution will fail", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/51", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "Rewards distribution will fail"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/50", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/49", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/47", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/45", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/43", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/42", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/38", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/37", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Add the validator repeatedly", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/36", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "Add the validator repeatedly"}, {"title": "sfrxETH: The volatile result of previewMint() may prevent mintWithSignature from working", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/35", "labels": ["bug", "2 (Med Risk)", "sponsor acknowledged"], "target": "2022-09-frax-findings", "body": "sfrxETH: The volatile result of previewMint() may prevent mintWithSignature from working"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/31", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/30", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/29", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/26", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/20", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "frxETHMinter: Non-conforming ERC20 tokens not recoverable ", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/18", "labels": ["bug", "2 (Med Risk)"], "target": "2022-09-frax-findings", "body": "frxETHMinter: Non-conforming ERC20 tokens not recoverable "}, {"title": "frxETHMinter.depositEther may run out of gas, leading to lost ETH", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/17", "labels": ["bug", "2 (Med Risk)", "in discussion", "primary issue", "sponsor confirmed", "depositEther OOG"], "target": "2022-09-frax-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-09-frax/blob/dc6684f77b4e9bd965e8862be7f5fb71473a4c4c/src/frxETHMinter.sol#L129   # Vulnerability details  ## Impact `frxETHMinter.depositEther` always iterates over all deposits that are possible with the current balance (`(address(this).balance - currentWithheldETH) / DEPOSIT_SIZE`). However, when a lot of ETH was deposited into the contract / it was not called in a long time, this loop can reach the gas limit. When this happens, no more calls to `depositEther` are possible, as it will always run out of gas.  Of course, the probability that such a situation arises depends on the price of ETH. For >1,000 USD it would need require someone to deposit a large amount of money (which can also happen, there are whales with thousands of ETH, so if one of them would decide to use frxETH, the problem can arise). For lower prices, it can happen even for small (in dollar terms) deposits. And in general, the correct functionality of a protocol should not depend on the price of ETH.  ## Proof Of Concept Jerome Powell continues to rise interest rates, he just announced the next rate hike to 450%. The crypto market crashes, ETH is at 1 USD. Bob buys 100,000 ETH for 100,000 USD and deposits them into `frxETHMinter`. Because of this deposit, `numDeposit` within `depositEther` is equal to 3125. Therefore, every call to the function runs out of gas and it is not possible to deposit this ETH into the deposit contract.  ## Recommended Mitigation Steps It should be possible to specify an upper limit for the number of deposits such that progress is possible, even when a lot of ETH was deposited into the contract."}, {"title": "Wrong accounting logic when syncRewards() is called within beforeWithdraw makes withdrawals impossible", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/15", "labels": ["bug", "question", "3 (High Risk)", "primary issue", "sponsor confirmed", "syncRewards wrong nextRewards"], "target": "2022-09-frax-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-09-frax/blob/dc6684f77b4e9bd965e8862be7f5fb71473a4c4c/src/sfrxETH.sol#L50   # Vulnerability details  ## Impact `sfrxETH.beforeWithdraw` first calls the `beforeWithdraw` of `xERC4626`, which decrements `storedTotalAssets` by the given amount. If the timestamp is greater than the `rewardsCycleEnd`, `syncRewards` is called. However, the problem is that the assets have not been transfered out yet, meaning `asset.balanceOf(address(this))` still has the old value. On the other hand, `storedTotalAssets` was already updated. Therefore, the following calculation will be inflated by the amount for which the withdrawal was requested: ``` uint256 nextRewards = asset.balanceOf(address(this)) - storedTotalAssets_ - lastRewardAmount_; ``` This has severe consequences: 1.) During the following reward period, `lastRewardAmount` is too high, which means that too much rewards are paid out too users who want to withdraw. A user could exploit this to steal the assets of other users. 2.) When `syncRewards()` is called the next time, it is possible that the `nextRewards` calculation underflows because `lastRewardAmount > asset.balanceOf(address(this))`. This is very bad because `syncRewards()` will be called in every withdrawal (after the `rewardsCycleEnd`) and none of them will succeed because of the underflow. Depositing more also does not help here, it just increases `asset.balanceOf(address(this))` and `storedTotalAssets` by the same amount, which does not eliminate the underflow.  Note that this bug does not require a malicious user or a targeted attack to surface. It can (and probably will) happen in practice just by normal user interactions with the vault (which is for instance shown in the PoC).  ## Proof Of Concept Consider the following test: ``` function testTotalAssetsAfterWithdraw() public {                 uint128 deposit = 1 ether;         uint128 withdraw = 1 ether;         // Mint frxETH to this testing contract from nothing, for testing         mintTo(address(this), deposit);          // Generate some sfrxETH to this testing contract using frxETH         frxETHtoken.approve(address(sfrxETHtoken), deposit);         sfrxETHtoken.deposit(deposit, address(this));         require(sfrxETHtoken.totalAssets() == deposit);          vm.warp(block.timestamp + 1000);         // Withdraw frxETH (from sfrxETH) to this testing contract         sfrxETHtoken.withdraw(withdraw, address(this), address(this));         vm.warp(block.timestamp + 1000);         sfrxETHtoken.syncRewards();         require(sfrxETHtoken.totalAssets() == deposit - withdraw);     } ```  This is a normal user interaction where a user deposits into the vault, and makes a withdrawal some time later. However, at this point the `syncRewards()` within the `beforeWithdraw` is executed. Because of that, the documented accounting mistake happens and the next call (in fact every call that will be done in the future) to `syncRewards()` reverts with an underflow.  ## Recommended Mitigation Steps Call `syncRewards()` before decrementing `storedTotalAssets`, i.e.: ``` function beforeWithdraw(uint256 assets, uint256 shares) internal override {  if (block.timestamp >= rewardsCycleEnd) { syncRewards(); }  super.beforeWithdraw(assets, shares); // call xERC4626's beforeWithdraw AFTER } ``` Then, `asset.balanceOf(address(this))` and `storedTotalAssets` are still in sync within `syncRewards()`."}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/14", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "removeValidator() and removeMinter() may fail due to exceeding gas limit", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/12", "labels": ["bug", "2 (Med Risk)"], "target": "2022-09-frax-findings", "body": "removeValidator() and removeMinter() may fail due to exceeding gas limit"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/11", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/10", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/8", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/7", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "sfrxETH contract doesn't allow depositing or minting with signature", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/6", "labels": ["in discussion", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "sfrxETH contract doesn't allow depositing or minting with signature"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/5", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-09-frax-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/4", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/3", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/2", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-09-frax-findings", "body": "Gas Optimizations"}, {"title": "Agreements & Disclosures", "html_url": "https://github.com/code-423n4/2022-09-frax-findings/issues/1", "labels": [], "target": "2022-09-frax-findings", "body": "Agreements & Disclosures"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/843", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/835", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/830", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/826", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/806", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/788", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/780", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/779", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/763", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/736", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/692", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/687", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "StandardPolicyERC1155.sol returns amount == 1 instead of amount == order.amount", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/666", "labels": ["bug", "3 (High Risk)", "sponsor acknowledged", "selected for report"], "target": "2022-10-blur-findings", "body": "StandardPolicyERC1155.sol returns amount == 1 instead of amount == order.amount"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/642", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/641", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/639", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/633", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/597", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/582", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Ether can be locked in BlurExchange contract", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/569", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "Ether can be locked in BlurExchange contract"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/557", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/551", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/550", "labels": ["bug", "G (Gas Optimization)", "selected for report"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/546", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/545", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/522", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/508", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/497", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/479", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/438", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/434", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/405", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/378", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/352", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/344", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/338", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/295", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/284", "labels": ["bug", "QA (Quality Assurance)", "selected for report"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/277", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/276", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/274", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Order hashes remain valid through upgrades of BlurExchange implementation, leading to user risks", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/267", "labels": ["bug", "QA (Quality Assurance)", "sponsor acknowledged", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "Order hashes remain valid through upgrades of BlurExchange implementation, leading to user risks"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/262", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/251", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/243", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/238", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Contract Owner Possesses Too Many Privileges", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/235", "labels": ["bug", "2 (Med Risk)", "selected for report"], "target": "2022-10-blur-findings", "body": "Contract Owner Possesses Too Many Privileges"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/225", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/202", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/155", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/142", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/141", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/133", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/115", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/111", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/94", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/83", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/81", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/74", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-blur-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/40", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-blur-findings", "body": "Gas Optimizations"}, {"title": "Agreements & Disclosures", "html_url": "https://github.com/code-423n4/2022-10-blur-findings/issues/1", "labels": [], "target": "2022-10-blur-findings", "body": "Agreements & Disclosures"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/313", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/303", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Governor can rug pull the escrow", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/300", "labels": ["bug", "2 (Med Risk)", "selected-for-report"], "target": "2022-10-thegraph-findings", "body": "Governor can rug pull the escrow"}, {"title": "If L1GraphTokenGateway's outboundTransfer is called by a contract, the entire msg.value is blackholed, whether the ticket got redeemed or not.", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/294", "labels": ["bug", "2 (Med Risk)", "disagree with severity", "sponsor acknowledged", "selected-for-report"], "target": "2022-10-thegraph-findings", "body": "If L1GraphTokenGateway's outboundTransfer is called by a contract, the entire msg.value is blackholed, whether the ticket got redeemed or not."}, {"title": "GraphToken permit() function is vulnerable to approval double spending :", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/293", "labels": ["bug", "QA (Quality Assurance)", "sponsor disputed"], "target": "2022-10-thegraph-findings", "body": "GraphToken permit() function is vulnerable to approval double spending :"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/292", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/290", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "After proposed 0.8.0 upgrade kicks in, L2 finalizeInboundTransfer might not work.", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/289", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed", "selected-for-report"], "target": "2022-10-thegraph-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-10-thegraph/blob/309a188f7215fa42c745b136357702400f91b4ff/contracts/l2/gateway/L2GraphTokenGateway.sol#L70   # Vulnerability details  ## Description  L2GraphTokenGateway uses the onlyL1Counterpart modifier to make sure finalizeInboundTransfer is only called from L1GraphTokenGateway. Its implementation is:  ```Solidity modifier onlyL1Counterpart() {         require(             msg.sender == AddressAliasHelper.applyL1ToL2Alias(l1Counterpart),             \"ONLY_COUNTERPART_GATEWAY\"         );         _;     } ```  It uses applyL1ToL2Alias defined as:  ``` uint160 constant offset = uint160(0x1111000000000000000000000000000000001111);      /// @notice Utility function that converts the address in the L1 that submitted a tx to     /// the inbox to the msg.sender viewed in the L2     /// @param l1Address the address in the L1 that triggered the tx to L2     /// @return l2Address L2 address as viewed in msg.sender     function applyL1ToL2Alias(address l1Address) internal pure returns (address l2Address) {         l2Address = address(uint160(l1Address) + offset);     } ```  This behavior matches with how Arbitrum augments the sender's address to L2. The issue is that I've spoken with the team and they are [planning](https://github.com/graphprotocol/contracts/pull/725) an upgrade from Solidity 0.7.6 to 0.8.0. Their proposed [changes](https://github.com/graphprotocol/contracts/blob/c4d3cb56cb4032dbb3a0f1b7535b5d94ccf86222/contracts/arbitrum/AddressAliasHelper.sol) will break this function, because under 0.8.0, this line has a ~ 1/15 chance to overflow:  `l2Address = address(uint160(l1Address) + offset);`  Interestingly, the sum intentionally wraps around using the uint160 type to return a correct address, but this wrapping will overflow in 0.8.0  ## Impact  There is a ~6.5% chance that finalizeInboundTransfer will not work.  ## Proof of Concept  l1Address is L1GraphTokenGateway, suppose its address is 0xF000000000000000000000000000000000000000.  Then 0xF000000000000000000000000000000000000000 + 0x1111000000000000000000000000000000001111 > UINT160_MAX , meaning overflow.  ## Tools Used  Manual audit  ## Recommended Mitigation Steps  Wrap the calculation in an unchecked block, which will make it behave correctly."}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/288", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/282", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/281", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/278", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/276", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/274", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/273", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/271", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/269", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/263", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/262", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/261", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/260", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/256", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/255", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/254", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/242", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/241", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/233", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/230", "labels": ["bug", "primary issue", "QA (Quality Assurance)", "selected-for-report"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/227", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/219", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/215", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/209", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "`L1GraphTokenGateway` should not allow `l1Router` as `callhookWhitelist`", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/198", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "`L1GraphTokenGateway` should not allow `l1Router` as `callhookWhitelist`"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/196", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/194", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/191", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/188", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/185", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/184", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/174", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "GRT may be locked in the destination contract forever if the user or external developers bridge it to a contract that requires onTokenTransfer without sending data.", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/168", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "GRT may be locked in the destination contract forever if the user or external developers bridge it to a contract that requires onTokenTransfer without sending data."}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/159", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/153", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "initialize function in L2GraphToken.sol, BridgeEscrow.sol, L2GraphTokenGateway.sol, L1GraphTokenGateway.sol can be invoked multiple times from the implementation contract.", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/149", "labels": ["bug", "2 (Med Risk)", "resolved", "sponsor confirmed", "edited-by-warden", "selected-for-report"], "target": "2022-10-thegraph-findings", "body": "# Lines of code  https://github.com/code-423n4/2022-10-thegraph/blob/309a188f7215fa42c745b136357702400f91b4ff/contracts/l2/gateway/L2GraphTokenGateway.sol#L87 https://github.com/code-423n4/2022-10-thegraph/blob/309a188f7215fa42c745b136357702400f91b4ff/contracts/l2/token/L2GraphToken.sol#L48 https://github.com/code-423n4/2022-10-thegraph/blob/309a188f7215fa42c745b136357702400f91b4ff/contracts/gateway/L1GraphTokenGateway.sol#L99 https://github.com/code-423n4/2022-10-thegraph/blob/309a188f7215fa42c745b136357702400f91b4ff/contracts/gateway/BridgeEscrow.sol#L20   # Vulnerability details  ## Impact  initialize function in L2GraphToken.sol, BridgeEscrow.sol, L2GraphTokenGateway.sol, L1GraphTokenGateway.sol   can be invoked multiple times from the implementation contract.  this means a compromised implementation can reinitialize the contract above and   become the owner to complete the privilege escalation then drain the user's fund.  Usually in Upgradeable contract, a initialize function is protected by the modifier  ```solidity  initializer ```  to make sure the contract can only be initialized once.  ## Proof of Concept Provide direct links to all referenced code in GitHub. Add screenshots, logs, or any other relevant proof that illustrates the concept.  1. The implementation contract is compromised,  2. The attacker reinitialize the BridgeEscrow contract  ```     function initialize(address _controller) external onlyImpl {         Managed._initialize(_controller);     } ```  the onlyGovernor modifier's result depends on the controller because  ```solidity     function _onlyGovernor() internal view {         require(msg.sender == controller.getGovernor(), \"Caller must be Controller governor\");     } ```  3. The attacker have the governor access to the BridgeEscrow,   4. The attack can call the approve function to approve malicious contract   ```solidity      function approveAll(address _spender) external onlyGovernor {         graphToken().approve(_spender, type(uint256).max);     } ```  5. The attack can drain all the GRT token from the BridgeEscrow.  ## Tools Used  Manual Review  ## Recommended Mitigation Steps  We recommend the project use the modifier   ```solidity  initializer ```  to protect the initialize function from being reinitiated  ```solidity    function initialize(address _owner) external onlyImpl initializer  { ``` "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/144", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/143", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/121", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/118", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/117", "labels": ["bug", "G (Gas Optimization)", "primary issue", "selected-for-report"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/111", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/109", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/108", "labels": ["bug", "QA (Quality Assurance)", "edited-by-warden"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/103", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/95", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/93", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/88", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/86", "labels": ["bug", "G (Gas Optimization)", "edited-by-warden"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/80", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/78", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/62", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/60", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}, {"title": "Gas Optimizations", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/49", "labels": ["bug", "G (Gas Optimization)"], "target": "2022-10-thegraph-findings", "body": "Gas Optimizations"}, {"title": "The older version of the openzeppelin library was used ", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/39", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "The older version of the openzeppelin library was used "}, {"title": "QA Report", "html_url": "https://github.com/code-423n4/2022-10-thegraph-findings/issues/38", "labels": ["bug", "QA (Quality Assurance)"], "target": "2022-10-thegraph-findings", "body": "QA Report"}]