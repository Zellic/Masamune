[
    {
        "title": "3.1 The sendOFT function call can be blocked",
        "* Target": " OFTWrapper",
        "* Category": " Coding Mistakes",
        "* Likelihood": " Low ",
        "* Severity": " Low",
        "* Impact": " Low ",
        "Description": "The contract owner can set any bps value of the variables defaultBps and the oftBps [_oft] in the range from 0 to the maximum BPS_DENOMINATOR inclusive. But during the sendOFT function call, the getAmountAndFees function will check that the final bps value is less than BPS_DENOMINATOR and revert the transaction if it equals or more.  function getAmountAndFees( address _oft, uint256 _amount, uint256 _callerBps  ) public view override returns (  uint256 amount, uint256 wrapperFee, uint256 callerFee  ) {  uint256 wrapperBps;  if (oftBps[_oft] == MAX_UINT) { wrapperBps = 0;  } else if (oftBps[_oft] > 0) { wrapperBps = oftBps[_oft];  } else { wrapperBps = defaultBps;  } require(wrapperBps + _callerBps < BPS_DENOMINATOR, \"OFTWrapper:  Fee bps exceeds 100%\");  Zellic 7 LayerZero    ...)) } ",
        "Impact": "In case if the contract owner sets the defaultBps to the maximum BPS_DENOMINATOR value, the sendOFT function call will be blocked for all unassigned _oft addresses. lso if the maximum oftBps value is set for a specific _oft address, the sendOFT function call with this _oft address will be reverted. ",
        "Recommendations": "Set a limit for the defaultBps and oftBps[_oft] values strictly less than the BPS_DENOM INATOR value. ",
        "Remediation": "This issue was fixed by LayerZero in commit f11289a5.  Zellic 8 LayerZero  https://github.com/LayerZero-Labs/oft-wrapper/commit/f11289a5621171c1338f01607a2a93ced00c4500   4 Audit Results  At the time of our audit, the code was not deployed to mainnet evm.  During our audit, we discovered 1 low risk findings. LayerZero acknowledged this finding and implemented fix.  4.1 Disclaimers  This assessment does not provide any warranties about finding all possible issues within its scope; in other words, the evaluation results do not guarantee the absence of any subsequent issues. Zellic, of course, also cannot make guarantees about any additional code added to the assessed project after the audit version of our assess- ment. Furthermore, because a single assessment can never be considered compre- hensive, we always recommendmultiple independent assessments pairedwith a bug bounty program.  For each finding, Zellic provides a recommended solution. All code in these recom- mendations are intended to convey how an issue may be resolved (i.e., the idea), but they may not be tested or functional code.  Finally, the contents of this assessment report are for informational purposes only; do not construe any information in this report as legal, tax, investment, or financial advice. Nothing contained in this report constitutes a solicitation or endorsement of a project by Zellic.  Zellic 9 LayerZero   \tAbout Zellic \tExecutive Summary \tIntroduction \tAbout LayerZero OFT Wrapper \tMethodology \tScope \tProject Overview \tProject Timeline  \tDetailed Findings \tThe sendOFT function call can be blocked  \tAudit Results \tDisclaimers  "
    }
]